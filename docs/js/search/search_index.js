var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionHandler.html",[0,0.539,1,1.392]],["body/interfaces/ActionHandler.html",[0,0.887,1,2.578,2,0.271,3,0.271,4,0.176,5,0.265,6,1.288,7,0.858,8,1.557,9,1.692,10,1.627,11,1.471,12,0.572,13,2.418,14,0.353,15,1.357,16,1.931,17,1.931,18,0.052,19,1.766,20,0.565,21,0.833,22,1.42,23,1.692,24,1.185,25,0.98,26,0.323,27,1.931,28,0.398,29,0.833,30,1.546,31,1.127,32,1.692,33,1.127,34,1.127,35,1.127,36,1.692,37,0.485,38,0.351,39,0.98,40,1.127,41,2.031,42,1.127,43,1.963,44,1.127,45,1.127,46,1.127,47,1.127,48,0.98,49,1.046,50,0.98,51,1.127,52,1.127,53,1.127,54,0.684,55,2.031,56,0.794,57,1.471,58,1.325,59,0.353,60,1.766,61,0.794,62,0.98,63,1.941,64,1.766,65,1.766,66,2.291,67,1.963,68,1.692,69,0.914,70,1.963,71,1.933,72,1.718,73,1.766,74,1.127,75,2.031,76,1.127,77,1.692,78,1.963,79,1.692,80,1.718,81,1.692,82,0.485,83,1.692,84,1.766,85,1.692,86,1.766,87,1.127,88,0.858,89,1.546,90,1.766,91,1.692,92,0.661,93,2.031,94,0.477,95,0.914,96,1.692,97,1.692,98,1.127,99,1.127,100,1.127,101,1.127,102,1.127,103,1.692,104,1.127,105,1.127,106,0.858,107,1.127,108,1.127,109,0.753,110,0.98,111,0.858,112,1.127,113,0.858,114,1.127,115,1.692,116,1.288,117,0.858,118,0.222,119,0.054,120,1.692,121,1.471,122,1.471,123,0.98,124,1.692,125,1.963,126,0.98,127,2.031,128,1.692,129,1.127,130,1.127,131,0.98,132,1.127,133,2.257,134,2.103,135,0.858,136,0.858,137,1.127,138,1.692,139,1.127,140,0.662,141,0.98,142,1.127,143,0.98,144,1.127,145,0.026,146,0.026]],["title/interfaces/ActionMapping.html",[0,0.539,43,1.392]],["body/interfaces/ActionMapping.html",[0,0.882,1,2.545,2,0.266,3,0.266,4,0.174,5,0.315,6,1.53,7,0.844,8,1.531,9,1.108,10,1.583,11,0.964,12,0.554,13,2.401,14,0.35,15,1.116,18,0.052,19,1.453,20,0.554,21,0.819,22,1.482,23,1.108,24,1.135,26,0.479,28,0.395,29,0.83,30,1.53,31,1.108,32,1.67,33,1.108,34,1.108,35,1.108,36,1.67,37,0.577,38,0.35,39,1.453,40,1.67,41,2.619,42,1.67,43,2.088,44,1.108,45,1.108,46,1.108,47,1.108,48,0.964,49,1.035,50,0.964,51,1.108,52,1.108,53,1.108,54,0.677,55,2.524,56,0.786,57,1.453,58,1.314,59,0.44,60,1.748,61,0.786,62,0.964,63,1.934,64,1.748,65,1.748,66,2.278,67,1.946,68,1.67,69,0.905,70,1.946,71,1.921,72,1.704,73,1.748,74,1.108,75,2.01,76,1.108,77,1.67,78,1.946,79,1.67,80,1.704,81,1.67,82,0.479,83,1.67,84,1.748,85,1.67,86,1.748,87,1.108,88,0.844,89,1.53,90,1.748,91,1.67,92,0.653,93,2.01,94,0.544,95,0.905,96,1.67,97,1.67,98,1.108,99,1.108,100,1.108,101,1.108,102,1.108,103,1.67,104,1.108,105,1.108,106,0.844,107,1.108,108,1.108,109,0.741,110,0.964,111,0.844,112,1.108,113,0.844,114,1.108,115,1.67,116,1.272,117,0.844,118,0.218,119,0.053,120,1.67,121,1.453,122,1.453,123,0.964,124,1.67,125,1.946,126,0.964,127,2.01,128,1.67,129,1.108,130,1.108,131,0.964,132,1.108,133,2.238,134,2.088,135,0.844,136,0.844,137,1.108,138,1.67,139,1.108,140,0.651,141,0.964,142,1.108,143,0.964,144,1.108,145,0.026,146,0.026,147,3.092,148,1.899,149,1.899]],["title/interfaces/DropTarget.html",[0,0.539,57,1.392]],["body/interfaces/DropTarget.html",[0,0.887,1,2.554,2,0.271,3,0.271,4,0.177,5,0.318,6,1.547,7,0.859,9,1.128,10,1.591,11,0.981,12,0.557,13,2.258,14,0.412,15,1.132,18,0.052,19,1.472,20,0.557,21,0.842,22,1.326,23,1.128,24,1.143,26,0.486,28,0.398,29,0.833,30,1.547,31,1.128,32,1.693,33,1.128,34,1.128,35,1.128,36,1.693,37,0.486,38,0.351,39,0.981,40,1.128,41,2.032,42,1.128,43,1.964,44,1.128,45,1.128,46,1.128,47,1.128,48,0.981,49,1.046,50,0.981,51,1.128,52,1.128,53,1.128,54,0.684,55,2.032,56,0.946,57,1.767,58,1.547,59,0.398,60,1.767,61,0.794,62,0.981,63,1.941,64,1.767,65,1.767,66,2.292,67,1.964,68,1.693,69,0.914,70,1.964,71,1.934,72,1.719,73,1.767,74,1.128,75,2.032,76,1.128,77,1.693,78,1.964,79,1.693,80,1.719,81,1.693,82,0.486,83,1.693,84,1.767,85,1.693,86,1.767,87,1.128,88,0.859,89,1.547,90,1.767,91,1.693,92,0.662,93,2.032,94,0.477,95,0.914,96,1.693,97,1.693,98,1.128,99,1.128,100,1.128,101,1.128,102,1.128,103,1.693,104,1.128,105,1.128,106,0.859,107,1.128,108,1.128,109,0.754,110,0.981,111,0.859,112,1.128,113,0.859,114,1.128,115,1.693,116,1.289,117,0.859,118,0.222,119,0.054,120,1.693,121,1.472,122,1.472,123,0.981,124,1.693,125,1.964,126,0.981,127,2.032,128,1.693,129,1.128,130,1.128,131,0.981,132,1.128,133,2.258,134,2.104,135,0.859,136,0.859,137,1.128,138,1.693,139,1.128,140,0.662,141,0.981,142,1.128,143,0.981,144,1.128,145,0.026,146,0.026,150,1.933,151,1.933]],["title/modules/NgxTreeModule.html",[152,1.069,153,1.392]],["body/modules/NgxTreeModule.html",[2,0.324,3,0.324,4,0.211,5,0.211,18,0.052,20,0.58,24,0.607,28,0.485,38,0.337,49,0.695,54,0.65,109,0.902,118,0.266,145,0.03,146,0.03,152,1.29,153,2.835,154,1.57,155,0.792,156,2.621,157,1.57,158,2.621,159,1.865,160,1.865,161,1.865,162,1.563,163,1.563,164,1.783,165,1.563,166,1.563,167,1.783,168,1.563,169,1.783,170,1.563,171,1.366,172,1.783,173,2.667,174,1.865,175,1.865,176,2.312,177,3.307,178,2.312,179,3.307,180,3.114,181,0.607,182,4.884,183,1.865,184,2.312,185,2.312,186,2.312,187,1.865,188,2.312,189,1.865,190,2.312,191,1.865,192,2.312,193,1.865,194,2.312,195,1.865,196,2.312,197,2.312,198,2.312,199,2.312,200,3.307,201,2.312,202,2.312,203,1.716,204,2.245,205,1.865,206,2.667,207,3.114,208,1.865,209,2.312,210,1.865,211,2.312,212,1.865,213,2.312,214,2.312,215,2.312]],["title/interfaces/RawTreeUIOptions.html",[0,0.539,121,1.392]],["body/interfaces/RawTreeUIOptions.html",[0,0.868,1,2.52,2,0.254,3,0.254,4,0.165,5,0.388,6,1.886,7,0.804,9,1.057,10,1.56,11,0.919,12,0.547,13,2.184,14,0.342,15,1.077,18,0.052,19,1.401,20,0.556,21,0.831,22,1.282,23,1.057,24,1.159,26,0.674,28,0.388,29,0.821,30,1.486,31,1.057,32,1.611,33,1.057,34,1.057,35,1.057,36,1.611,37,0.462,38,0.346,39,0.919,40,1.057,41,1.953,42,1.057,43,1.899,44,1.057,45,1.057,46,1.057,47,1.057,48,0.919,49,1.005,50,0.919,51,1.057,52,1.057,53,1.057,54,0.658,55,1.953,56,0.919,57,1.401,58,1.282,59,0.426,60,2.045,61,0.763,62,0.919,63,2.018,64,2.045,65,2.045,66,2.31,67,1.899,68,1.611,69,0.879,70,2.241,71,1.886,72,1.962,73,2.155,74,1.057,75,2.478,76,1.953,77,1.611,78,1.899,79,1.611,80,1.663,81,1.611,82,0.56,83,1.611,84,1.698,85,1.611,86,1.698,87,1.057,88,0.804,89,1.486,90,1.698,91,1.611,92,0.63,93,1.953,94,0.587,95,0.879,96,1.611,97,1.611,98,1.057,99,1.057,100,1.057,101,1.057,102,1.057,103,1.611,104,1.057,105,1.057,106,0.804,107,1.057,108,1.057,109,0.706,110,0.919,111,0.804,112,1.057,113,0.804,114,1.057,115,1.611,116,1.226,117,0.804,118,0.208,119,0.051,120,1.611,121,1.698,122,1.401,123,0.919,124,1.611,125,1.899,126,0.919,127,1.953,128,1.611,129,1.057,130,1.057,131,0.919,132,1.057,133,2.184,134,2.045,135,0.804,136,0.804,137,1.057,138,1.611,139,1.057,140,0.62,141,0.919,142,1.057,143,0.919,144,1.057,145,0.025,146,0.025,216,1.077,217,1.81,218,1.81,219,0.706,220,1.81,221,1.81,222,1.81,223,1.81]],["title/directives/TreeDragDirective.html",[171,0.72,224,0.72]],["body/directives/TreeDragDirective.html",[2,0.406,3,0.406,4,0.265,5,0.464,12,0.333,14,0.265,18,0.052,21,0.728,22,1.704,24,0.76,25,1.47,26,0.833,28,0.397,37,0.485,38,0.2,48,1.961,49,1.161,50,1.961,59,0.397,63,1.507,67,1.47,71,1.286,82,0.647,94,0.445,95,0.76,118,0.333,136,1.717,140,0.992,145,0.035,146,0.035,171,1.015,181,0.76,203,2.256,204,1.965,205,2.334,216,1.507,219,1.507,224,1.142,225,4.094,226,2.895,227,2.623,228,4.348,229,1.129,230,1.507,231,4.64,232,3.863,233,1.395,234,4.64,235,4.348,236,3.116,237,2.895,238,3.15,239,4.348,240,4.64,241,3.863,242,3.863,243,2.895,244,3.863,245,2.895,246,2.895,247,2.895,248,2.895,249,3.863,250,2.895,251,4.348,252,0.992,253,2.334,254,2.895,255,2.895,256,3.507,257,2.895,258,2.895,259,1.965,260,2.334,261,2.895,262,2.895,263,2.895,264,2.895,265,2.334,266,2.895,267,2.895,268,4.348,269,2.895,270,3.863,271,2.895,272,2.895,273,2.895,274,2.895,275,2.895,276,2.895,277,2.895,278,2.895,279,2.895,280,2.895,281,2.895,282,2.895]],["title/injectables/TreeDraggingTargetService.html",[203,1.218,283,1.392]],["body/injectables/TreeDraggingTargetService.html",[2,0.486,3,0.486,4,0.317,5,0.467,14,0.317,15,1.694,18,0.052,21,0.887,24,1.344,25,1.76,26,0.832,28,0.433,29,0.58,37,0.58,38,0.239,49,1.538,59,0.397,63,1.352,82,0.58,88,1.929,92,0.791,94,0.399,118,0.399,145,0.04,146,0.04,181,0.91,203,1.929,216,1.694,219,1.352,259,3.218,283,2.406,284,5.115,285,3.466,286,4.968,287,4.968,288,3.466,289,3.466,290,3.466,291,3.466,292,4.739,293,3.466,294,4.341,295,2.795,296,3.466,297,4.341,298,3.466]],["title/interfaces/TreeEvent.html",[0,0.539,299,2.21]],["body/interfaces/TreeEvent.html",[0,0.889,2,0.52,3,0.52,4,0.339,5,0.477,12,0.426,14,0.413,15,1.765,18,0.051,20,0.6,21,0.873,26,0.851,28,0.339,38,0.256,56,0.845,58,1.27,59,0.485,63,1.905,66,2.479,86,2.582,94,0.61,145,0.041,146,0.041,147,3.648,299,3.648,300,3.705,301,5.085,302,3.705,303,3.705,304,3.705,305,3.705]],["title/components/TreeLoadingComponent.html",[119,0.077,162,0.824]],["body/components/TreeLoadingComponent.html",[2,0.425,3,0.425,4,0.277,5,0.432,12,0.63,14,0.277,18,0.05,20,0.599,21,0.745,26,0.745,28,0.364,29,0.507,37,0.507,38,0.209,54,0.595,59,0.364,61,0.908,82,0.745,92,0.691,95,1.046,118,0.349,119,0.138,145,0.036,146,0.036,155,1.038,162,1.42,163,0.911,164,1.038,165,0.911,166,0.911,167,1.038,168,0.911,169,1.038,170,0.911,171,0.796,172,1.038,181,0.796,183,3.809,224,1.046,229,1.182,230,2.116,233,1.475,252,1.837,306,1.619,307,1.346,308,2.099,309,3.029,310,2.703,311,2.703,312,4.201,313,1.769,314,3.981,315,1.769,316,3.981,317,2.258,318,2.258,319,3.029,320,3.019,321,3.029,322,3.029,323,2.057,324,1.538,325,1.538,326,1.769,327,2.099,328,1.346,329,1.346,330,1.346,331,1.346,332,1.346,333,1.346,334,1.346,335,1.346,336,1.346,337,1.182,338,1.346,339,1.346,340,1.346]],["title/components/TreeNodeComponent.html",[119,0.077,163,0.824]],["body/components/TreeNodeComponent.html",[2,0.374,3,0.374,4,0.243,5,0.462,12,0.619,14,0.429,18,0.051,20,0.622,21,0.832,22,1.251,24,1.177,26,0.832,28,0.381,29,0.446,30,1.183,37,0.446,38,0.184,54,0.523,56,0.833,58,0.913,59,0.429,61,0.833,62,1.352,69,1.094,70,1.854,72,1.622,82,0.751,92,0.608,94,0.516,95,0.959,118,0.306,119,0.132,145,0.033,146,0.033,155,0.913,162,0.8,163,1.347,164,0.913,165,0.8,166,0.8,167,0.913,168,0.8,169,0.913,170,0.8,171,0.699,172,0.913,181,0.699,195,4.08,216,1.424,219,1.039,224,0.959,229,1.039,230,2.077,233,1.493,252,1.797,306,1.536,307,1.183,308,2.248,313,1.622,315,1.622,317,2.115,318,2.115,324,1.352,325,1.352,326,1.622,327,1.992,328,1.183,329,1.183,330,1.183,331,1.183,332,1.183,333,1.183,334,1.183,335,1.183,336,1.183,337,1.039,338,1.183,339,1.183,340,1.183,341,2.663,342,3.651,343,3.651,344,2.663,345,2.663,346,2.663,347,2.663,348,2.663,349,3.651,350,2.663,351,2.663,352,2.663,353,2.663,354,2.147,355,2.147,356,2.147,357,2.663,358,2.147,359,2.663,360,2.663,361,2.663,362,2.663,363,2.663]],["title/components/TreeNodeContentComponent.html",[119,0.077,168,0.824]],["body/components/TreeNodeContentComponent.html",[2,0.392,3,0.392,4,0.255,5,0.45,12,0.623,14,0.418,18,0.05,20,0.645,21,0.715,26,0.8,28,0.345,29,0.468,37,0.468,38,0.193,54,0.549,56,0.861,59,0.418,61,0.861,69,1.122,82,0.715,92,0.637,94,0.491,95,0.991,118,0.321,119,0.134,145,0.034,146,0.034,155,0.957,162,0.84,163,0.84,164,0.957,165,0.84,166,0.84,167,0.957,168,1.374,169,0.957,170,0.84,171,0.734,172,0.957,181,0.734,187,3.969,224,0.991,229,1.09,230,2.092,233,1.512,252,1.812,306,1.567,307,1.241,308,2.187,310,2.561,311,2.561,313,1.676,315,1.676,317,2.168,318,2.168,320,2.899,323,1.896,324,1.418,325,1.418,326,1.676,327,2.032,328,1.241,329,1.241,330,1.241,331,1.241,332,1.241,333,1.241,334,1.241,335,1.241,336,1.241,337,1.09,338,1.241,339,1.241,340,1.241,364,2.793,365,3.341,366,3.772,367,3.772,368,2.793,369,2.793,370,2.793,371,2.793,372,2.793,373,3.772]],["title/components/TreeNodeDropSlotComponent.html",[119,0.077,170,0.824]],["body/components/TreeNodeDropSlotComponent.html",[2,0.362,3,0.362,4,0.235,5,0.439,12,0.617,14,0.404,15,1.392,18,0.051,20,0.637,21,0.686,22,1.591,24,0.677,25,1.308,26,0.777,28,0.374,29,0.431,30,1.145,37,0.431,38,0.178,54,1.071,56,0.814,58,1.403,59,0.374,61,1.009,69,1.076,71,1.586,72,1.964,82,0.74,92,0.588,94,0.509,118,0.296,119,0.13,145,0.033,146,0.033,155,0.883,162,0.774,163,0.774,164,0.883,165,0.774,166,0.774,167,0.883,168,0.774,169,0.883,170,1.329,171,0.677,172,0.883,181,0.677,189,3.873,216,1.392,219,1.005,224,0.937,229,1.005,230,2.066,233,1.444,252,1.786,306,0.883,307,1.145,308,2.134,310,2.423,311,2.423,313,1.586,315,1.586,323,1.749,326,1.586,327,1.964,328,1.145,329,1.145,330,1.145,331,1.145,332,1.145,333,1.145,334,1.145,335,1.145,336,1.145,337,1.005,338,1.145,339,1.145,340,1.145,354,2.078,355,2.078,356,2.878,358,3.302,374,2.576,375,3.569,376,3.569,377,3.569,378,3.569,379,4.095,380,2.576,381,2.576,382,2.576,383,3.569,384,2.576,385,3.569,386,4.095,387,2.576,388,2.576,389,2.576,390,2.576]],["title/components/TreeNodeExpanderComponent.html",[119,0.077,165,0.824]],["body/components/TreeNodeExpanderComponent.html",[2,0.397,3,0.397,4,0.259,5,0.452,12,0.624,14,0.42,18,0.05,20,0.646,21,0.72,26,0.803,28,0.348,29,0.474,37,0.474,38,0.196,54,0.557,56,0.869,59,0.42,61,0.869,69,1.13,82,0.72,92,0.646,94,0.495,95,1,118,0.326,119,0.135,145,0.035,146,0.035,155,0.971,162,0.851,163,0.851,164,0.971,165,1.382,166,0.851,167,0.971,168,0.851,169,0.971,170,0.851,171,0.744,172,0.971,181,0.744,191,3.985,224,1,229,1.105,230,2.096,233,1.517,252,1.816,306,1.576,307,1.258,308,2.196,313,1.692,315,1.692,317,2.183,318,2.183,320,2.92,324,1.438,325,1.438,326,1.692,327,2.043,328,1.258,329,1.258,330,1.258,331,1.258,332,1.258,333,1.258,334,1.258,335,1.258,336,1.258,337,1.105,338,1.258,339,1.258,340,1.258,391,2.832,392,3.355,393,3.807,394,3.807,395,2.832,396,2.832,397,2.832,398,2.832,399,2.832]],["title/components/TreeNodeWrapperComponent.html",[119,0.077,166,0.824]],["body/components/TreeNodeWrapperComponent.html",[2,0.341,3,0.341,4,0.222,5,0.466,12,0.611,14,0.394,18,0.051,20,0.645,21,0.664,24,1.042,25,2.014,26,0.842,28,0.363,29,0.407,37,0.407,38,0.168,54,0.478,56,0.782,59,0.415,61,0.782,69,1.042,82,0.721,88,1.079,92,0.554,94,0.496,95,0.9,109,0.948,118,0.28,119,0.128,145,0.031,146,0.031,155,0.832,162,0.73,163,0.73,164,0.832,165,0.73,166,1.295,167,0.832,168,0.73,169,0.832,170,0.73,171,0.638,172,0.832,181,0.638,193,4.111,204,1.649,206,3.475,208,1.959,216,1.336,219,0.948,224,0.9,227,2.325,229,0.948,230,2.046,233,1.456,236,1.959,238,3.289,252,1.767,256,1.959,306,1.477,307,1.079,308,2.265,313,1.522,315,1.522,317,2.014,318,2.014,324,1.233,325,1.233,326,1.522,327,1.915,328,1.079,329,1.079,330,1.079,331,1.079,332,1.079,333,1.079,334,1.079,335,1.079,336,1.079,337,0.948,338,1.079,339,1.079,340,1.079,400,2.429,401,3.967,402,3.967,403,3.967,404,4.714,405,3.425,406,3.425,407,4.308,408,4.308,409,4.308,410,2.429,411,3.425,412,2.762,413,2.429,414,2.429,415,2.429,416,2.429,417,2.429,418,2.429,419,2.429,420,2.429,421,3.425,422,2.429,423,2.429,424,2.429,425,2.429]],["title/changelog.html",[116,1.021,426,1.853,427,2.297]],["body/changelog.html",[4,0.275,10,1.229,12,0.572,18,0.033,20,0.59,22,1.229,28,0.186,29,0.504,37,0.742,38,0.248,39,1.032,49,1.078,54,0.399,58,0.696,59,0.387,73,1.528,80,1.338,84,1.032,89,0.903,90,1.032,94,0.51,106,0.903,109,1.652,110,2.392,111,1.762,113,1.593,117,0.903,119,0.057,134,1.032,135,0.903,136,1.881,140,1.032,143,1.032,145,0.027,146,0.027,152,1.399,203,1.338,212,1.639,224,0.534,227,1.379,233,0.611,238,1.379,253,2.428,259,1.379,265,1.639,283,1.032,295,3.197,306,1.615,337,0.793,365,1.379,392,3.115,412,1.639,428,2.032,429,2.032,430,2.032,431,1.639,432,2.032,433,2.032,434,2.032,435,2.032,436,2.032,437,2.032,438,2.032,439,2.032,440,2.032,441,5.08,442,5.08,443,3.197,444,2.032,445,4.967,446,3.965,447,2.892,448,2.032,449,3.586,450,4.006,451,2.032,452,2.032,453,3.586,454,2.032,455,2.032,456,2.032,457,2.032,458,5.234,459,2.032,460,3.01,461,2.032,462,2.032,463,2.032,464,2.892,465,2.032,466,3.01,467,2.032,468,2.032,469,2.032,470,3.586,471,2.032,472,2.032,473,2.032,474,2.032,475,2.032,476,2.032,477,2.032,478,2.032,479,2.032,480,2.032,481,3.965,482,3.586,483,3.01,484,1.639,485,3.01,486,2.032,487,5.126,488,3.01,489,2.032,490,2.032,491,2.032,492,2.032,493,2.032,494,2.032,495,3.01,496,3.965,497,2.032,498,2.032,499,2.032,500,2.032,501,2.032,502,2.032,503,2.032,504,2.032,505,3.586,506,2.032,507,2.032,508,3.01,509,2.032,510,2.032,511,2.032,512,3.01,513,2.032,514,2.032,515,1.639,516,2.032,517,2.032,518,2.032,519,2.032,520,2.032,521,3.965,522,2.032,523,2.032,524,2.032,525,2.032,526,2.032,527,2.032,528,3.586,529,2.032,530,2.032,531,2.032,532,2.032,533,4.233,534,2.032,535,3.965,536,2.032,537,2.032,538,2.032,539,2.032,540,2.032,541,2.032,542,2.032,543,2.032,544,2.032,545,2.032,546,2.032,547,2.032,548,2.032,549,2.032,550,2.032,551,2.032,552,2.032,553,3.586,554,1.639,555,2.032,556,1.639,557,2.032,558,2.032,559,2.032,560,2.032,561,2.032,562,3.01,563,1.639,564,3.01,565,2.032,566,2.032,567,2.032,568,2.032,569,2.032,570,2.032,571,2.032,572,2.032,573,2.032,574,2.032,575,2.032,576,2.032,577,2.032,578,2.032,579,2.032,580,2.032,581,2.032,582,3.01,583,2.032,584,2.032,585,2.032,586,2.032,587,2.032,588,2.032,589,2.032,590,2.032,591,3.586,592,2.032,593,2.032,594,2.032,595,2.032,596,2.032,597,2.032,598,1.639,599,2.032,600,2.032,601,2.032,602,2.032,603,2.032,604,2.032,605,2.032,606,3.01,607,3.01,608,2.032,609,2.032,610,2.032,611,2.032,612,3.01,613,2.032,614,2.032,615,2.032,616,2.032,617,2.032,618,2.032,619,2.032,620,3.01,621,2.032,622,2.032,623,2.032,624,2.032,625,2.032,626,2.032,627,2.032,628,2.032,629,2.032,630,2.032,631,2.032,632,2.032,633,2.032,634,2.032,635,2.032,636,2.032,637,2.032,638,1.639,639,1.639,640,2.032,641,2.032]],["title/miscellaneous/functions.html",[10,1.128,642,1.341]],["body/miscellaneous/functions.html",[5,0.462,6,2.153,7,2.153,10,1.533,12,0.515,14,0.333,18,0.048,20,0.515,29,0.749,56,1.021,59,0.333,82,0.846,94,0.608,122,2.271,123,1.847,125,2.271,126,1.847,140,1.247,141,1.847,145,0.041,146,0.041,219,1.972,642,2.124,643,4.474,644,3.639,645,4.474,646,4.075,647,4.474,648,4.474,649,4.474,650,4.844,651,4.474,652,3.639,653,3.639,654,5.351,655,4.474,656,4.474,657,3.639,658,3.639,659,3.639,660,4.474]],["title/index.html",[14,0.21,116,1.021,426,1.853]],["body/index.html",[0,0.558,4,0.348,11,1.44,12,0.622,18,0.051,19,1.44,20,0.569,28,0.475,38,0.196,49,0.853,61,0.647,69,0.745,78,1.44,80,1.693,89,1.693,94,0.439,106,1.693,111,1.26,113,1.26,117,2.133,118,0.326,119,0.135,135,1.26,140,0.972,145,0.035,146,0.035,152,1.487,153,1.935,154,1.926,156,2.587,157,1.926,158,2.587,180,3.073,181,0.745,203,1.26,207,2.287,210,3.073,216,1.107,233,1.145,252,1.306,260,2.287,283,1.44,306,1.306,312,2.287,365,1.926,392,2.922,431,2.287,443,2.287,447,3.073,464,2.287,484,2.287,515,2.287,554,3.073,556,3.711,563,2.287,598,2.287,638,2.287,639,2.287,661,3.811,662,2.836,663,2.836,664,2.836,665,2.836,666,2.836,667,4.602,668,4.304,669,4.304,670,4.304,671,3.811,672,2.836,673,2.836,674,2.836,675,2.836,676,2.836,677,2.836,678,2.836,679,3.811,680,2.836,681,2.287,682,4.304,683,2.836,684,2.836,685,2.836,686,2.836,687,2.836,688,2.836,689,2.836,690,3.811,691,2.836,692,2.836,693,3.811,694,2.836,695,2.836,696,2.836,697,2.836,698,2.836,699,2.836,700,2.836,701,2.836,702,2.836,703,3.811,704,2.836,705,2.836,706,2.836,707,2.836,708,2.836,709,2.836,710,2.836,711,2.836,712,2.836,713,2.836,714,2.836,715,2.836,716,3.811,717,2.836,718,2.836,719,2.836,720,2.836,721,3.811,722,3.811,723,2.836,724,2.836,725,2.836,726,2.836,727,2.836,728,2.836,729,2.836,730,2.836,731,2.836,732,2.836,733,2.836,734,2.836]],["title/modules.html",[152,1.453]],["body/modules.html",[18,0.045,145,0.045,146,0.045,152,1.693,153,2.203,450,3.499,681,3.499,735,4.339,736,4.339]],["title/overview.html",[737,3.003]],["body/overview.html",[0,0.623,18,0.051,38,0.219,118,0.365,119,0.089,131,1.61,145,0.037,146,0.037,152,1.6,153,2.879,154,2.153,155,1.087,156,2.153,157,2.153,158,2.153,159,2.557,160,2.557,161,2.557,162,1.56,163,1.56,164,1.779,165,1.56,166,1.56,167,1.779,168,1.56,169,1.779,170,1.56,171,1.363,172,1.779,173,3.308,174,2.557,175,2.557,224,0.833,283,1.61,737,2.557,738,4.102,739,4.547]],["title/miscellaneous/typealiases.html",[642,1.341,740,3.292]],["body/miscellaneous/typealiases.html",[5,0.437,6,1.808,7,2.331,10,1.798,14,0.372,18,0.044,59,0.372,60,2.58,64,2.58,65,2.58,145,0.044,146,0.044,225,3.281,642,2.375,646,4.23,741,4.068,742,5.082,743,4.784]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0.1.0",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["0.2.2",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["0.3.2",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["0.3.3",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["0.3.4",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["0.5.2",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["0.5.3",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["0.7.0",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["0.7.1",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["0.8.0",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["02fa222",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["06bd7a9",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":74,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["1",{"_index":131,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"overview.html":{}}}],["10",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["103b9b8",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["13067d3",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":739,"title":{},"body":{"overview.html":{}}}],["20",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["2017",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["2018",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["21a101",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["21a2e3c",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["2b3f565",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["2b51365",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["2c2a966",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["2e85611",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["302b6fc",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["333036f",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["33ca365",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["3bf532b",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["3e3fd7b",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["420967a",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["4c9d403",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["4debcf5",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":212,"title":{},"body":{"modules/NgxTreeModule.html":{},"changelog.html":{}}}],["5936f8f",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["5e3be34",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["5ef5498",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["6.0",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["6324459",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["63674e2",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["64027fb",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["677284d",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["686acaf",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["6ed7b97",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["6efc4e4",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["7023a8e",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["785af75",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["78afac1",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["86f2219",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["8e79fa0",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":738,"title":{},"body":{"overview.html":{}}}],["9158c38",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["9698654",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["9a54282",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["_draggedel",{"_index":286,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{}}}],["a16b4cb",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["a1f5cfb",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["a775aad",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["aa32c1b",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["abe0775",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["acb8d68",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["accessor",{"_index":351,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["action",{"_index":13,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["actionhandl",{"_index":1,"title":{"interfaces/ActionHandler.html":{}},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["actionmap",{"_index":43,"title":{"interfaces/ActionMapping.html":{}},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["activ",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["activatetarget",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["actual_compon",{"_index":340,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["ad",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["aef71bf",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":403,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["alias",{"_index":741,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":90,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{}}}],["allowdrag",{"_index":70,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"components/TreeNodeComponent.html":{}}}],["allowdrag(nod",{"_index":349,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["allowdrop",{"_index":72,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeDropSlotComponent.html":{}}}],["allowdroppred",{"_index":742,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":447,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/common",{"_index":178,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["angular/cor",{"_index":181,"title":{},"body":{"modules/NgxTreeModule.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"index.html":{}}}],["angular/platform",{"_index":680,"title":{},"body":{"index.html":{}}}],["anim",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["anoth",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["aot",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["app",{"_index":692,"title":{},"body":{"index.html":{}}}],["app.compon",{"_index":683,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":682,"title":{},"body":{"index.html":{}}}],["applic",{"_index":685,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":679,"title":{},"body":{"index.html":{}}}],["argument",{"_index":244,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["assign",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["async",{"_index":714,"title":{},"body":{"index.html":{}}}],["asynchron",{"_index":137,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["averag",{"_index":638,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["avoid",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["b2868bf",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["b82fc9e",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["backward",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["befor",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["binari",{"_index":657,"title":{},"body":{"miscellaneous/functions.html":{}}}],["binarysearch",{"_index":643,"title":{},"body":{"miscellaneous/functions.html":{}}}],["binarysearch(nod",{"_index":653,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bind",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["boolean",{"_index":63,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{}}}],["bootstrap",{"_index":157,"title":{},"body":{"modules/NgxTreeModule.html":{},"index.html":{},"overview.html":{}}}],["break",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["broken",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":736,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":681,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browseranimationsmodul",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["browsermodul",{"_index":554,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bug",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["buildto",{"_index":729,"title":{},"body":{"index.html":{}}}],["c9ddfef",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["cach",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["calcul",{"_index":698,"title":{},"body":{"index.html":{}}}],["canmovenod",{"_index":645,"title":{},"body":{"miscellaneous/functions.html":{}}}],["canmovenode(nod",{"_index":659,"title":{},"body":{"miscellaneous/functions.html":{}}}],["categori",{"_index":701,"title":{},"body":{"index.html":{}}}],["center",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["chang",{"_index":136,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"changelog.html":{}}}],["changeabl",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["changedetect",{"_index":310,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{}}}],["changedetectionstrategi",{"_index":323,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":311,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{}}}],["changelog",{"_index":427,"title":{"changelog.html":{}},"body":{}}],["child",{"_index":706,"title":{},"body":{"index.html":{}}}],["children",{"_index":80,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{},"index.html":{}}}],["children'},{'nam",{"_index":331,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["children.compon",{"_index":186,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["children/tre",{"_index":185,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["childrenfield",{"_index":79,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["claim",{"_index":662,"title":{},"body":{"index.html":{}}}],["class",{"_index":118,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"index.html":{},"overview.html":{}}}],["class.tre",{"_index":318,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["classnam",{"_index":325,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["cli",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":44,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["cloud",{"_index":734,"title":{},"body":{"index.html":{}}}],["cloud/ngx",{"_index":671,"title":{},"body":{"index.html":{}}}],["cluster_ngxtreemodul",{"_index":159,"title":{},"body":{"modules/NgxTreeModule.html":{},"overview.html":{}}}],["cluster_ngxtreemodule_declar",{"_index":160,"title":{},"body":{"modules/NgxTreeModule.html":{},"overview.html":{}}}],["cluster_ngxtreemodule_export",{"_index":161,"title":{},"body":{"modules/NgxTreeModule.html":{},"overview.html":{}}}],["code",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":9,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["commonmodul",{"_index":177,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["compat",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["compon",{"_index":119,"title":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":328,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["components/tre",{"_index":182,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["components/tree/tree.compon",{"_index":199,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["condit",{"_index":655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["config",{"_index":691,"title":{},"body":{"index.html":{}}}],["console.log('drag",{"_index":274,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["const",{"_index":67,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{}}}],["constants/ev",{"_index":214,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["constants/key",{"_index":215,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["constructor",{"_index":236,"title":{},"body":{"directives/TreeDragDirective.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["constructor(el",{"_index":237,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["constructor(priv",{"_index":420,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["constructor(virtualscrol",{"_index":410,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["content",{"_index":365,"title":{},"body":{"components/TreeNodeContentComponent.html":{},"changelog.html":{},"index.html":{}}}],["content'},{'nam",{"_index":333,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["content.compon",{"_index":188,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["content.component.html",{"_index":367,"title":{},"body":{"components/TreeNodeContentComponent.html":{}}}],["content.component.scss",{"_index":366,"title":{},"body":{"components/TreeNodeContentComponent.html":{}}}],["content.component.t",{"_index":364,"title":{},"body":{"components/TreeNodeContentComponent.html":{}}}],["content.component.ts:11",{"_index":370,"title":{},"body":{"components/TreeNodeContentComponent.html":{}}}],["content.component.ts:12",{"_index":369,"title":{},"body":{"components/TreeNodeContentComponent.html":{}}}],["content.component.ts:13",{"_index":368,"title":{},"body":{"components/TreeNodeContentComponent.html":{}}}],["content.component.ts:14",{"_index":371,"title":{},"body":{"components/TreeNodeContentComponent.html":{}}}],["content.component.ts:15",{"_index":372,"title":{},"body":{"components/TreeNodeContentComponent.html":{}}}],["content/tre",{"_index":187,"title":{},"body":{"modules/NgxTreeModule.html":{},"components/TreeNodeContentComponent.html":{}}}],["contents(not",{"_index":717,"title":{},"body":{"index.html":{}}}],["context",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["contextmenu",{"_index":46,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["core",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["correct",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["creat",{"_index":122,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"miscellaneous/functions.html":{}}}],["createtreedataopt",{"_index":648,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtreedataoptions(rawopt",{"_index":141,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"miscellaneous/functions.html":{}}}],["createtreeuiopt",{"_index":649,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtreeuioptions(rawopt",{"_index":126,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"miscellaneous/functions.html":{}}}],["custom",{"_index":117,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{},"index.html":{}}}],["d.t",{"_index":727,"title":{},"body":{"index.html":{}}}],["da5d86a",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":140,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["dataopt",{"_index":702,"title":{},"body":{"index.html":{}}}],["dblclick",{"_index":45,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["dc20dfa",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["dc6758b",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["declar",{"_index":156,"title":{},"body":{"modules/NgxTreeModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":29,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"injectables/TreeDraggingTargetService.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["defaultactionmap",{"_index":36,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["defaultdataopt",{"_index":77,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["defaultsdeep",{"_index":32,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["defaultuiopt",{"_index":68,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["defin",{"_index":26,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["demo",{"_index":661,"title":{},"body":{"index.html":{}}}],["dep",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["depend",{"_index":154,"title":{},"body":{"modules/NgxTreeModule.html":{},"index.html":{},"overview.html":{}}}],["deprec",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["deriv",{"_index":663,"title":{},"body":{"index.html":{}}}],["descript",{"_index":8,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{}}}],["detail",{"_index":673,"title":{},"body":{"index.html":{}}}],["develop",{"_index":724,"title":{},"body":{"index.html":{}}}],["direct",{"_index":224,"title":{"directives/TreeDragDirective.html":{}},"body":{"directives/TreeDragDirective.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"overview.html":{}}}],["directives/tre",{"_index":200,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["disabl",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["display",{"_index":135,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{},"index.html":{}}}],["displayfield",{"_index":81,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["document",{"_index":431,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dom",{"_index":307,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["don't",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["drag",{"_index":49,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"changelog.html":{},"index.html":{}}}],["drag&drop",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["drag.direct",{"_index":201,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["drag.directive.t",{"_index":226,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["drag.directive.ts:11",{"_index":243,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["drag.directive.ts:12",{"_index":241,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["drag.directive.ts:22",{"_index":248,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["drag.directive.ts:44",{"_index":246,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["drag.directive.ts:54",{"_index":250,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["dragend",{"_index":50,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{}}}],["dragend(ev",{"_index":245,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["dragent",{"_index":53,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["dragev",{"_index":62,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"components/TreeNodeComponent.html":{}}}],["draggabl",{"_index":281,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["draggedel",{"_index":292,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{}}}],["dragging_target_class",{"_index":251,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["draggingtarget",{"_index":255,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["dragleav",{"_index":52,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["dragov",{"_index":51,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["dragstart",{"_index":48,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{}}}],["dragstart(ev",{"_index":247,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["drop",{"_index":54,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{}}}],["drop.direct",{"_index":202,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["drop.directive.t",{"_index":743,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dropindex",{"_index":379,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["droptarget",{"_index":57,"title":{"interfaces/DropTarget.html":{}},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["e",{"_index":670,"title":{},"body":{"index.html":{}}}],["e2cc6d0",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["e2d3abb",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":242,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["element",{"_index":61,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"index.html":{}}}],["element:ani",{"_index":98,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["elementref",{"_index":238,"title":{},"body":{"directives/TreeDragDirective.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{}}}],["emit",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["empti",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["ensur",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["error",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["es/default",{"_index":31,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["es/defaultsdeep",{"_index":33,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["es/isfunct",{"_index":355,"title":{},"body":{"components/TreeNodeComponent.html":{},"components/TreeNodeDropSlotComponent.html":{}}}],["es/isnumb",{"_index":35,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["ev",{"_index":270,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["ev.datatransfer.dropeffect",{"_index":264,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["ev.datatransfer.setdata('text",{"_index":262,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["event",{"_index":22,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"changelog.html":{}}}],["event.el",{"_index":390,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["event.ev",{"_index":389,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["eventnam",{"_index":301,"title":{},"body":{"interfaces/TreeEvent.html":{}}}],["exampl",{"_index":93,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["expand",{"_index":392,"title":{},"body":{"components/TreeNodeExpanderComponent.html":{},"changelog.html":{},"index.html":{}}}],["expander'},{'nam",{"_index":335,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["expander.compon",{"_index":192,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["expander.component.html",{"_index":394,"title":{},"body":{"components/TreeNodeExpanderComponent.html":{}}}],["expander.component.scss",{"_index":393,"title":{},"body":{"components/TreeNodeExpanderComponent.html":{}}}],["expander.component.t",{"_index":391,"title":{},"body":{"components/TreeNodeExpanderComponent.html":{}}}],["expander.component.ts:10",{"_index":397,"title":{},"body":{"components/TreeNodeExpanderComponent.html":{}}}],["expander.component.ts:11",{"_index":396,"title":{},"body":{"components/TreeNodeExpanderComponent.html":{}}}],["expander.component.ts:12",{"_index":395,"title":{},"body":{"components/TreeNodeExpanderComponent.html":{}}}],["expander.component.ts:13",{"_index":398,"title":{},"body":{"components/TreeNodeExpanderComponent.html":{}}}],["expander.component.ts:15",{"_index":399,"title":{},"body":{"components/TreeNodeExpanderComponent.html":{}}}],["expander/tre",{"_index":191,"title":{},"body":{"modules/NgxTreeModule.html":{},"components/TreeNodeExpanderComponent.html":{}}}],["expanderclick",{"_index":47,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["expandertempl",{"_index":715,"title":{},"body":{"index.html":{}}}],["export",{"_index":38,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["extend",{"_index":296,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{}}}],["extern",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":71,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"components/TreeNodeDropSlotComponent.html":{}}}],["featur",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":134,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"index.html":{}}}],["filter",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["fire",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["firefox",{"_index":261,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["first",{"_index":694,"title":{},"body":{"index.html":{}}}],["firstindex",{"_index":656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["five",{"_index":711,"title":{},"body":{"index.html":{}}}],["fix",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["flexibl",{"_index":598,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["focus",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["focusnod",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["forroot",{"_index":210,"title":{},"body":{"modules/NgxTreeModule.html":{},"index.html":{}}}],["fromindex",{"_index":660,"title":{},"body":{"miscellaneous/functions.html":{}}}],["full",{"_index":106,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{},"index.html":{}}}],["function",{"_index":10,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["gener",{"_index":725,"title":{},"body":{"index.html":{}}}],["get",{"_index":116,"title":{"changelog.html":{},"index.html":{}},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["getallowdrop",{"_index":352,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["getchildren",{"_index":87,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["getchildren?(nod",{"_index":139,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["guidelin",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["handl",{"_index":11,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"index.html":{}}}],["height",{"_index":639,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["hold",{"_index":695,"title":{},"body":{"index.html":{}}}],["host",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["hostbind",{"_index":317,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["hostbinding('class.tre",{"_index":324,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["hostlisten",{"_index":235,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["hostlistener('drag",{"_index":271,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["hostlistener('dragend",{"_index":275,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["hostlistener('dragstart",{"_index":257,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["html",{"_index":326,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["iallowdragfn",{"_index":64,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"miscellaneous/typealiases.html":{}}}],["iallowdropfn",{"_index":60,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":84,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{}}}],["idfield",{"_index":83,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["ilevelpaddingfn",{"_index":65,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"miscellaneous/typealiases.html":{}}}],["implement",{"_index":227,"title":{},"body":{"directives/TreeDragDirective.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{}}}],["implicit",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["import",{"_index":28,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"index.html":{}}}],["improv",{"_index":443,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["includ",{"_index":718,"title":{},"body":{"index.html":{}}}],["increas",{"_index":112,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["index:number}):boolean",{"_index":100,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["indic",{"_index":713,"title":{},"body":{"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["initi",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":283,"title":{"injectables/TreeDraggingTargetService.html":{}},"body":{"injectables/TreeDraggingTargetService.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["injectiontoken('tree_data_opt",{"_index":144,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["input",{"_index":233,"title":{},"body":{"directives/TreeDragDirective.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"index.html":{}}}],["input('ngxtreedrag",{"_index":254,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["insid",{"_index":97,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["instal",{"_index":667,"title":{},"body":{"index.html":{}}}],["instead",{"_index":105,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"interfaces/TreeEvent.html":{}},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"interfaces/TreeEvent.html":{},"index.html":{},"overview.html":{}}}],["intern",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["introduc",{"_index":708,"title":{},"body":{"index.html":{}}}],["isdrag",{"_index":287,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{}}}],["isexpand",{"_index":86,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"interfaces/TreeEvent.html":{}}}],["isexpandedfield",{"_index":85,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["isfunct",{"_index":354,"title":{},"body":{"components/TreeNodeComponent.html":{},"components/TreeNodeDropSlotComponent.html":{}}}],["isfunction(this.options.allowdrag",{"_index":361,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["isfunction(this.options.allowdrop",{"_index":356,"title":{},"body":{"components/TreeNodeComponent.html":{},"components/TreeNodeDropSlotComponent.html":{}}}],["isnumb",{"_index":34,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["isnumber(levelpaddingopt",{"_index":129,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["item",{"_index":699,"title":{},"body":{"index.html":{}}}],["js",{"_index":726,"title":{},"body":{"index.html":{}}}],["keep",{"_index":515,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["keepnodesexpand",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":55,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["keyboard",{"_index":42,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["larg",{"_index":114,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["late",{"_index":709,"title":{},"body":{"index.html":{}}}],["layer",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":155,"title":{},"body":{"modules/NgxTreeModule.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"overview.html":{}}}],["leggi",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["lettabl",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["levelpad",{"_index":73,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{}}}],["levelpaddingopt",{"_index":127,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["librari",{"_index":556,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["limit",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["link",{"_index":40,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["lint",{"_index":730,"title":{},"body":{"index.html":{}}}],["lintlicens",{"_index":732,"title":{},"body":{"index.html":{}}}],["liter",{"_index":147,"title":{},"body":{"interfaces/ActionMapping.html":{},"interfaces/TreeEvent.html":{}}}],["load",{"_index":312,"title":{},"body":{"components/TreeLoadingComponent.html":{},"index.html":{}}}],["loading'},{'nam",{"_index":330,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["loading.compon",{"_index":184,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["loading.component.html",{"_index":316,"title":{},"body":{"components/TreeLoadingComponent.html":{}}}],["loading.component.scss",{"_index":314,"title":{},"body":{"components/TreeLoadingComponent.html":{}}}],["loading.component.t",{"_index":309,"title":{},"body":{"components/TreeLoadingComponent.html":{}}}],["loading.component.ts:11",{"_index":321,"title":{},"body":{"components/TreeLoadingComponent.html":{}}}],["loading.component.ts:12",{"_index":319,"title":{},"body":{"components/TreeLoadingComponent.html":{}}}],["loading.component.ts:14",{"_index":322,"title":{},"body":{"components/TreeLoadingComponent.html":{}}}],["loading/tre",{"_index":183,"title":{},"body":{"modules/NgxTreeModule.html":{},"components/TreeLoadingComponent.html":{}}}],["loadingchildren",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["loadingtempl",{"_index":712,"title":{},"body":{"index.html":{}}}],["locat",{"_index":101,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["lodash",{"_index":30,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeDropSlotComponent.html":{}}}],["log",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":676,"title":{},"body":{"index.html":{}}}],["map",{"_index":39,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{}}}],["match",{"_index":146,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["memori",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["metadata",{"_index":229,"title":{},"body":{"directives/TreeDragDirective.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["metadata.json",{"_index":728,"title":{},"body":{"index.html":{}}}],["method",{"_index":216,"title":{},"body":{"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"index.html":{}}}],["minimum",{"_index":689,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":642,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["miss",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":733,"title":{},"body":{"index.html":{}}}],["mobx",{"_index":664,"title":{},"body":{"index.html":{}}}],["model",{"_index":37,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{}}}],["model.t",{"_index":647,"title":{},"body":{"miscellaneous/functions.html":{}}}],["models/index",{"_index":213,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["modifi",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["modul",{"_index":152,"title":{"modules/NgxTreeModule.html":{},"modules.html":{}},"body":{"modules/NgxTreeModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["moduleid",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["modulewithprovid",{"_index":179,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["mous",{"_index":41,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["move",{"_index":265,"title":{},"body":{"directives/TreeDragDirective.html":{},"changelog.html":{}}}],["name",{"_index":82,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":143,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{}}}],["ngafterviewinit",{"_index":407,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["ngc",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["ngmodul",{"_index":180,"title":{},"body":{"modules/NgxTreeModule.html":{},"index.html":{}}}],["ngonchang",{"_index":232,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["ngonchanges(chang",{"_index":249,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["ngondestroy",{"_index":408,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["ngoninit",{"_index":409,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["ngoutlet",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["ngoutletcontext",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["ngx",{"_index":252,"title":{},"body":{"directives/TreeDragDirective.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"index.html":{}}}],["ngxtreedrag",{"_index":231,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["ngxtreedrag]'},{'nam",{"_index":338,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["ngxtreedrop",{"_index":339,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["ngxtreemodul",{"_index":153,"title":{"modules/NgxTreeModule.html":{}},"body":{"modules/NgxTreeModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngxtreemodule.forroot",{"_index":684,"title":{},"body":{"index.html":{}}}],["node",{"_index":20,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["node'",{"_index":720,"title":{},"body":{"index.html":{}}}],["node'},{'nam",{"_index":332,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["node.compon",{"_index":196,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["node.component.html",{"_index":343,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.component.scss",{"_index":342,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.component.t",{"_index":341,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.component.ts:11",{"_index":345,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.component.ts:12",{"_index":346,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.component.ts:13",{"_index":344,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.component.ts:14",{"_index":347,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.component.ts:16",{"_index":348,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.component.ts:18",{"_index":353,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.component.ts:26",{"_index":350,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.data.nam",{"_index":687,"title":{},"body":{"index.html":{}}}],["node.displayfield",{"_index":373,"title":{},"body":{"components/TreeNodeContentComponent.html":{}}}],["node.index",{"_index":359,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["node.level",{"_index":130,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["node.t",{"_index":651,"title":{},"body":{"miscellaneous/functions.html":{}}}],["node/tre",{"_index":195,"title":{},"body":{"modules/NgxTreeModule.html":{},"components/TreeNodeComponent.html":{}}}],["nodeclass",{"_index":76,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["nodeclass(nod",{"_index":217,"title":{},"body":{"interfaces/RawTreeUIOptions.html":{}}}],["nodeclass?(nod",{"_index":120,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["notabl",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":688,"title":{},"body":{"index.html":{}}}],["now",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":669,"title":{},"body":{"index.html":{}}}],["null",{"_index":88,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"injectables/TreeDraggingTargetService.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["number",{"_index":56,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"interfaces/TreeEvent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["observable'",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["onc",{"_index":678,"title":{},"body":{"index.html":{}}}],["onchang",{"_index":228,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["ondestroy",{"_index":402,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["ondrag(ev",{"_index":272,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["ondragend(ev",{"_index":276,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["ondragstart(ev",{"_index":258,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["ondrop",{"_index":378,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["ondrop($ev",{"_index":383,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["oninit",{"_index":401,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["oper",{"_index":704,"title":{},"body":{"index.html":{}}}],["operat",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["optim",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":94,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options.t",{"_index":7,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["options.ts:11",{"_index":27,"title":{},"body":{"interfaces/ActionHandler.html":{}}}],["options.ts:115",{"_index":220,"title":{},"body":{"interfaces/RawTreeUIOptions.html":{}}}],["options.ts:116",{"_index":221,"title":{},"body":{"interfaces/RawTreeUIOptions.html":{}}}],["options.ts:117",{"_index":222,"title":{},"body":{"interfaces/RawTreeUIOptions.html":{}}}],["options.ts:118",{"_index":223,"title":{},"body":{"interfaces/RawTreeUIOptions.html":{}}}],["options.ts:120",{"_index":218,"title":{},"body":{"interfaces/RawTreeUIOptions.html":{}}}],["options.ts:19",{"_index":149,"title":{},"body":{"interfaces/ActionMapping.html":{}}}],["options.ts:32",{"_index":148,"title":{},"body":{"interfaces/ActionMapping.html":{}}}],["options.ts:38",{"_index":151,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["options.ts:39",{"_index":150,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["out",{"_index":175,"title":{},"body":{"modules/NgxTreeModule.html":{},"overview.html":{}}}],["over",{"_index":722,"title":{},"body":{"index.html":{}}}],["overrid",{"_index":133,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["overview",{"_index":737,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pad",{"_index":103,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["param",{"_index":124,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["paramet",{"_index":219,"title":{},"body":{"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":58,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"interfaces/TreeEvent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"changelog.html":{}}}],["parent.isleaf",{"_index":102,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["pass",{"_index":703,"title":{},"body":{"index.html":{}}}],["path",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":104,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["perform",{"_index":113,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{},"index.html":{}}}],["pleas",{"_index":674,"title":{},"body":{"index.html":{}}}],["predefin",{"_index":710,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["privat",{"_index":256,"title":{},"body":{"directives/TreeDragDirective.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["process",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["projects/.../tre",{"_index":646,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../util.t",{"_index":644,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngx",{"_index":5,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["promis",{"_index":138,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["propag",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["proper",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":15,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeNodeDropSlotComponent.html":{}}}],["prototyp",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["provid",{"_index":158,"title":{},"body":{"modules/NgxTreeModule.html":{},"index.html":{},"overview.html":{}}}],["px",{"_index":132,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["rais",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["rawopt",{"_index":125,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"miscellaneous/functions.html":{}}}],["rawopts.levelpad",{"_index":128,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["rawtreeuiopt",{"_index":121,"title":{"interfaces/RawTreeUIOptions.html":{}},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["receiv",{"_index":91,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["redesign",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["ref",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["refin",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["relat",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["remov",{"_index":464,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["render",{"_index":239,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["renderer2",{"_index":240,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["replac",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["requir",{"_index":260,"title":{},"body":{"directives/TreeDragDirective.html":{},"index.html":{}}}],["reset",{"_index":174,"title":{},"body":{"modules/NgxTreeModule.html":{},"overview.html":{}}}],["rest",{"_index":23,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["restor",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":145,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":24,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["revert",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":690,"title":{},"body":{"index.html":{}}}],["round",{"_index":696,"title":{},"body":{"index.html":{}}}],["row",{"_index":107,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["run",{"_index":668,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":295,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{},"changelog.html":{}}}],["saveusag",{"_index":672,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":110,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{}}}],["scroll.servic",{"_index":208,"title":{},"body":{"modules/NgxTreeModule.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["scrollheight",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["scrollintoview",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":658,"title":{},"body":{"miscellaneous/functions.html":{}}}],["see",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":108,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["selector",{"_index":230,"title":{},"body":{"directives/TreeDragDirective.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["servic",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["services/tre",{"_index":204,"title":{},"body":{"modules/NgxTreeModule.html":{},"directives/TreeDragDirective.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["set",{"_index":259,"title":{},"body":{"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"changelog.html":{}}}],["set(draggedel",{"_index":290,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{}}}],["signatur",{"_index":17,"title":{},"body":{"interfaces/ActionHandler.html":{}}}],["similar",{"_index":666,"title":{},"body":{"index.html":{}}}],["simul",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["singl",{"_index":719,"title":{},"body":{"index.html":{}}}],["site",{"_index":677,"title":{},"body":{"index.html":{}}}],["size",{"_index":697,"title":{},"body":{"index.html":{}}}],["slot",{"_index":375,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["slot'},{'nam",{"_index":334,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["slot.compon",{"_index":190,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["slot.component.html",{"_index":377,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["slot.component.scss",{"_index":376,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["slot.component.t",{"_index":374,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["slot.component.ts:12",{"_index":381,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["slot.component.ts:13",{"_index":382,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["slot.component.ts:14",{"_index":380,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["slot.component.ts:16",{"_index":387,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["slot.component.ts:24",{"_index":384,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["slot/tre",{"_index":189,"title":{},"body":{"modules/NgxTreeModule.html":{},"components/TreeNodeDropSlotComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["specifi",{"_index":89,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{},"index.html":{}}}],["split",{"_index":700,"title":{},"body":{"index.html":{}}}],["standard",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":426,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["static",{"_index":209,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["stop",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":66,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"interfaces/TreeEvent.html":{}}}],["style",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["styleurl",{"_index":313,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["sub",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":294,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{}}}],["subscript",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["suppli",{"_index":115,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["support",{"_index":450,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":735,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["system.j",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":675,"title":{},"body":{"index.html":{}}}],["target",{"_index":253,"title":{},"body":{"directives/TreeDragDirective.html":{},"changelog.html":{}}}],["target.servic",{"_index":205,"title":{},"body":{"modules/NgxTreeModule.html":{},"directives/TreeDragDirective.html":{}}}],["target.service.t",{"_index":285,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{}}}],["target.service.ts:13",{"_index":288,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{}}}],["target.service.ts:17",{"_index":289,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{}}}],["target.service.ts:7",{"_index":293,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{}}}],["target.service.ts:9",{"_index":291,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{}}}],["templat",{"_index":306,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"index.html":{}}}],["templateref",{"_index":320,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeExpanderComponent.html":{}}}],["templates(wil",{"_index":707,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":315,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["this._draggedel",{"_index":297,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{}}}],["this.draggingtarget.id",{"_index":263,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["this.draggingtarget.mouseact",{"_index":268,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["this.draggingtarget.mouseaction('drag",{"_index":273,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["this.draggingtarget.mouseaction('dragend",{"_index":277,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["this.draggingtarget.mouseaction('dragstart",{"_index":269,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["this.dropindex",{"_index":386,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["this.elementref",{"_index":422,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["this.get",{"_index":298,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{}}}],["this.nod",{"_index":358,"title":{},"body":{"components/TreeNodeComponent.html":{},"components/TreeNodeDropSlotComponent.html":{}}}],["this.node.elementref",{"_index":421,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["this.node.mouseaction('drop",{"_index":388,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["this.options.allowdrag",{"_index":363,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["this.options.allowdrag(nod",{"_index":362,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["this.options.allowdrop",{"_index":360,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["this.options.allowdrop(el",{"_index":385,"title":{},"body":{"components/TreeNodeDropSlotComponent.html":{}}}],["this.options.allowdrop(nod",{"_index":357,"title":{},"body":{"components/TreeNodeComponent.html":{}}}],["this.renderer.addclass(this.el.nativeel",{"_index":266,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["this.renderer.removeclass(this.el.nativeel",{"_index":278,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["this.renderer.setattribute(this.el.nativeel",{"_index":280,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["this.treedragen",{"_index":282,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["this.treedraggingtargetservice.set(nul",{"_index":279,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["this.treedraggingtargetservice.set(this.draggingtarget",{"_index":267,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["this.virtualscroll.hasenoughnodeheight",{"_index":424,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["this.virtualscroll.isdis",{"_index":423,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["this.virtualscroll.reportnodeheight(this.elementref.nativeelement.getboundingclientrect().height",{"_index":425,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["titl",{"_index":686,"title":{},"body":{"index.html":{}}}],["to:{parent:itreenod",{"_index":99,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["toggleexpand",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":12,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["tree'},{'nam",{"_index":329,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["tree/src/components/tre",{"_index":308,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["tree/src/directives/tre",{"_index":225,"title":{},"body":{"directives/TreeDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["tree/src/index.t",{"_index":176,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["tree/src/models/events.t",{"_index":300,"title":{},"body":{"interfaces/TreeEvent.html":{}}}],["tree/src/models/events.ts:4",{"_index":302,"title":{},"body":{"interfaces/TreeEvent.html":{}}}],["tree/src/models/events.ts:5",{"_index":304,"title":{},"body":{"interfaces/TreeEvent.html":{}}}],["tree/src/models/events.ts:6",{"_index":303,"title":{},"body":{"interfaces/TreeEvent.html":{}}}],["tree/src/models/events.ts:7",{"_index":305,"title":{},"body":{"interfaces/TreeEvent.html":{}}}],["tree/src/models/tre",{"_index":6,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["tree/src/services/tre",{"_index":284,"title":{},"body":{"injectables/TreeDraggingTargetService.html":{}}}],["tree/src/util.t",{"_index":652,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tree_data_opt",{"_index":142,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["treecompon",{"_index":164,"title":{},"body":{"modules/NgxTreeModule.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"overview.html":{}}}],["treedataopt",{"_index":78,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"index.html":{}}}],["treedragdirect",{"_index":171,"title":{"directives/TreeDragDirective.html":{}},"body":{"modules/NgxTreeModule.html":{},"directives/TreeDragDirective.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"overview.html":{}}}],["treedragen",{"_index":234,"title":{},"body":{"directives/TreeDragDirective.html":{}}}],["treedraggingtargetservic",{"_index":203,"title":{"injectables/TreeDraggingTargetService.html":{}},"body":{"modules/NgxTreeModule.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"changelog.html":{},"index.html":{}}}],["treedropdirect",{"_index":172,"title":{},"body":{"modules/NgxTreeModule.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"overview.html":{}}}],["treeevent",{"_index":299,"title":{"interfaces/TreeEvent.html":{}},"body":{"interfaces/TreeEvent.html":{}}}],["treeloadingcompon",{"_index":162,"title":{"components/TreeLoadingComponent.html":{}},"body":{"modules/NgxTreeModule.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"overview.html":{}}}],["treemodel",{"_index":19,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"index.html":{}}}],["treenod",{"_index":21,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["treenodechildrencompon",{"_index":167,"title":{},"body":{"modules/NgxTreeModule.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"overview.html":{}}}],["treenodecompon",{"_index":163,"title":{"components/TreeNodeComponent.html":{}},"body":{"modules/NgxTreeModule.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"overview.html":{}}}],["treenodecontentcompon",{"_index":168,"title":{"components/TreeNodeContentComponent.html":{}},"body":{"modules/NgxTreeModule.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"overview.html":{}}}],["treenodedropslotcompon",{"_index":170,"title":{"components/TreeNodeDropSlotComponent.html":{}},"body":{"modules/NgxTreeModule.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"overview.html":{}}}],["treenodeexpandercompon",{"_index":165,"title":{"components/TreeNodeExpanderComponent.html":{}},"body":{"modules/NgxTreeModule.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"overview.html":{}}}],["treenodefulltempl",{"_index":723,"title":{},"body":{"index.html":{}}}],["treenodetempl",{"_index":716,"title":{},"body":{"index.html":{}}}],["treenodewrappercompon",{"_index":166,"title":{"components/TreeNodeWrapperComponent.html":{}},"body":{"modules/NgxTreeModule.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"overview.html":{}}}],["treenodewrappertempl",{"_index":721,"title":{},"body":{"index.html":{}}}],["treeuioption",{"_index":69,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"index.html":{}}}],["treeviewportcompon",{"_index":169,"title":{},"body":{"modules/NgxTreeModule.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"overview.html":{}}}],["treevirtualscrol",{"_index":206,"title":{},"body":{"modules/NgxTreeModule.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["true",{"_index":95,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["ts",{"_index":731,"title":{},"body":{"index.html":{}}}],["two",{"_index":693,"title":{},"body":{"index.html":{}}}],["type",{"_index":59,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"interfaces/TreeEvent.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":740,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui",{"_index":123,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"miscellaneous/functions.html":{}}}],["uioption",{"_index":705,"title":{},"body":{"index.html":{}}}],["unam",{"_index":16,"title":{},"body":{"interfaces/ActionHandler.html":{}}}],["undefin",{"_index":654,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unnecessari",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["updat",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["upgrad",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["us",{"_index":111,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"changelog.html":{},"index.html":{}}}],["usag",{"_index":563,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user",{"_index":484,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["usevalu",{"_index":211,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["usevirtualscrol",{"_index":75,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["uuid",{"_index":650,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ux",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["valu",{"_index":92,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{},"injectables/TreeDraggingTargetService.html":{},"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["var",{"_index":327,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["variabl",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["viewport",{"_index":337,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{}}}],["viewport.compon",{"_index":198,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["viewport/tre",{"_index":197,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["virtual",{"_index":109,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"modules/NgxTreeModule.html":{},"interfaces/RawTreeUIOptions.html":{},"components/TreeNodeWrapperComponent.html":{},"changelog.html":{}}}],["virtual_scroll_node_height_quota",{"_index":207,"title":{},"body":{"modules/NgxTreeModule.html":{},"index.html":{}}}],["virtualscrol",{"_index":412,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{},"changelog.html":{}}}],["virut",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["vitual",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":25,"title":{},"body":{"interfaces/ActionHandler.html":{},"directives/TreeDragDirective.html":{},"injectables/TreeDraggingTargetService.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["way",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":96,"title":{},"body":{"interfaces/ActionHandler.html":{},"interfaces/ActionMapping.html":{},"interfaces/DropTarget.html":{},"interfaces/RawTreeUIOptions.html":{}}}],["whilst",{"_index":665,"title":{},"body":{"index.html":{}}}],["wrape",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["wrapper",{"_index":404,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["wrapper'},{'nam",{"_index":336,"title":{},"body":{"components/TreeLoadingComponent.html":{},"components/TreeNodeComponent.html":{},"components/TreeNodeContentComponent.html":{},"components/TreeNodeDropSlotComponent.html":{},"components/TreeNodeExpanderComponent.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["wrapper.compon",{"_index":194,"title":{},"body":{"modules/NgxTreeModule.html":{}}}],["wrapper.component.html",{"_index":406,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["wrapper.component.scss",{"_index":405,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["wrapper.component.t",{"_index":400,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["wrapper.component.ts:11",{"_index":414,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["wrapper.component.ts:12",{"_index":415,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["wrapper.component.ts:13",{"_index":413,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["wrapper.component.ts:14",{"_index":416,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["wrapper.component.ts:16",{"_index":411,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["wrapper.component.ts:21",{"_index":419,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["wrapper.component.ts:25",{"_index":418,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["wrapper.component.ts:29",{"_index":417,"title":{},"body":{"components/TreeNodeWrapperComponent.html":{}}}],["wrapper/tre",{"_index":193,"title":{},"body":{"modules/NgxTreeModule.html":{},"components/TreeNodeWrapperComponent.html":{}}}],["zoom",{"_index":173,"title":{},"body":{"modules/NgxTreeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionHandler.html":{"url":"interfaces/ActionHandler.html","title":"interface - ActionHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionHandler\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-tree/src/models/tree-options.ts\n        \n\n            \n                Description\n            \n            \n                common functions to handle tree actions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [tree: TreeModel, node: TreeNode, $event: any, rest: any[]]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/ngx-tree/src/models/tree-options.ts:11\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import defaults from 'lodash-es/defaults'\nimport defaultsDeep from 'lodash-es/defaultsDeep'\nimport isNumber from 'lodash-es/isNumber'\nimport { defaultActionMapping } from './actions'\nimport { TreeModel } from './tree-model'\nimport { TreeNode } from './tree-node'\n\n/**\n * common functions to handle tree actions\n */\nexport interface ActionHandler {\n    (tree: TreeModel, node: TreeNode, $event: any, ...rest);\n}\n\n/**\n * a mapping model to link mouse events and keyboard events with actions\n */\nexport interface ActionMapping {\n    mouse?: {\n        click?: ActionHandler,\n        dblClick?: ActionHandler,\n        contextMenu?: ActionHandler,\n        expanderClick?: ActionHandler,\n        dragStart?: ActionHandler,\n        drag?: ActionHandler,\n        dragEnd?: ActionHandler,\n        dragOver?: ActionHandler,\n        dragLeave?: ActionHandler,\n        dragEnter?: ActionHandler,\n        drop?: ActionHandler,\n    };\n    keys?: {\n        [key: number]: ActionHandler\n    };\n}\n\nexport interface DropTarget {\n    parent: TreeNode\n    index: number\n}\n\nexport type IAllowDropFn = (element: TreeNode, to: DropTarget, $event?: DragEvent) => boolean\n\nexport type IAllowDragFn = (node: TreeNode) => boolean\n\nexport type ILevelPaddingFn = (node: TreeNode) => string\n\nexport const defaultUIOptions: TreeUIOptions = {\n    allowDrag: false,\n    allowDrop: false,\n    levelPadding: () => '0px',\n    useVirtualScroll: false,\n    nodeClass: () => '',\n}\n\nexport const defaultDataOptions: TreeDataOptions = {\n    childrenField: 'children',\n    displayField: 'name',\n    idField: 'id',\n    isExpandedField: 'isExpanded',\n    actionMapping: defaultActionMapping,\n    getChildren: (node) => null,\n}\n\nexport interface TreeUIOptions {\n    /**\n     * Specify if dragging tree nodes is allowed.\n     * This could be a boolean, or a function that receives a TreeNode and returns a boolean\n     *\n     * **Default value: false**\n     *\n     * Example:\n     * ```\n     * options = {\n     *   allowDrag: true\n     * }\n     * ```\n     */\n    allowDrag?: boolean | IAllowDragFn;\n    /**\n     * Specify whether dropping inside the tree is allowed. Optional types:\n     *  - boolean\n     *  - (element:any, to:{parent:ITreeNode, index:number}):boolean\n     * A function that receives the dragged element, and the drop location (parent node and index inside the parent),\n     * and returns true or false.\n     *\n     * **Default Value: true**\n     *\n     * example:\n     * ```\n     * options = {\n     *  allowDrop: (element, {parent, index}) => parent.isLeaf\n     * }\n     * ```\n     */\n    allowDrop?: boolean | IAllowDropFn;\n    /**\n     * Specify padding per node instead of children padding (to allow full row select for example)\n     */\n    levelPadding?: ILevelPaddingFn;\n    /**\n     * Boolean whether virtual scroll should be used.\n     * Increases performance for large trees\n     * Default is false\n     */\n    useVirtualScroll?: boolean;\n\n    /**\n     * Supply function for getting a custom class for the node component\n     */\n    nodeClass?(node: TreeNode): string;\n}\n\nexport interface RawTreeUIOptions {\n    allowDrag?: boolean | IAllowDragFn;\n    allowDrop?: boolean | IAllowDropFn;\n    levelPadding?: number | ILevelPaddingFn;\n    useVirtualScroll?: boolean;\n\n    nodeClass?(node: TreeNode): string;\n}\n\n/**\n * create tree options about UI with defaults\n * @param rawOpts\n */\nexport function createTreeUIOptions(rawOpts: RawTreeUIOptions = {}): TreeUIOptions {\n    const levelPaddingOpt = rawOpts.levelPadding\n    if (isNumber(levelPaddingOpt)) {\n        rawOpts.levelPadding = function (node: TreeNode) {\n            return (levelPaddingOpt + levelPaddingOpt * (node.level - 1)) + 'px'\n        }\n    }\n\n    return defaults({}, rawOpts, defaultUIOptions)\n}\n\nexport interface TreeDataOptions {\n    /**\n     * Override children field. Default: 'children'\n     */\n    childrenField?: string;\n    /**\n     * Override display field. Default: 'name'\n     */\n    displayField?: string;\n    /**\n     * Override id field. Default: 'id'\n     */\n    idField?: string;\n    /**\n     * Override isExpanded field. Default: 'isExpanded'\n     */\n    isExpandedField?: string;\n    /**\n     * Change the default mouse and key actions on the tree\n     */\n    actionMapping?: ActionMapping;\n\n    /**\n     * Supply function for getting fields asynchronously. Should return a Promise\n     */\n    getChildren?(node: TreeNode): Promise;\n}\n\n/**\n * create tree options about data with defaults\n * @param rawOpts\n */\nexport function createTreeDataOptions(rawOpts: TreeDataOptions = {}): TreeDataOptions {\n    return defaultsDeep({}, rawOpts, defaultDataOptions)\n}\n\n// export const TREE_DATA_OPTIONS = new InjectionToken('TREE_DATA_OPTIONS')\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionMapping.html":{"url":"interfaces/ActionMapping.html","title":"interface - ActionMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionMapping\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-tree/src/models/tree-options.ts\n        \n\n            \n                Description\n            \n            \n                a mapping model to link mouse events and keyboard events with actions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        keys\n                                \n                                \n                                            Optional\n                                        mouse\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                    \n                                \n                                \n                                    \n                                        keys:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/ngx-tree/src/models/tree-options.ts:32\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mouse\n                                    \n                                \n                                \n                                    \n                                        mouse:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/ngx-tree/src/models/tree-options.ts:19\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import defaults from 'lodash-es/defaults'\nimport defaultsDeep from 'lodash-es/defaultsDeep'\nimport isNumber from 'lodash-es/isNumber'\nimport { defaultActionMapping } from './actions'\nimport { TreeModel } from './tree-model'\nimport { TreeNode } from './tree-node'\n\n/**\n * common functions to handle tree actions\n */\nexport interface ActionHandler {\n    (tree: TreeModel, node: TreeNode, $event: any, ...rest);\n}\n\n/**\n * a mapping model to link mouse events and keyboard events with actions\n */\nexport interface ActionMapping {\n    mouse?: {\n        click?: ActionHandler,\n        dblClick?: ActionHandler,\n        contextMenu?: ActionHandler,\n        expanderClick?: ActionHandler,\n        dragStart?: ActionHandler,\n        drag?: ActionHandler,\n        dragEnd?: ActionHandler,\n        dragOver?: ActionHandler,\n        dragLeave?: ActionHandler,\n        dragEnter?: ActionHandler,\n        drop?: ActionHandler,\n    };\n    keys?: {\n        [key: number]: ActionHandler\n    };\n}\n\nexport interface DropTarget {\n    parent: TreeNode\n    index: number\n}\n\nexport type IAllowDropFn = (element: TreeNode, to: DropTarget, $event?: DragEvent) => boolean\n\nexport type IAllowDragFn = (node: TreeNode) => boolean\n\nexport type ILevelPaddingFn = (node: TreeNode) => string\n\nexport const defaultUIOptions: TreeUIOptions = {\n    allowDrag: false,\n    allowDrop: false,\n    levelPadding: () => '0px',\n    useVirtualScroll: false,\n    nodeClass: () => '',\n}\n\nexport const defaultDataOptions: TreeDataOptions = {\n    childrenField: 'children',\n    displayField: 'name',\n    idField: 'id',\n    isExpandedField: 'isExpanded',\n    actionMapping: defaultActionMapping,\n    getChildren: (node) => null,\n}\n\nexport interface TreeUIOptions {\n    /**\n     * Specify if dragging tree nodes is allowed.\n     * This could be a boolean, or a function that receives a TreeNode and returns a boolean\n     *\n     * **Default value: false**\n     *\n     * Example:\n     * ```\n     * options = {\n     *   allowDrag: true\n     * }\n     * ```\n     */\n    allowDrag?: boolean | IAllowDragFn;\n    /**\n     * Specify whether dropping inside the tree is allowed. Optional types:\n     *  - boolean\n     *  - (element:any, to:{parent:ITreeNode, index:number}):boolean\n     * A function that receives the dragged element, and the drop location (parent node and index inside the parent),\n     * and returns true or false.\n     *\n     * **Default Value: true**\n     *\n     * example:\n     * ```\n     * options = {\n     *  allowDrop: (element, {parent, index}) => parent.isLeaf\n     * }\n     * ```\n     */\n    allowDrop?: boolean | IAllowDropFn;\n    /**\n     * Specify padding per node instead of children padding (to allow full row select for example)\n     */\n    levelPadding?: ILevelPaddingFn;\n    /**\n     * Boolean whether virtual scroll should be used.\n     * Increases performance for large trees\n     * Default is false\n     */\n    useVirtualScroll?: boolean;\n\n    /**\n     * Supply function for getting a custom class for the node component\n     */\n    nodeClass?(node: TreeNode): string;\n}\n\nexport interface RawTreeUIOptions {\n    allowDrag?: boolean | IAllowDragFn;\n    allowDrop?: boolean | IAllowDropFn;\n    levelPadding?: number | ILevelPaddingFn;\n    useVirtualScroll?: boolean;\n\n    nodeClass?(node: TreeNode): string;\n}\n\n/**\n * create tree options about UI with defaults\n * @param rawOpts\n */\nexport function createTreeUIOptions(rawOpts: RawTreeUIOptions = {}): TreeUIOptions {\n    const levelPaddingOpt = rawOpts.levelPadding\n    if (isNumber(levelPaddingOpt)) {\n        rawOpts.levelPadding = function (node: TreeNode) {\n            return (levelPaddingOpt + levelPaddingOpt * (node.level - 1)) + 'px'\n        }\n    }\n\n    return defaults({}, rawOpts, defaultUIOptions)\n}\n\nexport interface TreeDataOptions {\n    /**\n     * Override children field. Default: 'children'\n     */\n    childrenField?: string;\n    /**\n     * Override display field. Default: 'name'\n     */\n    displayField?: string;\n    /**\n     * Override id field. Default: 'id'\n     */\n    idField?: string;\n    /**\n     * Override isExpanded field. Default: 'isExpanded'\n     */\n    isExpandedField?: string;\n    /**\n     * Change the default mouse and key actions on the tree\n     */\n    actionMapping?: ActionMapping;\n\n    /**\n     * Supply function for getting fields asynchronously. Should return a Promise\n     */\n    getChildren?(node: TreeNode): Promise;\n}\n\n/**\n * create tree options about data with defaults\n * @param rawOpts\n */\nexport function createTreeDataOptions(rawOpts: TreeDataOptions = {}): TreeDataOptions {\n    return defaultsDeep({}, rawOpts, defaultDataOptions)\n}\n\n// export const TREE_DATA_OPTIONS = new InjectionToken('TREE_DATA_OPTIONS')\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTarget.html":{"url":"interfaces/DropTarget.html","title":"interface - DropTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTarget\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-tree/src/models/tree-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/ngx-tree/src/models/tree-options.ts:39\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     TreeNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TreeNode\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/ngx-tree/src/models/tree-options.ts:38\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import defaults from 'lodash-es/defaults'\nimport defaultsDeep from 'lodash-es/defaultsDeep'\nimport isNumber from 'lodash-es/isNumber'\nimport { defaultActionMapping } from './actions'\nimport { TreeModel } from './tree-model'\nimport { TreeNode } from './tree-node'\n\n/**\n * common functions to handle tree actions\n */\nexport interface ActionHandler {\n    (tree: TreeModel, node: TreeNode, $event: any, ...rest);\n}\n\n/**\n * a mapping model to link mouse events and keyboard events with actions\n */\nexport interface ActionMapping {\n    mouse?: {\n        click?: ActionHandler,\n        dblClick?: ActionHandler,\n        contextMenu?: ActionHandler,\n        expanderClick?: ActionHandler,\n        dragStart?: ActionHandler,\n        drag?: ActionHandler,\n        dragEnd?: ActionHandler,\n        dragOver?: ActionHandler,\n        dragLeave?: ActionHandler,\n        dragEnter?: ActionHandler,\n        drop?: ActionHandler,\n    };\n    keys?: {\n        [key: number]: ActionHandler\n    };\n}\n\nexport interface DropTarget {\n    parent: TreeNode\n    index: number\n}\n\nexport type IAllowDropFn = (element: TreeNode, to: DropTarget, $event?: DragEvent) => boolean\n\nexport type IAllowDragFn = (node: TreeNode) => boolean\n\nexport type ILevelPaddingFn = (node: TreeNode) => string\n\nexport const defaultUIOptions: TreeUIOptions = {\n    allowDrag: false,\n    allowDrop: false,\n    levelPadding: () => '0px',\n    useVirtualScroll: false,\n    nodeClass: () => '',\n}\n\nexport const defaultDataOptions: TreeDataOptions = {\n    childrenField: 'children',\n    displayField: 'name',\n    idField: 'id',\n    isExpandedField: 'isExpanded',\n    actionMapping: defaultActionMapping,\n    getChildren: (node) => null,\n}\n\nexport interface TreeUIOptions {\n    /**\n     * Specify if dragging tree nodes is allowed.\n     * This could be a boolean, or a function that receives a TreeNode and returns a boolean\n     *\n     * **Default value: false**\n     *\n     * Example:\n     * ```\n     * options = {\n     *   allowDrag: true\n     * }\n     * ```\n     */\n    allowDrag?: boolean | IAllowDragFn;\n    /**\n     * Specify whether dropping inside the tree is allowed. Optional types:\n     *  - boolean\n     *  - (element:any, to:{parent:ITreeNode, index:number}):boolean\n     * A function that receives the dragged element, and the drop location (parent node and index inside the parent),\n     * and returns true or false.\n     *\n     * **Default Value: true**\n     *\n     * example:\n     * ```\n     * options = {\n     *  allowDrop: (element, {parent, index}) => parent.isLeaf\n     * }\n     * ```\n     */\n    allowDrop?: boolean | IAllowDropFn;\n    /**\n     * Specify padding per node instead of children padding (to allow full row select for example)\n     */\n    levelPadding?: ILevelPaddingFn;\n    /**\n     * Boolean whether virtual scroll should be used.\n     * Increases performance for large trees\n     * Default is false\n     */\n    useVirtualScroll?: boolean;\n\n    /**\n     * Supply function for getting a custom class for the node component\n     */\n    nodeClass?(node: TreeNode): string;\n}\n\nexport interface RawTreeUIOptions {\n    allowDrag?: boolean | IAllowDragFn;\n    allowDrop?: boolean | IAllowDropFn;\n    levelPadding?: number | ILevelPaddingFn;\n    useVirtualScroll?: boolean;\n\n    nodeClass?(node: TreeNode): string;\n}\n\n/**\n * create tree options about UI with defaults\n * @param rawOpts\n */\nexport function createTreeUIOptions(rawOpts: RawTreeUIOptions = {}): TreeUIOptions {\n    const levelPaddingOpt = rawOpts.levelPadding\n    if (isNumber(levelPaddingOpt)) {\n        rawOpts.levelPadding = function (node: TreeNode) {\n            return (levelPaddingOpt + levelPaddingOpt * (node.level - 1)) + 'px'\n        }\n    }\n\n    return defaults({}, rawOpts, defaultUIOptions)\n}\n\nexport interface TreeDataOptions {\n    /**\n     * Override children field. Default: 'children'\n     */\n    childrenField?: string;\n    /**\n     * Override display field. Default: 'name'\n     */\n    displayField?: string;\n    /**\n     * Override id field. Default: 'id'\n     */\n    idField?: string;\n    /**\n     * Override isExpanded field. Default: 'isExpanded'\n     */\n    isExpandedField?: string;\n    /**\n     * Change the default mouse and key actions on the tree\n     */\n    actionMapping?: ActionMapping;\n\n    /**\n     * Supply function for getting fields asynchronously. Should return a Promise\n     */\n    getChildren?(node: TreeNode): Promise;\n}\n\n/**\n * create tree options about data with defaults\n * @param rawOpts\n */\nexport function createTreeDataOptions(rawOpts: TreeDataOptions = {}): TreeDataOptions {\n    return defaultsDeep({}, rawOpts, defaultDataOptions)\n}\n\n// export const TREE_DATA_OPTIONS = new InjectionToken('TREE_DATA_OPTIONS')\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTreeModule.html":{"url":"modules/NgxTreeModule.html","title":"module - NgxTreeModule","body":"\n                   \n\n\n\n\n  Modules\n  NgxTreeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTreeModule\n\n\n\ncluster_NgxTreeModule_declarations\n\n\n\ncluster_NgxTreeModule_exports\n\n\n\n\nTreeLoadingComponent\n\nTreeLoadingComponent\n\n\n\nNgxTreeModule\n\nNgxTreeModule\n\nNgxTreeModule -->\n\nTreeLoadingComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeComponent\n\nTreeNodeComponent\n\nNgxTreeModule -->\n\nTreeNodeComponent->NgxTreeModule\n\n\n\n\n\nTreeComponent\n\nTreeComponent\n\nNgxTreeModule -->\n\nTreeComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeExpanderComponent\n\nTreeNodeExpanderComponent\n\nNgxTreeModule -->\n\nTreeNodeExpanderComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeWrapperComponent\n\nTreeNodeWrapperComponent\n\nNgxTreeModule -->\n\nTreeNodeWrapperComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeChildrenComponent\n\nTreeNodeChildrenComponent\n\nNgxTreeModule -->\n\nTreeNodeChildrenComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeContentComponent\n\nTreeNodeContentComponent\n\nNgxTreeModule -->\n\nTreeNodeContentComponent->NgxTreeModule\n\n\n\n\n\nTreeViewportComponent\n\nTreeViewportComponent\n\nNgxTreeModule -->\n\nTreeViewportComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeDropSlotComponent\n\nTreeNodeDropSlotComponent\n\nNgxTreeModule -->\n\nTreeNodeDropSlotComponent->NgxTreeModule\n\n\n\n\n\nTreeDragDirective\n\nTreeDragDirective\n\nNgxTreeModule -->\n\nTreeDragDirective->NgxTreeModule\n\n\n\n\n\nTreeDropDirective\n\nTreeDropDirective\n\nNgxTreeModule -->\n\nTreeDropDirective->NgxTreeModule\n\n\n\n\n\nTreeLoadingComponent \n\nTreeLoadingComponent \n\nTreeLoadingComponent  -->\n\nNgxTreeModule->TreeLoadingComponent \n\n\n\n\n\nTreeNodeComponent \n\nTreeNodeComponent \n\nTreeNodeComponent  -->\n\nNgxTreeModule->TreeNodeComponent \n\n\n\n\n\nTreeComponent \n\nTreeComponent \n\nTreeComponent  -->\n\nNgxTreeModule->TreeComponent \n\n\n\n\n\nTreeNodeExpanderComponent \n\nTreeNodeExpanderComponent \n\nTreeNodeExpanderComponent  -->\n\nNgxTreeModule->TreeNodeExpanderComponent \n\n\n\n\n\nTreeNodeWrapperComponent \n\nTreeNodeWrapperComponent \n\nTreeNodeWrapperComponent  -->\n\nNgxTreeModule->TreeNodeWrapperComponent \n\n\n\n\n\nTreeNodeChildrenComponent \n\nTreeNodeChildrenComponent \n\nTreeNodeChildrenComponent  -->\n\nNgxTreeModule->TreeNodeChildrenComponent \n\n\n\n\n\nTreeNodeContentComponent \n\nTreeNodeContentComponent \n\nTreeNodeContentComponent  -->\n\nNgxTreeModule->TreeNodeContentComponent \n\n\n\n\n\nTreeViewportComponent \n\nTreeViewportComponent \n\nTreeViewportComponent  -->\n\nNgxTreeModule->TreeViewportComponent \n\n\n\n\n\nTreeNodeDropSlotComponent \n\nTreeNodeDropSlotComponent \n\nTreeNodeDropSlotComponent  -->\n\nNgxTreeModule->TreeNodeDropSlotComponent \n\n\n\n\n\nTreeDragDirective \n\nTreeDragDirective \n\nTreeDragDirective  -->\n\nNgxTreeModule->TreeDragDirective \n\n\n\n\n\nTreeDropDirective \n\nTreeDropDirective \n\nTreeDropDirective  -->\n\nNgxTreeModule->TreeDropDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-tree/src/index.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TreeLoadingComponent\n                            \n                            \n                                TreeNodeComponent\n                            \n                            \n                                TreeComponent\n                            \n                            \n                                TreeNodeExpanderComponent\n                            \n                            \n                                TreeNodeWrapperComponent\n                            \n                            \n                                TreeNodeChildrenComponent\n                            \n                            \n                                TreeNodeContentComponent\n                            \n                            \n                                TreeViewportComponent\n                            \n                            \n                                TreeNodeDropSlotComponent\n                            \n                            \n                                TreeDragDirective\n                            \n                            \n                                TreeDropDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TreeLoadingComponent\n                            \n                            \n                                    TreeNodeComponent\n                            \n                            \n                                    TreeComponent\n                            \n                            \n                                    TreeNodeExpanderComponent\n                            \n                            \n                                    TreeNodeWrapperComponent\n                            \n                            \n                                    TreeNodeChildrenComponent\n                            \n                            \n                                    TreeNodeContentComponent\n                            \n                            \n                                    TreeViewportComponent\n                            \n                            \n                                    TreeNodeDropSlotComponent\n                            \n                            \n                                    TreeDragDirective\n                            \n                            \n                                    TreeDropDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common'\nimport { ModuleWithProviders, NgModule } from '@angular/core'\n\nimport { TreeLoadingComponent } from './components/tree-loading/tree-loading.component'\nimport { TreeNodeChildrenComponent } from './components/tree-node-children/tree-node-children.component'\nimport { TreeNodeContentComponent } from './components/tree-node-content/tree-node-content.component'\nimport { TreeNodeDropSlotComponent } from './components/tree-node-drop-slot/tree-node-drop-slot.component'\nimport { TreeNodeExpanderComponent } from './components/tree-node-expander/tree-node-expander.component'\nimport { TreeNodeWrapperComponent } from './components/tree-node-wrapper/tree-node-wrapper.component'\nimport { TreeNodeComponent } from './components/tree-node/tree-node.component'\nimport { TreeViewportComponent } from './components/tree-viewport/tree-viewport.component'\nimport { TreeComponent } from './components/tree/tree.component'\nimport { TreeDragDirective } from './directives/tree-drag.directive'\nimport { TreeDropDirective } from './directives/tree-drop.directive'\nimport { TreeDraggingTargetService } from './services/tree-dragging-target.service'\nimport { TreeVirtualScroll, VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA } from './services/tree-virtual-scroll.service'\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        TreeLoadingComponent,\n        TreeNodeComponent,\n        TreeComponent,\n        TreeNodeExpanderComponent,\n        TreeNodeWrapperComponent,\n        TreeNodeChildrenComponent,\n        TreeNodeContentComponent,\n        TreeViewportComponent,\n        TreeNodeDropSlotComponent,\n        TreeDragDirective,\n        TreeDropDirective,\n    ],\n    exports: [\n        TreeLoadingComponent,\n        TreeNodeComponent,\n        TreeComponent,\n        TreeNodeExpanderComponent,\n        TreeNodeWrapperComponent,\n        TreeNodeChildrenComponent,\n        TreeNodeContentComponent,\n        TreeViewportComponent,\n        TreeNodeDropSlotComponent,\n        TreeDragDirective,\n        TreeDropDirective,\n    ],\n})\nexport class NgxTreeModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: NgxTreeModule,\n            providers: [\n                TreeDraggingTargetService,\n                {\n                    provide: VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA,\n                    useValue: 5,\n                },\n            ],\n        }\n    }\n}\n\nexport {\n    TreeLoadingComponent,\n    TreeNodeChildrenComponent,\n    TreeNodeContentComponent,\n    TreeNodeDropSlotComponent,\n    TreeNodeExpanderComponent,\n    TreeNodeWrapperComponent,\n    TreeNodeComponent,\n    TreeViewportComponent,\n    TreeComponent,\n    TreeDragDirective,\n    TreeDropDirective,\n    TreeDraggingTargetService,\n    TreeVirtualScroll,\n    VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA\n}\n\nexport * from './models/index'\nexport * from './constants/events'\nexport * from './constants/keys'\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawTreeUIOptions.html":{"url":"interfaces/RawTreeUIOptions.html","title":"interface - RawTreeUIOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RawTreeUIOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-tree/src/models/tree-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        allowDrag\n                                \n                                \n                                            Optional\n                                        allowDrop\n                                \n                                \n                                            Optional\n                                        levelPadding\n                                \n                                \n                                            Optional\n                                        useVirtualScroll\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    nodeClass\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            nodeClass\n                            \n                            \n                        \n                    \n                \n                \n                    \nnodeClass(node: TreeNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-tree/src/models/tree-options.ts:120\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    TreeNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowDrag\n                                    \n                                \n                                \n                                    \n                                        allowDrag:     boolean | IAllowDragFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | IAllowDragFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/ngx-tree/src/models/tree-options.ts:115\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowDrop\n                                    \n                                \n                                \n                                    \n                                        allowDrop:     boolean | IAllowDropFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | IAllowDropFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/ngx-tree/src/models/tree-options.ts:116\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        levelPadding\n                                    \n                                \n                                \n                                    \n                                        levelPadding:     number | ILevelPaddingFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | ILevelPaddingFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/ngx-tree/src/models/tree-options.ts:117\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useVirtualScroll\n                                    \n                                \n                                \n                                    \n                                        useVirtualScroll:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/ngx-tree/src/models/tree-options.ts:118\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import defaults from 'lodash-es/defaults'\nimport defaultsDeep from 'lodash-es/defaultsDeep'\nimport isNumber from 'lodash-es/isNumber'\nimport { defaultActionMapping } from './actions'\nimport { TreeModel } from './tree-model'\nimport { TreeNode } from './tree-node'\n\n/**\n * common functions to handle tree actions\n */\nexport interface ActionHandler {\n    (tree: TreeModel, node: TreeNode, $event: any, ...rest);\n}\n\n/**\n * a mapping model to link mouse events and keyboard events with actions\n */\nexport interface ActionMapping {\n    mouse?: {\n        click?: ActionHandler,\n        dblClick?: ActionHandler,\n        contextMenu?: ActionHandler,\n        expanderClick?: ActionHandler,\n        dragStart?: ActionHandler,\n        drag?: ActionHandler,\n        dragEnd?: ActionHandler,\n        dragOver?: ActionHandler,\n        dragLeave?: ActionHandler,\n        dragEnter?: ActionHandler,\n        drop?: ActionHandler,\n    };\n    keys?: {\n        [key: number]: ActionHandler\n    };\n}\n\nexport interface DropTarget {\n    parent: TreeNode\n    index: number\n}\n\nexport type IAllowDropFn = (element: TreeNode, to: DropTarget, $event?: DragEvent) => boolean\n\nexport type IAllowDragFn = (node: TreeNode) => boolean\n\nexport type ILevelPaddingFn = (node: TreeNode) => string\n\nexport const defaultUIOptions: TreeUIOptions = {\n    allowDrag: false,\n    allowDrop: false,\n    levelPadding: () => '0px',\n    useVirtualScroll: false,\n    nodeClass: () => '',\n}\n\nexport const defaultDataOptions: TreeDataOptions = {\n    childrenField: 'children',\n    displayField: 'name',\n    idField: 'id',\n    isExpandedField: 'isExpanded',\n    actionMapping: defaultActionMapping,\n    getChildren: (node) => null,\n}\n\nexport interface TreeUIOptions {\n    /**\n     * Specify if dragging tree nodes is allowed.\n     * This could be a boolean, or a function that receives a TreeNode and returns a boolean\n     *\n     * **Default value: false**\n     *\n     * Example:\n     * ```\n     * options = {\n     *   allowDrag: true\n     * }\n     * ```\n     */\n    allowDrag?: boolean | IAllowDragFn;\n    /**\n     * Specify whether dropping inside the tree is allowed. Optional types:\n     *  - boolean\n     *  - (element:any, to:{parent:ITreeNode, index:number}):boolean\n     * A function that receives the dragged element, and the drop location (parent node and index inside the parent),\n     * and returns true or false.\n     *\n     * **Default Value: true**\n     *\n     * example:\n     * ```\n     * options = {\n     *  allowDrop: (element, {parent, index}) => parent.isLeaf\n     * }\n     * ```\n     */\n    allowDrop?: boolean | IAllowDropFn;\n    /**\n     * Specify padding per node instead of children padding (to allow full row select for example)\n     */\n    levelPadding?: ILevelPaddingFn;\n    /**\n     * Boolean whether virtual scroll should be used.\n     * Increases performance for large trees\n     * Default is false\n     */\n    useVirtualScroll?: boolean;\n\n    /**\n     * Supply function for getting a custom class for the node component\n     */\n    nodeClass?(node: TreeNode): string;\n}\n\nexport interface RawTreeUIOptions {\n    allowDrag?: boolean | IAllowDragFn;\n    allowDrop?: boolean | IAllowDropFn;\n    levelPadding?: number | ILevelPaddingFn;\n    useVirtualScroll?: boolean;\n\n    nodeClass?(node: TreeNode): string;\n}\n\n/**\n * create tree options about UI with defaults\n * @param rawOpts\n */\nexport function createTreeUIOptions(rawOpts: RawTreeUIOptions = {}): TreeUIOptions {\n    const levelPaddingOpt = rawOpts.levelPadding\n    if (isNumber(levelPaddingOpt)) {\n        rawOpts.levelPadding = function (node: TreeNode) {\n            return (levelPaddingOpt + levelPaddingOpt * (node.level - 1)) + 'px'\n        }\n    }\n\n    return defaults({}, rawOpts, defaultUIOptions)\n}\n\nexport interface TreeDataOptions {\n    /**\n     * Override children field. Default: 'children'\n     */\n    childrenField?: string;\n    /**\n     * Override display field. Default: 'name'\n     */\n    displayField?: string;\n    /**\n     * Override id field. Default: 'id'\n     */\n    idField?: string;\n    /**\n     * Override isExpanded field. Default: 'isExpanded'\n     */\n    isExpandedField?: string;\n    /**\n     * Change the default mouse and key actions on the tree\n     */\n    actionMapping?: ActionMapping;\n\n    /**\n     * Supply function for getting fields asynchronously. Should return a Promise\n     */\n    getChildren?(node: TreeNode): Promise;\n}\n\n/**\n * create tree options about data with defaults\n * @param rawOpts\n */\nexport function createTreeDataOptions(rawOpts: TreeDataOptions = {}): TreeDataOptions {\n    return defaultsDeep({}, rawOpts, defaultDataOptions)\n}\n\n// export const TREE_DATA_OPTIONS = new InjectionToken('TREE_DATA_OPTIONS')\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TreeDragDirective.html":{"url":"directives/TreeDragDirective.html","title":"directive - TreeDragDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TreeDragDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-tree/src/directives/tree-drag.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ngxTreeDrag]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxTreeDrag\n                            \n                            \n                                treeDragEnabled\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragend\n                            \n                            \n                                dragstart\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2, treeDraggingTargetService: TreeDraggingTargetService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-tree/src/directives/tree-drag.directive.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    treeDraggingTargetService\n                                                  \n                                                        \n                                                                    TreeDraggingTargetService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxTreeDrag\n                    \n                    \n                            \n                            Type:    TreeNode\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/directives/tree-drag.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        treeDragEnabled\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/directives/tree-drag.directive.ts:12\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            dragend\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragend(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-tree/src/directives/tree-drag.directive.ts:44\n                            \n                        \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragstart\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragstart(ev: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-tree/src/directives/tree-drag.directive.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-tree/src/directives/tree-drag.directive.ts:54\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener, Input, OnChanges, Renderer2 } from '@angular/core'\nimport { TreeNode } from '../models'\nimport { TreeDraggingTargetService } from '../services/tree-dragging-target.service'\n\nconst DRAGGING_TARGET_CLASS = 'ngx-tree-dragging-target'\n\n@Directive({\n    selector: '[ngxTreeDrag]',\n})\nexport class TreeDragDirective implements OnChanges {\n    @Input('ngxTreeDrag') draggingTarget: TreeNode\n    @Input() treeDragEnabled: boolean\n\n    constructor(\n        private el: ElementRef,\n        private renderer: Renderer2,\n        private treeDraggingTargetService: TreeDraggingTargetService,\n    ) {\n    }\n\n    @HostListener('dragstart', ['$event'])\n    onDragStart(ev) {\n        // setting the data is required by firefox\n        ev.dataTransfer.setData('text', this.draggingTarget.id)\n        ev.dataTransfer.dropEffect = 'move'\n        this.renderer.addClass(this.el.nativeElement, DRAGGING_TARGET_CLASS)\n\n        this.treeDraggingTargetService.set(this.draggingTarget)\n        if (this.draggingTarget.mouseAction) {\n            this.draggingTarget.mouseAction('dragStart', ev)\n        }\n    }\n\n    /*@HostListener('drag', ['$event'])\n    onDrag(ev) {\n        if (this.draggingTarget.mouseAction) {\n            this.draggingTarget.mouseAction('drag', ev)\n        }\n\n        console.log('drag')\n    }*/\n\n    @HostListener('dragend', ['$event'])\n    onDragEnd(event) {\n        if (this.draggingTarget.mouseAction) {\n            this.draggingTarget.mouseAction('dragEnd', event)\n        }\n\n        this.renderer.removeClass(this.el.nativeElement, DRAGGING_TARGET_CLASS)\n\n        this.treeDraggingTargetService.set(null)\n    }\n\n    ngOnChanges(changes) {\n        if ('treeDragEnabled' in changes) {\n            this.renderer.setAttribute(this.el.nativeElement, 'draggable', this.treeDragEnabled ? 'true' : 'false')\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TreeDraggingTargetService.html":{"url":"injectables/TreeDraggingTargetService.html","title":"injectable - TreeDraggingTargetService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TreeDraggingTargetService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-tree/src/services/tree-dragging-target.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _draggedElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                isDragging\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-tree/src/services/tree-dragging-target.service.ts:13\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDragging\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDragging()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-tree/src/services/tree-dragging-target.service.ts:17\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(draggedElement: TreeNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-tree/src/services/tree-dragging-target.service.ts:9\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        draggedElement\n                                                        \n                                                                    TreeNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _draggedElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _draggedElement:     TreeNode\n\n                    \n                \n                    \n                        \n                            Type :     TreeNode\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-tree/src/services/tree-dragging-target.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { Subject } from 'rxjs'\nimport { TreeNode } from '../models'\n\n@Injectable()\nexport class TreeDraggingTargetService extends Subject {\n    _draggedElement: TreeNode = null\n\n    set (draggedElement: TreeNode) {\n        this._draggedElement = draggedElement\n    }\n\n    get () {\n        return this._draggedElement\n    }\n\n    isDragging() {\n        return !!this.get()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeEvent.html":{"url":"interfaces/TreeEvent.html","title":"interface - TreeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreeEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-tree/src/models/events.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        eventName\n                                \n                                \n                                            Optional\n                                        isExpanded\n                                \n                                \n                                            Optional\n                                        node\n                                \n                                \n                                            Optional\n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventName\n                                    \n                                \n                                \n                                    \n                                        eventName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in projects/ngx-tree/src/models/events.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isExpanded\n                                    \n                                \n                                \n                                    \n                                        isExpanded:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/ngx-tree/src/models/events.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:     TreeNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TreeNode\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/ngx-tree/src/models/events.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in projects/ngx-tree/src/models/events.ts:7\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { TreeNode } from './tree-node'\n\nexport interface TreeEvent {\n    eventName: string\n    node?: TreeNode\n    isExpanded?: boolean\n    to?: { parent: TreeNode; index: number }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeLoadingComponent.html":{"url":"components/TreeLoadingComponent.html","title":"component - TreeLoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeLoadingComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    projects/ngx-tree/src/components/tree-loading/tree-loading.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tree-loading\n            \n\n            \n                styleUrls\n                tree-loading.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-loading.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                node\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.tree-loading\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        node\n                    \n                    \n                            \n                            Type:    TreeNode\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-loading/tree-loading.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        template\n                    \n                    \n                            \n                            Type:    TemplateRef\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-loading/tree-loading.component.ts:11\n                            \n                        \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.tree-loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.tree-loading:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-loading/tree-loading.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, TemplateRef } from '@angular/core'\nimport { TreeNode } from '../../models'\n\n@Component({\n    selector: 'ngx-tree-loading',\n    templateUrl: './tree-loading.component.html',\n    styleUrls: ['./tree-loading.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TreeLoadingComponent {\n    @Input() template: TemplateRef\n    @Input() node: TreeNode\n\n    @HostBinding('class.tree-loading') className = true\n}\n\n    \n\n    \n        loading...\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'loading...'\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeLoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeComponent.html":{"url":"components/TreeNodeComponent.html","title":"component - TreeNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    projects/ngx-tree/src/components/tree-node/tree-node.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tree-node\n            \n\n            \n                styleUrls\n                tree-node.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-node.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                node\n                            \n                            \n                                options\n                            \n                            \n                                templates\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.tree-node\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node/tree-node.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                    \n                            \n                            Type:    TreeNode\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node/tree-node.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                            \n                            Type:    TreeUIOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node/tree-node.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        templates\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node/tree-node.component.ts:14\n                            \n                        \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.tree-node\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.tree-node:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node/tree-node.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \nallowDrag(node: TreeNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node/tree-node.component.ts:26\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    TreeNode\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        allowDrop\n                    \n                \n\n                \n                    \n                        getallowDrop()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-tree/src/components/tree-node/tree-node.component.ts:18\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, HostBinding, Input } from '@angular/core'\nimport isFunction from 'lodash-es/isFunction'\nimport { TreeNode, TreeUIOptions } from '../../models'\n\n@Component({\n    selector: 'ngx-tree-node',\n    templateUrl: './tree-node.component.html',\n    styleUrls: ['./tree-node.component.scss'],\n})\nexport class TreeNodeComponent {\n    @Input() node: TreeNode\n    @Input() options: TreeUIOptions\n    @Input() index: number\n    @Input() templates: any\n\n    @HostBinding('class.tree-node') className = true\n\n    get allowDrop() {\n        return (node: TreeNode, $event?: DragEvent) => {\n            return isFunction(this.options.allowDrop)\n                ? this.options.allowDrop(node, { parent: this.node, index: node.index }, $event)\n                : this.options.allowDrop\n        }\n    }\n\n    allowDrag(node: TreeNode) {\n        return isFunction(this.options.allowDrag) ? this.options.allowDrag(node) : this.options.allowDrag\n    }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeContentComponent.html":{"url":"components/TreeNodeContentComponent.html","title":"component - TreeNodeContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeContentComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    projects/ngx-tree/src/components/tree-node-content/tree-node-content.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tree-node-content\n            \n\n            \n                styleUrls\n                tree-node-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-node-content.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                node\n                            \n                            \n                                options\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.tree-node-content\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-content/tree-node-content.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                    \n                            \n                            Type:    TreeNode\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-content/tree-node-content.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                            \n                            Type:    TreeUIOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-content/tree-node-content.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        template\n                    \n                    \n                            \n                            Type:    TemplateRef\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-content/tree-node-content.component.ts:14\n                            \n                        \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.tree-node-content\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.tree-node-content:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-content/tree-node-content.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, TemplateRef } from '@angular/core'\nimport { TreeNode, TreeUIOptions } from '../../models'\n\n@Component({\n    selector: 'ngx-tree-node-content',\n    templateUrl: './tree-node-content.component.html',\n    styleUrls: ['./tree-node-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TreeNodeContentComponent {\n    @Input() options: TreeUIOptions\n    @Input() node: TreeNode\n    @Input() index: number\n    @Input() template: TemplateRef\n    @HostBinding('class.tree-node-content') className = true\n}\n\n    \n\n    \n        {{ node.displayField }}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ node.displayField }}'\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeDropSlotComponent.html":{"url":"components/TreeNodeDropSlotComponent.html","title":"component - TreeNodeDropSlotComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeDropSlotComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    projects/ngx-tree/src/components/tree-node-drop-slot/tree-node-drop-slot.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tree-node-drop-slot\n            \n\n            \n                styleUrls\n                tree-node-drop-slot.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-node-drop-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDrop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dropIndex\n                            \n                            \n                                node\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dropIndex\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-drop-slot/tree-node-drop-slot.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                    \n                            \n                            Type:    TreeNode\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-drop-slot/tree-node-drop-slot.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                            \n                            Type:    TreeUIOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-drop-slot/tree-node-drop-slot.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \nonDrop($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-drop-slot/tree-node-drop-slot.component.ts:24\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allowDrop:     \n\n                    \n                \n                    \n                        \n                            Default value : (element, $event) =>\n        isFunction(this.options.allowDrop)\n            ? this.options.allowDrop(element, {\n                parent: this.node,\n                index: this.dropIndex,\n            }, $event)\n            : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-drop-slot/tree-node-drop-slot.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core'\nimport isFunction from 'lodash-es/isFunction'\nimport { TreeNode, TreeUIOptions } from '../../models'\n\n@Component({\n    selector: 'ngx-tree-node-drop-slot',\n    templateUrl: './tree-node-drop-slot.component.html',\n    styleUrls: ['./tree-node-drop-slot.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TreeNodeDropSlotComponent {\n    @Input() node: TreeNode\n    @Input() options: TreeUIOptions\n    @Input() dropIndex: number\n\n    allowDrop = (element, $event) =>\n        isFunction(this.options.allowDrop)\n            ? this.options.allowDrop(element, {\n                parent: this.node,\n                index: this.dropIndex,\n            }, $event)\n            : false\n\n    onDrop($event) {\n        this.node.mouseAction('drop', $event.event, {\n            from: $event.element,\n            to: { parent: this.node, index: this.dropIndex },\n        })\n    }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeDropSlotComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeExpanderComponent.html":{"url":"components/TreeNodeExpanderComponent.html","title":"component - TreeNodeExpanderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeExpanderComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    projects/ngx-tree/src/components/tree-node-expander/tree-node-expander.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tree-node-expander\n            \n\n            \n                styleUrls\n                tree-node-expander.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-node-expander.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                node\n                            \n                            \n                                options\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.tree-node-expander\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-expander/tree-node-expander.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                    \n                            \n                            Type:    TreeNode\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-expander/tree-node-expander.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                            \n                            Type:    TreeUIOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-expander/tree-node-expander.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        template\n                    \n                    \n                            \n                            Type:    TemplateRef\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-expander/tree-node-expander.component.ts:13\n                            \n                        \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.tree-node-expander\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.tree-node-expander:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-expander/tree-node-expander.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, HostBinding, Input, TemplateRef } from '@angular/core'\nimport { TreeNode, TreeUIOptions } from '../../models'\n\n@Component({\n    selector: 'ngx-tree-node-expander',\n    templateUrl: './tree-node-expander.component.html',\n    styleUrls: ['./tree-node-expander.component.scss'],\n})\nexport class TreeNodeExpanderComponent {\n    @Input() options: TreeUIOptions\n    @Input() node: TreeNode\n    @Input() index: number\n    @Input() template: TemplateRef\n\n    @HostBinding('class.tree-node-expander') className = true\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeExpanderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeWrapperComponent.html":{"url":"components/TreeNodeWrapperComponent.html","title":"component - TreeNodeWrapperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeWrapperComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    projects/ngx-tree/src/components/tree-node-wrapper/tree-node-wrapper.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tree-node-wrapper\n            \n\n            \n                styleUrls\n                tree-node-wrapper.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-node-wrapper.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                node\n                            \n                            \n                                options\n                            \n                            \n                                templates\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.tree-node-wrapper\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(virtualScroll: TreeVirtualScroll, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-tree/src/components/tree-node-wrapper/tree-node-wrapper.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    virtualScroll\n                                                  \n                                                        \n                                                                    TreeVirtualScroll\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-wrapper/tree-node-wrapper.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                    \n                            \n                            Type:    TreeNode\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-wrapper/tree-node-wrapper.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                            \n                            Type:    TreeUIOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-wrapper/tree-node-wrapper.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        templates\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-wrapper/tree-node-wrapper.component.ts:14\n                            \n                        \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.tree-node-wrapper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.tree-node-wrapper:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-wrapper/tree-node-wrapper.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-wrapper/tree-node-wrapper.component.ts:29\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-wrapper/tree-node-wrapper.component.ts:25\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/ngx-tree/src/components/tree-node-wrapper/tree-node-wrapper.component.ts:21\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, HostBinding, Input, OnDestroy, OnInit, } from '@angular/core'\nimport { TreeNode, TreeUIOptions } from '../../models'\nimport { TreeVirtualScroll } from '../../services/tree-virtual-scroll.service'\n\n@Component({\n    selector: 'ngx-tree-node-wrapper',\n    templateUrl: './tree-node-wrapper.component.html',\n    styleUrls: ['./tree-node-wrapper.component.scss'],\n})\nexport class TreeNodeWrapperComponent implements OnInit, OnDestroy, AfterViewInit {\n    @Input() node: TreeNode\n    @Input() options: TreeUIOptions\n    @Input() index: number\n    @Input() templates: any\n\n    @HostBinding('class.tree-node-wrapper') className = true\n\n    constructor(private virtualScroll: TreeVirtualScroll, private elementRef: ElementRef) {\n    }\n\n    ngOnInit() {\n        this.node.elementRef = this.elementRef\n    }\n\n    ngOnDestroy() {\n        this.node.elementRef = null\n    }\n\n    ngAfterViewInit() {\n        if (!this.virtualScroll.isDisabled() && !this.virtualScroll.hasEnoughNodeHeight) {\n            this.virtualScroll.reportNodeHeight(this.elementRef.nativeElement.getBoundingClientRect().height)\n        }\n    }\n}\n\n    \n\n    \n        \n  \n\n  \n  \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeWrapperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.8.0 (2018-05-16)\nBug Fixes\n\ntypes: improve typings (333036f)\n\nFeatures\n\nupgrade angular-cli, deps and support Angular 6 (9698654)\n\nBREAKING CHANGES\n\nupgrading to rxjs 6.0 breaks backward compatibility\n\n\n0.7.1 (2017-12-26)\n\n0.7.0 (2017-11-22)\nBug Fixes\n\ntype: remove unnecessary types and code (a775aad)\n\nFeatures\n\ndeps: upgrade deps to support Angular 5 (5936f8f)\n\n\n0.6.0 (2017-10-26)\nFeatures\n\nrxjs: upgrade rxjs and use its new lettable feature (e2d3abb)\n\nBREAKING CHANGES\n\nrxjs: previously we added the operatators to Observable's prototype, now we don't. This could raise some missing references error at the user end.\n\n\n0.5.3 (2017-10-09)\nBug Fixes\n\nsubscription: assign empty subscription to related variables (78afac1)\n\n\n0.5.2 (2017-10-09)\nBug Fixes\n\nfilter: correct the broken filter functionality (63674e2)\n\n\n0.5.1 (2017-09-25)\nBug Fixes\n\ntree-node: only display children when node has children (3e3fd7b)\n\n\n0.5.0 (2017-09-20)\nBug Fixes\n\nrefresh: ensure proper view update after nodes updated (dc6758b)\nviewport: fire initialized event when virtualScroll disabled (da5d86a)\n\nFeatures\n\nkeepNodesExpanded: support keep nodes expanded when data change (103b9b8)\n\n\n0.4.0 (2017-09-18)\nBug Fixes\n\nexpander: center the expander, optimize template and style (5e3be34)\noptions: ensure tree component has default data options (aa32c1b)\n\nFeatures\n\nactivateTarget: support specifying the activated node (02fa222)\nexpander-template: support custom template for tree expander (9158c38)\ntemplate-context: deprecate $implicit context for template context (5ef5498)\n\n\n0.3.4 (2017-09-15)\nBug Fixes\n\nngOutlet: add missing field for ngOutletContext (7023a8e)\n\n\n0.3.3 (2017-09-15)\nBug Fixes\n\ntree: correct the TreeDraggingTargetService module path (c9ddfef)\n\n\n0.3.2 (2017-09-15)\nBug Fixes\n\ntree: use correct modifier for template (a16b4cb)\n\n\n0.3.1 (2017-09-15)\nReverts\n\ntree: restore the treeDraggingTargetService injection (b2868bf)\n\n\n0.3.0 (2017-09-15)\nBug Fixes\n\nexports: use direct import for correct aot (06bd7a9)\n\nFeatures\n\ntree-node: support tree-node-full-template (4debcf5)\n\n\n0.2.2 (2017-09-14)\nBug Fixes\n\nBrowserModule: remove BrowserAnimationsModule as not for library (64027fb)\n\n\n0.2.1 (2017-09-14)\n\n0.2.0 (2017-09-14)\nFeatures\n\nexports: export most module for external reference (677284d)\n\nPerformance Improvements\n\ntree-node: avoid usage of function bind (abe0775)\n\n\n0.1.0 (2017-09-07)\nBug Fixes\n\nadd missing file (686acaf)\nmissing type for ngc (21a101e)\nexpander: stop expand event propagation as default (2b3f565)\nmemory-leak: ensure removed node has no ref to elementRef (aef71bf)\noptions: avoid reference error (86f2219)\nstyle: prevent wraping the node content (302b6fc)\n\nFeatures\n\nanimation: support animation and option to switch it on or off (6ed7b97)\ncore: set up code base (8e79fa0)\ndrag: add dragging target service (b82fc9e)\ndrag&drop: improve UX and performance (420967a)\ndrag&drop: support drag and drop feature (21a2e3c)\nfocusNode: support focusing a node from input with node id (a1f5cfb)\nlevelPadding: allow function as levelPadding for flexible style (acb8d68)\nmodel: emit sub-events before toggleExpander & loadingChildren (2e85611)\nmodel: refine the model layer (2c2a966)\nmodel: refine the model layer (2b51365)\nmodel: replace the object cache to map cache (dc20dfa)\nmodule: add moduleId for system.js (9a54282)\nscroll: support scrollIntoView either in virutal scroll or not (e2cc6d0)\ntree-node: redesign the drag&drop target and style (6efc4e4)\ntree-options: redesign options processing (13067d3)\nvirtual-scroll: leggy implementation of virtual-scroll feature (33ca365)\nvirtual-scroll: support disabling virtual scroll (6324459)\nvitual-scroll: simulate the scrollHeight with another way (4c9d403)\n\nPerformance Improvements\n\nmove changeable internal host bindings to parent template (785af75)\nvirtual-scroll: use a limit to end average node height collection (3bf532b)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            binarySearch   (projects/.../util.ts)\n                        \n                        \n                            canMoveNode   (projects/.../tree-model.ts)\n                        \n                        \n                            createTreeDataOptions   (projects/.../tree-options.ts)\n                        \n                        \n                            createTreeUIOptions   (projects/.../tree-options.ts)\n                        \n                        \n                            uuid   (projects/.../tree-node.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-tree/src/util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            binarySearch\n                            \n                            \n                        \n                    \n                \n                \n                    \nbinarySearch(nodes: undefined, condition: undefined, firstIndex: number)\n                    \n                \n\n\n\n                \n                    \n                            a binary search function\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodes\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        condition\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/ngx-tree/src/models/tree-model.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            canMoveNode\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanMoveNode(node: undefined, fromIndex: undefined, to: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromIndex\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        to\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/ngx-tree/src/models/tree-options.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTreeDataOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTreeDataOptions(rawOpts: undefined)\n                    \n                \n\n\n\n                \n                    \n                            create tree options about data with defaults\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rawOpts\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTreeUIOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTreeUIOptions(rawOpts: undefined)\n                    \n                \n\n\n\n                \n                    \n                            create tree options about UI with defaults\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rawOpts\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/ngx-tree/src/models/tree-node.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuid()\n                    \n                \n\n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-tree DEMO\nClaims\nThis module derivates from angular-tree-component. We remove the mobx dependency and do some performance improvements, whilst keep a similar component interface.\nInstallation\nTo install this library, run:\n$ npm install @e-cloud/ngx-tree --saveUsage\nFor details, please take a look at document site\nImports\nOnce you have installed the library, you can import it in your Angular AppModule:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import your library\nimport { NgxTreeModule } from '@e-cloud/ngx-tree';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n\n    // Specify your library as an import\n    NgxTreeModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Applications\ndemo usage\n\n\n  {{title}}\n\n\n  \n    {{ node.data.name }}\n  \n\nNOTE: the minimum input for ngx-tree component is nodes.\n\nRoot config\nThere is a forRoot() method on NgxTreeModule, which should be used only on root module of apps.\nforRoot injects two providers, TreeDraggingTargetService and VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA. The first holds the dragging element. The other specify the round size to calculate the average tree item height.\nTree options\nWe split the tree options into two category, TreeDataOptions and TreeUIOptions. dataOptions inputted by user will be passed into TreeModel which handle the tree data operations. uiOption will be passed into every child components required and declared tree templates(will introduce late).\nTree templates\nWe predefine five tree templates for flexible customization.\n\nloadingTemplate - loading indicator for async nodes\nexpanderTemplate - for tree expander customization,\ntreeNodeTemplate - for customization of tree node contents(not including node children components and node expander, only for every single node's content)\ntreeNodeWrapperTemplate - treeNodeTemplate + full customization over expander\ntreeNodeFullTemplate - treeNodeWrapperTemplate + full customization over how the node children display.\n\nDevelopment\nTo generate all *.js, *.d.ts and *.metadata.json files:\n$ npm run buildTo lint all *.ts files:\n$ npm run lintLicense\nMIT © e-cloud\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxTreeModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTreeModule\n\n\n\ncluster_NgxTreeModule_declarations\n\n\n\ncluster_NgxTreeModule_exports\n\n\n\n\nTreeLoadingComponent\n\nTreeLoadingComponent\n\n\n\nNgxTreeModule\n\nNgxTreeModule\n\nNgxTreeModule -->\n\nTreeLoadingComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeComponent\n\nTreeNodeComponent\n\nNgxTreeModule -->\n\nTreeNodeComponent->NgxTreeModule\n\n\n\n\n\nTreeComponent\n\nTreeComponent\n\nNgxTreeModule -->\n\nTreeComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeExpanderComponent\n\nTreeNodeExpanderComponent\n\nNgxTreeModule -->\n\nTreeNodeExpanderComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeWrapperComponent\n\nTreeNodeWrapperComponent\n\nNgxTreeModule -->\n\nTreeNodeWrapperComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeChildrenComponent\n\nTreeNodeChildrenComponent\n\nNgxTreeModule -->\n\nTreeNodeChildrenComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeContentComponent\n\nTreeNodeContentComponent\n\nNgxTreeModule -->\n\nTreeNodeContentComponent->NgxTreeModule\n\n\n\n\n\nTreeViewportComponent\n\nTreeViewportComponent\n\nNgxTreeModule -->\n\nTreeViewportComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeDropSlotComponent\n\nTreeNodeDropSlotComponent\n\nNgxTreeModule -->\n\nTreeNodeDropSlotComponent->NgxTreeModule\n\n\n\n\n\nTreeDragDirective\n\nTreeDragDirective\n\nNgxTreeModule -->\n\nTreeDragDirective->NgxTreeModule\n\n\n\n\n\nTreeDropDirective\n\nTreeDropDirective\n\nNgxTreeModule -->\n\nTreeDropDirective->NgxTreeModule\n\n\n\n\n\nTreeLoadingComponent \n\nTreeLoadingComponent \n\nTreeLoadingComponent  -->\n\nNgxTreeModule->TreeLoadingComponent \n\n\n\n\n\nTreeNodeComponent \n\nTreeNodeComponent \n\nTreeNodeComponent  -->\n\nNgxTreeModule->TreeNodeComponent \n\n\n\n\n\nTreeComponent \n\nTreeComponent \n\nTreeComponent  -->\n\nNgxTreeModule->TreeComponent \n\n\n\n\n\nTreeNodeExpanderComponent \n\nTreeNodeExpanderComponent \n\nTreeNodeExpanderComponent  -->\n\nNgxTreeModule->TreeNodeExpanderComponent \n\n\n\n\n\nTreeNodeWrapperComponent \n\nTreeNodeWrapperComponent \n\nTreeNodeWrapperComponent  -->\n\nNgxTreeModule->TreeNodeWrapperComponent \n\n\n\n\n\nTreeNodeChildrenComponent \n\nTreeNodeChildrenComponent \n\nTreeNodeChildrenComponent  -->\n\nNgxTreeModule->TreeNodeChildrenComponent \n\n\n\n\n\nTreeNodeContentComponent \n\nTreeNodeContentComponent \n\nTreeNodeContentComponent  -->\n\nNgxTreeModule->TreeNodeContentComponent \n\n\n\n\n\nTreeViewportComponent \n\nTreeViewportComponent \n\nTreeViewportComponent  -->\n\nNgxTreeModule->TreeViewportComponent \n\n\n\n\n\nTreeNodeDropSlotComponent \n\nTreeNodeDropSlotComponent \n\nTreeNodeDropSlotComponent  -->\n\nNgxTreeModule->TreeNodeDropSlotComponent \n\n\n\n\n\nTreeDragDirective \n\nTreeDragDirective \n\nTreeDragDirective  -->\n\nNgxTreeModule->TreeDragDirective \n\n\n\n\n\nTreeDropDirective \n\nTreeDropDirective \n\nTreeDropDirective  -->\n\nNgxTreeModule->TreeDropDirective \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        9 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllowDropPredicate   (projects/.../tree-drop.directive.ts)\n                        \n                        \n                            IAllowDragFn   (projects/.../tree-options.ts)\n                        \n                        \n                            IAllowDropFn   (projects/.../tree-options.ts)\n                        \n                        \n                            ILevelPaddingFn   (projects/.../tree-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-tree/src/directives/tree-drop.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        AllowDropPredicate\n                    \n                \n                \n                    \n                        AllowDropPredicate:     function\n\n                    \n                \n            \n        \n\n    projects/ngx-tree/src/models/tree-options.ts\n    \n        \n            \n                \n                    \n                        \n                        IAllowDragFn\n                    \n                \n                \n                    \n                        IAllowDragFn:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        IAllowDropFn\n                    \n                \n                \n                    \n                        IAllowDropFn:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ILevelPaddingFn\n                    \n                \n                \n                    \n                        ILevelPaddingFn:     function\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
