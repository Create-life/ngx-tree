var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["angular","angular/cor","angular/platform","app","app.compon","appcompon","applic","appmodul","async","averag","bootstrap","browser","browsermodul","buildto","calcul","categori","child","children","claim","class","cloud","cloud/ngx","compon","config","content","contents(not","custom","d.t","data","dataopt","declar","demo","depend","deriv","detail","develop","display","document","drag","e","element","expand","expandertempl","export","file","first","five","flexibl","forroot","full","gener","get","handl","height","hold","import","improv","includ","index","indic","inject","input","instal","interfac","introduc","item","js","keep","late","librari","lint","lintlicens","load","loadingtempl","look","match","metadata.json","method","minimum","mit","mobx","modul","ngmodul","ngx","ngxtreemodul","ngxtreemodule.forroot","node","node'","node.data.nam","note","npm","onc","oper","option","over","pass","perform","pleas","predefin","provid","remov","requir","result","root","round","run","saveusag","similar","singl","site","size","specifi","split","start","take","templat","templates(wil","titl","tree","treedataopt","treedraggingtargetservic","treemodel","treenodefulltempl","treenodetempl","treenodewrappertempl","treeuioption","ts","two","uioption","us","usag","user","virtual_scroll_node_height_quota","whilst"],"overview.html":["1","2","9","bootstrap","class","cluster_ngxtreemodul","cluster_ngxtreemodule_declar","cluster_ngxtreemodule_export","compon","declar","depend","direct","export","inject","interfac","legend","match","modul","ngxtreemodul","out","overview","provid","reset","result","treecompon","treedragdirect","treedropdirect","treeloadingcompon","treenodechildrencompon","treenodecompon","treenodecontentcompon","treenodedropslotcompon","treenodeexpandercompon","treenodewrappercompon","treeviewportcompon","zoom"],"changelog.html":["0.1.0","0.2.0","0.2.1","0.2.2","0.3.0","0.3.1","0.3.2","0.3.3","0.3.4","0.4.0","0.5.0","0.5.1","0.5.2","0.5.3","0.6.0","0.7.0","0.7.1","02fa222","06bd7a9","07","09","10","103b9b8","11","12","13067d3","14","15","18","20","2017","21a101","21a2e3c","22","25","26","2b3f565","2b51365","2c2a966","2e85611","302b6fc","33ca365","3bf532b","3e3fd7b","420967a","4c9d403","4debcf5","5","5936f8f","5e3be34","5ef5498","6324459","63674e2","64027fb","677284d","686acaf","6ed7b97","6efc4e4","7023a8e","785af75","78afac1","86f2219","8e79fa0","9158c38","9a54282","a16b4cb","a1f5cfb","a775aad","aa32c1b","abe0775","acb8d68","activ","activatetarget","ad","add","aef71bf","allow","angular","anim","anoth","aot","assign","averag","avoid","b2868bf","b82fc9e","base","befor","bind","break","broken","browseranimationsmodul","browsermodul","bug","c9ddfef","cach","center","chang","changeabl","changelog","children","code","collect","commit","compon","content","context","core","correct","custom","da5d86a","data","dc20dfa","dc6758b","default","dep","deprec","direct","disabl","display","document","don't","drag","drag&drop","drop","e2cc6d0","e2d3abb","elementref","emit","empti","end","ensur","error","event","expand","export","extern","featur","field","file","filter","fire","fix","flexibl","focus","focusnod","full","function","get","guidelin","height","host","id","implement","implicit","import","improv","initi","inject","input","intern","keep","keepnodesexpand","layer","leak","leggi","lettabl","levelpad","librari","limit","loadingchildren","log","map","match","memori","miss","model","modifi","modul","moduleid","move","new","ngc","ngoutlet","ngoutletcontext","node","notabl","now","object","observable'","operat","optim","option","parent","path","perform","prevent","previous","process","project","propag","proper","prototyp","rais","redesign","ref","refer","refin","refresh","relat","remov","replac","restor","result","revert","rxj","scroll","scrollheight","scrollintoview","see","servic","set","simul","specifi","standard","start","stop","style","sub","subscript","support","switch","system.j","target","templat","toggleexpand","tree","treedraggingtargetservic","type","unnecessari","up","updat","upgrad","us","usag","user","ux","variabl","version","view","viewport","virtual","virtualscrol","virut","vitual","way","wrape"],"modules.html":["brows","browser","match","modul","ngxtreemodul","result","support","svg"],"modules/NgxTreeModule.html":["5","angular/common","angular/cor","bootstrap","children.compon","children/tre","class","cluster_ngxtreemodul","cluster_ngxtreemodule_declar","cluster_ngxtreemodule_export","commonmodul","components/tre","components/tree/tree.compon","constants/ev","constants/key","content.compon","content/tre","declar","depend","directives/tre","drag","drag.direct","drop","drop.direct","expander.compon","expander/tre","export","file","forroot","import","info","legend","loading.compon","loading/tre","match","models/index","modul","modulewithprovid","ngmodul","ngxtreemodul","node","node.compon","node/tre","out","provid","reset","result","return","scroll.servic","services/tre","slot.compon","slot/tre","sourc","src/ngx","static","target.servic","tree/index.t","treecompon","treedragdirect","treedraggingtargetservic","treedropdirect","treeloadingcompon","treenodechildrencompon","treenodecompon","treenodecontentcompon","treenodedropslotcompon","treenodeexpandercompon","treenodewrappercompon","treeviewportcompon","treevirtualscrol","usevalu","viewport.compon","viewport/tre","virtual","virtual_scroll_node_height_quota","wrapper.compon","wrapper/tre","zoom"],"components/TreeComponent.html":["activ","activatetarget","actual_compon","addnod","allowdrag","allowdrop","angular/cor","argument","blur","bodi","boolean","chang","changefilt","changes.activatetarget","changes.activatetarget.currentvalu","changes.allowdrag","changes.allowdrop","changes.dataopt","changes.dataoptions.currentvalu","changes.focustarget","changes.focustarget.currentvalu","changes.levelpad","changes.nod","changes.nodeclass","changes.nodes.currentvalu","changes.nodes.isfirstchang","changes.usevirtualscrol","children'},{'nam","children.compon","children/tre","class","class.ngx","classnam","closest","collaps","compon","component_templ","const","constants/ev","constructor","constructor(publ","constructor(treedraggingtargetservic","content'},{'nam","contentchild","contentchild('expandertempl","contentchild('loadingtempl","contentchild('treenodefulltempl","contentchild('treenodetempl","contentchild('treenodewrappertempl","createtreeuiopt","data","dataopt","deactiv","decor","default","defin","descript","direct","dom","drag","drop","each","each(this.emittermap","element","emitt","emitter.complet","emittermap","enableanim","es/each","event","event.target.closest('ngx","eventemitt","eventsmap","expand","expander'},{'nam","expandertempl","export","fals","file","focu","focus","focusednod","focustarget","function","hostbind","hostbinding('class.ngx","hostlisten","hostlistener('bodi","html","iallowdragfn","iallowdropfn","id","ilevelpaddingfn","implement","import","index","info","initi","input","insideclick","keepnodesexpand","keydown","keydown($ev","legend","levelpad","loadchildren","loading'},{'nam","loadingtempl","lodash","map","map[nam","match","metadata","method","model","mousedown","mousedown($ev","movenod","name","new","ngonchang","ngonchanges(chang","ngondestroy","ngx","ngxtreedrag]'},{'nam","ngxtreedrop","node","node'},{'nam","nodeclass","null","number","object.keys(tree_events).reduce((map","oldtreemodel","oldtreemodel.expandednodes.foreach(nod","onchang","ondestroy","onkeydown($ev","onmousedown($ev","option","output","paramet","properti","public","refreshtre","removenod","result","return","root","selector","services/tre","simplechang","sizechang","slot'},{'nam","sourc","src/ngx","string","styleurl","target.servic","templat","templateref","templateurl","textarea'].includes(document.activeelement.tagname.tolowercas","this.allowdrag","this.allowdrop","this.dataopt","this.emittermap","this.hasownproperty(nam","this.keepnodesexpand","this.levelpad","this.nodeclass","this.refreshtre","this.treemodel","this.treemodel.activatenode(this.activatetarget","this.treemodel.focusednod","this.treemodel.focusnode(this.focustarget","this.treemodel.isfocus","this.treemodel.performkeyaction(focusednod","this.treemodel.setexpandednodeinplace(nod","this.treemodel.setfocus(fals","this.treemodel.updateoptions(changes.dataoptions.currentvalu","this.uiopt","this.usevirtualscrol","this.viewportcomponent.setviewport","this[nam","throw","toggleexpand","tree","tree'},{'nam","tree.component.html","tree.component.scss","tree/components/tree/tree.component.t","tree/components/tree/tree.component.ts:104","tree/components/tree/tree.component.ts:143","tree/components/tree/tree.component.ts:150","tree/components/tree/tree.component.ts:165","tree/components/tree/tree.component.ts:173","tree/components/tree/tree.component.ts:38","tree/components/tree/tree.component.ts:39","tree/components/tree/tree.component.ts:40","tree/components/tree/tree.component.ts:41","tree/components/tree/tree.component.ts:46","tree/components/tree/tree.component.ts:50","tree/components/tree/tree.component.ts:54","tree/components/tree/tree.component.ts:55","tree/components/tree/tree.component.ts:57","tree/components/tree/tree.component.ts:58","tree/components/tree/tree.component.ts:59","tree/components/tree/tree.component.ts:60","tree/components/tree/tree.component.ts:61","tree/components/tree/tree.component.ts:62","tree/components/tree/tree.component.ts:63","tree/components/tree/tree.component.ts:65","tree/components/tree/tree.component.ts:66","tree/components/tree/tree.component.ts:67","tree/components/tree/tree.component.ts:68","tree/components/tree/tree.component.ts:69","tree/components/tree/tree.component.ts:70","tree/components/tree/tree.component.ts:71","tree/components/tree/tree.component.ts:72","tree/components/tree/tree.component.ts:73","tree/components/tree/tree.component.ts:74","tree/components/tree/tree.component.ts:75","tree/components/tree/tree.component.ts:76","tree/components/tree/tree.component.ts:77","tree/components/tree/tree.component.ts:79","tree/components/tree/tree.component.ts:81","tree/components/tree/tree.component.ts:82","tree/components/tree/tree.component.ts:83","tree/components/tree/tree.component.ts:84","tree/components/tree/tree.component.ts:85","tree/components/tree/tree.component.ts:87","tree/components/tree/tree.component.ts:88","tree/components/tree/tree.component.ts:90","tree_ev","treecompon","treedataopt","treedragdirect","treedraggingtargetservic","treedropdirect","treeloadingcompon","treemodel","treemodel(changes.nodes.currentvalu","treenod","treenodechildrencompon","treenodecompon","treenodecontentcompon","treenodedropslotcompon","treenodeexpandercompon","treenodefulltempl","treenodetempl","treenodewrappercompon","treenodewrappertempl","treeuioption","treeviewportcompon","true","type","typeerror(`unmatch","uioption","usevirtualscrol","valu","var","viewchild","viewchild('root","viewchild('viewport","viewport","viewport.compon","viewport/tre","viewportcompon","void","wrapper'},{'nam"],"components/TreeLoadingComponent.html":["actual_compon","angular/cor","changedetect","changedetectionstrategi","changedetectionstrategy.onpush","children'},{'nam","class","class.tre","classnam","compon","component_templ","content'},{'nam","default","defin","direct","dom","drop","element","expander'},{'nam","export","file","hostbind","hostbinding('class.tre","html","import","index","info","input","legend","load","loading'},{'nam","loading.component.html","loading.component.scss","loading.component.t","loading.component.ts:11","loading.component.ts:12","loading.component.ts:14","loading/tre","match","metadata","model","name","ngx","ngxtreedrag]'},{'nam","ngxtreedrop","node","node'},{'nam","result","selector","slot'},{'nam","sourc","src/ngx","styleurl","templat","templateref","templateurl","tree","tree'},{'nam","tree/components/tre","treecompon","treedragdirect","treedropdirect","treeloadingcompon","treenod","treenodechildrencompon","treenodecompon","treenodecontentcompon","treenodedropslotcompon","treenodeexpandercompon","treenodewrappercompon","treeviewportcompon","true","type","valu","var","viewport","wrapper'},{'nam"],"components/TreeNodeChildrenComponent.html":["0","225m","access","actual_compon","angular/anim","angular/cor","anim","animate(expansion_panel_animation_tim","begin","bezier(0.4,0.0,0.2,1","binari","binarysearch","binarysearch(nod","buffer","calcmargintop","chang","changes.children.currentvalu","check","children","children'},{'nam","children.component.html","children.component.scss","children.component.t","children.component.ts:29","children.component.ts:30","children.component.ts:32","children.component.ts:33","children.component.ts:34","children.component.ts:35","children.component.ts:36","children.component.ts:37","children.component.ts:40","children.component.ts:42","children.component.ts:44","children.component.ts:50","children.component.ts:55","children.component.ts:59","children.component.ts:72","children.component.ts:79","children.component.ts:83","children.component.ts:87","children.component.ts:97","children/tre","class","class.tre","classnam","collect","compon","component'","component_templ","condit","const","constructor","constructor(priv","constructor(virtualscrol","content'},{'nam","cubic","curv","default","defin","descript","direct","directli","disablemargintop","dom","drop","element","end","endpo","expandanim","expander'},{'nam","expans","expansion_panel_animation_tim","export","fals","file","first","firstindex","firstnod","firstnode.parent.isroot","firstnode.parent.posit","firstnode.posit","getviewportnod","getviewportnodes(nod","height","here","hidden","hostbind","hostbinding('@expandanim","hostbinding('class.tre","hostbinding('style.margin","html","implement","import","index","info","input","legend","lifecycl","loading'},{'nam","look","margintop","margintopattr","match","math.max(0","metadata","method","metric","model","name","next","ngonchang","ngonchanges(chang","ngondestroy","ngoninit","ngx","ngxtreedrag]'},{'nam","ngxtreedrop","node","node'","node'},{'nam","node.id","nodes.length","nopad","notif","onchang","ondestroy","oninit","option","overflow","pad","panel","paramet","privat","properti","refreshtre","result","return","root","root'","rxjs/subscript","scroll.servic","scrollsub","search","selector","self","services/tre","simplechang","slot'},{'nam","sourc","src/ngx","start","startpo","style","style.margin","styleurl","subscript","subscription.empti","templat","templateurl","this.calcmargintop","this.children","this.disablemargintop","this.getviewportnodes(this.node.visiblechildren","this.margintop","this.node.isexpand","this.node.treemodel","this.options.levelpad","this.refreshtre","this.scrollsub","this.scrollsub.unsubscrib","this.viewportnod","this.viewportnodes.length","this.viewportnodes[0","this.virtualscroll.averagenodeheight","this.virtualscroll.isdis","this.virtualscroll.waitforcollection((metr","time","top.px","tracknod","tracknode(index","transit","transition(':ent","transition(':leav","tree","tree'},{'nam","tree/components/tre","treecompon","treedragdirect","treedropdirect","treeloadingcompon","treenod","treenodechildrencompon","treenodecompon","treenodecontentcompon","treenodedropslotcompon","treenodeexpandercompon","treenodewrappercompon","treeuioption","treeviewportcompon","treevirtualscrol","trigger","trigger('expandanim","true","type","undefin","updat","us","util","valu","var","viewport","viewportnod","virtual","virtualscrol","visiblechildren","void","wrapper'},{'nam"],"components/TreeNodeComponent.html":["accessor","actual_compon","allowdrag","allowdrag(nod","allowdrop","angular/cor","children'},{'nam","class","class.tre","classnam","compon","component_templ","content'},{'nam","default","defin","descript","direct","dom","dragev","drop","element","es/isfunct","event","expander'},{'nam","export","file","getallowdrop","hostbind","hostbinding('class.tre","html","import","index","info","input","isfunct","isfunction(this.options.allowdrag","isfunction(this.options.allowdrop","legend","loading'},{'nam","lodash","match","metadata","method","model","name","ngx","ngxtreedrag]'},{'nam","ngxtreedrop","node","node'},{'nam","node.component.html","node.component.scss","node.component.t","node.component.ts:11","node.component.ts:12","node.component.ts:13","node.component.ts:14","node.component.ts:16","node.component.ts:18","node.component.ts:26","node.index","node/tre","number","option","paramet","parent","result","return","selector","slot'},{'nam","sourc","src/ngx","styleurl","templat","templateurl","this.nod","this.options.allowdrag","this.options.allowdrag(nod","this.options.allowdrop","this.options.allowdrop(nod","tree","tree'},{'nam","tree/components/tre","treecompon","treedragdirect","treedropdirect","treeloadingcompon","treenod","treenodechildrencompon","treenodecompon","treenodecontentcompon","treenodedropslotcompon","treenodeexpandercompon","treenodewrappercompon","treeuioption","treeviewportcompon","true","type","valu","var","viewport","wrapper'},{'nam"],"components/TreeNodeContentComponent.html":["actual_compon","angular/cor","changedetect","changedetectionstrategi","changedetectionstrategy.onpush","children'},{'nam","class","class.tre","classnam","compon","component_templ","content","content'},{'nam","content.component.html","content.component.scss","content.component.t","content.component.ts:11","content.component.ts:12","content.component.ts:13","content.component.ts:14","content.component.ts:15","content/tre","default","defin","direct","dom","drop","element","expander'},{'nam","export","file","hostbind","hostbinding('class.tre","html","import","index","info","input","legend","loading'},{'nam","match","metadata","model","name","ngx","ngxtreedrag]'},{'nam","ngxtreedrop","node","node'},{'nam","node.displayfield","number","option","result","selector","slot'},{'nam","sourc","src/ngx","styleurl","templat","templateref","templateurl","tree","tree'},{'nam","tree/components/tre","treecompon","treedragdirect","treedropdirect","treeloadingcompon","treenod","treenodechildrencompon","treenodecompon","treenodecontentcompon","treenodedropslotcompon","treenodeexpandercompon","treenodewrappercompon","treeuioption","treeviewportcompon","true","type","valu","var","viewport","wrapper'},{'nam"],"components/TreeNodeDropSlotComponent.html":["actual_compon","allowdrop","angular/cor","changedetect","changedetectionstrategi","changedetectionstrategy.onpush","children'},{'nam","class","compon","component_templ","content'},{'nam","default","defin","descript","direct","dom","drop","dropindex","element","es/isfunct","event","event.el","event.ev","expander'},{'nam","export","fals","file","html","import","index","info","input","isfunct","isfunction(this.options.allowdrop","legend","loading'},{'nam","lodash","match","metadata","method","model","name","ngx","ngxtreedrag]'},{'nam","ngxtreedrop","node","node'},{'nam","number","ondrop","ondrop($ev","option","paramet","parent","properti","result","return","selector","slot","slot'},{'nam","slot.component.html","slot.component.scss","slot.component.t","slot.component.ts:12","slot.component.ts:13","slot.component.ts:14","slot.component.ts:16","slot.component.ts:24","slot/tre","sourc","src/ngx","styleurl","templat","templateurl","this.dropindex","this.nod","this.node.mouseaction('drop","this.options.allowdrop(el","tree","tree'},{'nam","tree/components/tre","treecompon","treedragdirect","treedropdirect","treeloadingcompon","treenod","treenodechildrencompon","treenodecompon","treenodecontentcompon","treenodedropslotcompon","treenodeexpandercompon","treenodewrappercompon","treeuioption","treeviewportcompon","type","valu","var","viewport","void","wrapper'},{'nam"],"components/TreeNodeExpanderComponent.html":["actual_compon","angular/cor","children'},{'nam","class","class.tre","classnam","compon","component_templ","content'},{'nam","default","defin","direct","dom","drop","element","expand","expander'},{'nam","expander.component.html","expander.component.scss","expander.component.t","expander.component.ts:10","expander.component.ts:11","expander.component.ts:12","expander.component.ts:13","expander.component.ts:15","expander/tre","export","file","hostbind","hostbinding('class.tre","html","import","index","info","input","legend","loading'},{'nam","match","metadata","model","name","ngx","ngxtreedrag]'},{'nam","ngxtreedrop","node","node'},{'nam","number","option","result","selector","slot'},{'nam","sourc","src/ngx","styleurl","templat","templateref","templateurl","tree","tree'},{'nam","tree/components/tre","treecompon","treedragdirect","treedropdirect","treeloadingcompon","treenod","treenodechildrencompon","treenodecompon","treenodecontentcompon","treenodedropslotcompon","treenodeexpandercompon","treenodewrappercompon","treeuioption","treeviewportcompon","true","type","valu","var","viewport","wrapper'},{'nam"],"components/TreeNodeWrapperComponent.html":["actual_compon","afterviewinit","angular/cor","children'},{'nam","class","class.tre","classnam","compon","component_templ","constructor","constructor(priv","constructor(virtualscrol","content'},{'nam","default","defin","descript","direct","dom","drop","element","elementref","expander'},{'nam","export","file","hostbind","hostbinding('class.tre","html","implement","import","index","info","input","legend","loading'},{'nam","match","metadata","method","model","name","ngafterviewinit","ngondestroy","ngoninit","ngx","ngxtreedrag]'},{'nam","ngxtreedrop","node","node'},{'nam","null","number","ondestroy","oninit","option","paramet","privat","result","return","scroll.servic","selector","services/tre","slot'},{'nam","sourc","src/ngx","styleurl","templat","templateurl","this.elementref","this.node.elementref","this.virtualscroll.hasenoughnodeheight","this.virtualscroll.isdis","this.virtualscroll.reportnodeheight(this.elementref.nativeelement.getboundingclientrect().height","tree","tree'},{'nam","tree/components/tre","treecompon","treedragdirect","treedropdirect","treeloadingcompon","treenod","treenodechildrencompon","treenodecompon","treenodecontentcompon","treenodedropslotcompon","treenodeexpandercompon","treenodewrappercompon","treeuioption","treeviewportcompon","treevirtualscrol","true","type","valu","var","viewport","virtual","virtualscrol","void","wrapper","wrapper'},{'nam","wrapper.component.html","wrapper.component.scss","wrapper.component.t","wrapper.component.ts:11","wrapper.component.ts:12","wrapper.component.ts:13","wrapper.component.ts:14","wrapper.component.ts:16","wrapper.component.ts:21","wrapper.component.ts:25","wrapper.component.ts:29","wrapper/tre"],"components/TreeViewportComponent.html":["0","120","actual_compon","afterviewinit","angular/cor","argument","auto","avoid","behavior","block","boolean","calcul","chang","changedetect","changedetectionstrategi","changedetectionstrategy.onpush","changes.treemodel.isfirstchang","children'},{'nam","class","class.tre","classnam","cleartimeout(this.scrolltim","compon","component_templ","const","constants/ev","constructor","constructor(publ","constructor(virtualscrol","content'},{'nam","currentscrolltop","data","default","defin","descript","direct","disabl","disable_on_scroll_class","disableeventswhenscrol","dom","drop","element","elementref","enabl","end","event","event.preventdefault","event.stoppropag","eventnam","expander'},{'nam","export","fals","file","first","function","hostbind","hostbinding('class.tre","hostlisten","hostlistener('scrol","html","implement","import","index","info","initeventsubscript","input","isscrol","lastscrollintoviewtarget","lastscrolltop","lasttarget","lasttarget.forc","lasttarget.node.elementref.nativeelement.scrollintoview","lasttarget.node.elementref.nativeelement.scrollintoviewifneed","lasttarget.node.elementref.nativeelement.scrollintoviewifneeded(lasttarget.scrolltomiddl","lasttarget.scrolltomiddl","legend","loading'},{'nam","match","math.abs(currentscrolltop","merg","metadata","method","model","name","new","ngafterviewinit","ngonchang","ngonchanges(chang","ngondestroy","ngoninit","ngx","ngxtreedrag]'},{'nam","ngxtreedrop","node","node'},{'nam","null","number","old","onchang","ondestroy","oninit","onscroll(ev","option","paramet","privat","properti","provid","public","render","renderer2","result","return","round","rxjs/observable/merg","rxjs/subscript","scroll","scroll(ev","scroll.servic","scrollcallback","scrollintoviewandtick","scrollintoviewandtick(target","scrollintoviewsub","scrollintoviewtarget","scrollintoviewtick","scrolltim","selector","services/tre","settimeout","setviewport","simplechang","slot'},{'nam","sourc","src/ngx","structurechangesub","styleurl","subscrib","subscript","subscription.empti","target","target.node.elementref","targetoffset","templat","templateurl","this.disableeventswhenscrol","this.elementref.nativeelement.getboundingclientrect","this.elementref.nativeelement.scrolltop","this.initeventsubscript","this.isscrol","this.lastscrollintoviewtarget","this.lastscrolltop","this.ngondestroy","this.renderer.addclass(this.elementref.nativeel","this.renderer.removeclass(this.elementref.nativeel","this.scrollintoviewandtick(target","this.scrollintoviewsub","this.scrollintoviewsub.unsubscrib","this.scrollintoviewtick","this.scrolltim","this.setviewport","this.structurechangesub","this.structurechangesub.unsubscrib","this.tick","this.treemodel.events.addnod","this.treemodel.events.changefilt","this.treemodel.events.collaps","this.treemodel.events.expand","this.treemodel.events.loadchildren","this.treemodel.events.removenod","this.treemodel.fireev","this.treemodel.scrollintoview$.subscribe((target","this.virtualscroll.adjustviewport","this.virtualscroll.isdis","this.virtualscroll.recalcpositions(this.treemodel","this.virtualscroll.scrollintoview(lasttarget.nod","this.virtualscroll.setdisabled(!this.en","tick","tree","tree'},{'nam","tree/components/tre","tree_ev","tree_events.initi","treecompon","treedragdirect","treedropdirect","treeloadingcompon","treemodel","treenodechildrencompon","treenodecompon","treenodecontentcompon","treenodedropslotcompon","treenodeexpandercompon","treenodewrappercompon","treeviewportcompon","treevirtualscrol","true","type","us","valu","var","viewport","viewport.component.html","viewport.component.scss","viewport.component.t","viewport.component.ts:121","viewport.component.ts:135","viewport.component.ts:144","viewport.component.ts:155","viewport.component.ts:182","viewport.component.ts:193","viewport.component.ts:31","viewport.component.ts:32","viewport.component.ts:34","viewport.component.ts:36","viewport.component.ts:38","viewport.component.ts:40","viewport.component.ts:41","viewport.component.ts:42","viewport.component.ts:43","viewport.component.ts:44","viewport.component.ts:45","viewport.component.ts:47","viewport.component.ts:51","viewport.component.ts:78","viewport.component.ts:96","viewport/tre","virtual","virtualscrol","void","window.requestanimationfram","wrapper'},{'nam"],"directives/TreeDragDirective.html":["angular/cor","argument","boolean","chang","class","console.log('drag","const","constructor","constructor(el","data","defin","descript","direct","drag","drag.directive.t","drag.directive.ts:11","drag.directive.ts:12","drag.directive.ts:22","drag.directive.ts:44","drag.directive.ts:54","dragend","dragend(ev","draggabl","dragging_target_class","draggingtarget","dragstart","dragstart(ev","el","elementref","ev","ev.datatransfer.dropeffect","ev.datatransfer.setdata('text","event","export","fals","file","firefox","hostlisten","hostlistener('drag","hostlistener('dragend","hostlistener('dragstart","implement","import","index","info","input","input('ngxtreedrag","match","metadata","method","model","move","name","ngonchang","ngonchanges(chang","ngx","ngxtreedrag","onchang","ondrag(ev","ondragend(ev","ondragstart(ev","option","paramet","privat","render","renderer2","requir","result","return","selector","services/tre","set","sourc","src/ngx","target","target.servic","this.draggingtarget.id","this.draggingtarget.mouseact","this.draggingtarget.mouseaction('drag","this.draggingtarget.mouseaction('dragend","this.draggingtarget.mouseaction('dragstart","this.renderer.addclass(this.el.nativeel","this.renderer.removeclass(this.el.nativeel","this.renderer.setattribute(this.el.nativeel","this.treedragen","this.treedraggingtargetservice.set(nul","this.treedraggingtargetservice.set(this.draggingtarget","tree","tree/directives/tre","treedragdirect","treedragen","treedraggingtargetservic","treenod","true","type","void"],"directives/TreeDropDirective.html":["_allowdrop","_stopev","_stopevent(ev","accessor","addclass","adddisabledclass","allowdrop","allowdrop($ev","allowdroppred","angular/cor","argument","boolean","class","const","constructor","constructor(el","default","defin","descript","direct","disabl","disabledclassad","drag","drag_disabled_class","drag_over_class","dragent","dragenter($ev","dragev","dragleav","dragleave($ev","dragov","dragover($ev","dragoverclassad","drop","drop($ev","drop.directive.t","drop.directive.ts:103","drop.directive.ts:107","drop.directive.ts:112","drop.directive.ts:114","drop.directive.ts:119","drop.directive.ts:124","drop.directive.ts:129","drop.directive.ts:15","drop.directive.ts:16","drop.directive.ts:17","drop.directive.ts:18","drop.directive.ts:21","drop.directive.ts:25","drop.directive.ts:29","drop.directive.ts:30","drop.directive.ts:39","drop.directive.ts:47","drop.directive.ts:62","drop.directive.ts:76","drop.directive.ts:90","el","element","elementref","es/isfunct","event","event.preventdefault","event.stoppropag","eventemitt","export","fals","file","gettreeallowdrop","hostlisten","hostlistener('dragent","hostlistener('dragleav","hostlistener('dragov","hostlistener('drop","implement","import","index","info","input","isfunct","isfunction(allowdrop","lodash","match","metadata","method","model","mouseev","name","new","ngondestroy","ngxtreedrop","ondestroy","ondragent","ondragenter($ev","ondragleav","ondragleave($ev","ondragov","ondragover($ev","ondrop","ondrop($ev","option","output","output('ngxtreedrop","output('treedropdragent","output('treedropdragleav","output('treedropdragov","over","paramet","privat","properti","removeclass","removedisabledclass","render","renderer2","result","return","selector","services/tre","set","settreeallowdrop(allowdrop","sourc","src/ngx","target.servic","this._allowdrop","this._allowdrop(this.treedraggedelement.get","this._stopevent($ev","this._stopevent(ev","this.addclass","this.adddisabledclass","this.allowdrop($ev","this.disabledclassad","this.dragoverclassad","this.ondragenter$.complet","this.ondragenter$.emit","this.ondragleave$.complet","this.ondragleave$.emit","this.ondragover$.complet","this.ondragover$.emit","this.ondrop$.complet","this.ondrop$.emit","this.removeclass","this.removedisabledclass","this.renderer.addclass(this.el.nativeel","this.renderer.removeclass(this.el.nativeel","this.treedraggedelement.get","this.treedraggedelement.set(nul","tree/directives/tre","treeallowdrop","treeallowdrop(allowdrop","treedraggedel","treedraggingtargetservic","treedropdirect","treedropdragent","treedropdragleav","treedropdragov","treenod","true","type","valu","void"],"injectables/TreeDraggingTargetService.html":["_draggedel","angular/cor","boolean","class","default","defin","descript","drag","draggedel","export","extend","file","import","index","info","inject","isdrag","match","method","model","name","null","option","paramet","properti","result","return","rxjs/subject","set","set(draggedel","sourc","src/ngx","subject","target.service.t","target.service.ts:13","target.service.ts:17","target.service.ts:7","target.service.ts:9","this._draggedel","this.get","tree/services/tre","treedraggingtargetservic","treenod","type","valu","void"],"injectables/TreeVirtualScroll.html":["0","1","1.5","2","3","acc[0","acc[1","action","adjustviewport","adjustviewport(viewport","angular/cor","assum","averagenodeheight","avg","behaviorsubject","behaviorsubject(nul","below","boolean","class","clientrect","collectaveragenodeheight","collectionmonitor","compon","component'","consid","const","constructor","constructor(@inject(virtual_scroll_node_height_quota","constructor(quota","count","cur","currentviewport","data","default","defin","descript","disabl","endpo","export","fals","file","filter","forc","getpositionaft","getpositionafter(nod","getpositionafternod","getpositionafternode(nod","hasenoughnodeheight","height","here","hidden","id","import","index","info","inject","injectiontoken","injectiontoken('virtual_scroll_node_height_quota","isdis","isprevshadow","lastavg","lastscrolltop","load","match","method","middl","model","name","new","next","node","node.children","node.height","node.isexpand","node.ishidden","node.loadingchildren","node.posit","nodeheightanalyt","nodes.foreach((nod","null","number","observ","option","pair[0","pair[1","paramet","pipe(filter(v","pipe(scan((acc","play","posit","privat","proper","properli","properti","quota","recalcposit","recalcpositions(treemodel","recalcul","reportnodeheight","reportnodeheight(data","reset","result","return","root","rxjs/behaviorsubject","rxjs/oper","rxjs/subject","rxjs/subscript","same","scan","scroll","scroll.service.t","scroll.service.ts:111","scroll.service.ts:15","scroll.service.ts:16","scroll.service.ts:17","scroll.service.ts:19","scroll.service.ts:20","scroll.service.ts:21","scroll.service.ts:23","scroll.service.ts:24","scroll.service.ts:31","scroll.service.ts:46","scroll.service.ts:52","scroll.service.ts:56","scroll.service.ts:65","scroll.service.ts:69","scroll.service.ts:73","scroll.service.ts:85","scroll.service.ts:98","scrollintoview","scrollintoview(nod","scrolltomiddl","scrolltop","setdis","setdisabled(isdis","shadow","sibl","sourc","split","src/ngx","start","startpo","subject","subscribe(observ","subscribe(pair","subscript","sum","tbd","this.averagenodeheight","this.collectaveragenodeheight","this.collectionmonitor","this.collectionmonitor$.next","this.currentviewport","this.currentviewport.height","this.dis","this.getpositionafter(node.visiblechildren","this.getpositionafter(treemodel.getvisibleroot","this.getpositionafternode(nod","this.hasenoughnodeheight","this.id","this.lastscrolltop","this.nodeheightanalyt","this.nodeheightanalytics$.next(data","this.quota","todo","tree/services/tre","treemodel","treemodel.roots.foreach(nod","treemodel.virtualroot.height","treenod","treevirtualscrol","true","type","val","valu","viewport","viewport.height","virtual","virtual_scroll_node_height_quota","void","waitforcollect","waitforcollection(observ","well","y_offset","y_offset_node_s"],"classes/TreeModel.html":["0","1","accessor","accord","action","action(thi","activ","activatenod","activatenode(id","activenod","activenodeid","addcach","addcache(nod","alreadi","ancestor","anoth","array","array.from(this.activenodeids.key","array.from(this.expandednodeids.key","arrow","attribut","auto","autoexpand","autoshow","blur","boolean","cach","canmovenode(nod","case","child","childid","childnod","children","children'","class","clearfilt","collaps","collapseal","combin","compact","compact(nod","compens","compon","condit","const","constants/ev","constructor","constructor(nod","contain","creat","createtreedataopt","createtreedataoptions(opt","current","data","day","deactiv","default","defin","deprec","descript","determin","display","down","droponnod","each","empti","es/compact","es/find","es/first","es/isfunct","es/isstr","es/last","event","event.preventdefault","event.treemodel","eventnam","eventsmap","expand","expandal","expandednod","expandednodeid","export","fals","field","file","filter","filter((activenod","filter((id","filterfn","filterfn(nod","filternod","filternode(id","filternodes(filt","find","find(startnode.children","fireev","fireevent(ev","first","first(skiphidden","fix","fn","focu","focus","focusdrilldown","focusdrillup","focusednod","focusednodeid","focusedtre","focusnextnod","focusnod","focusnode(id","focuspreviousnod","forc","foreach((activenod","found","foundinchildren","fromindex","frompar","function","getactivenod","getexpandednod","getfirstroot","getfirstroot(skiphidden","getfocusednod","getisemptytre","getisfocus","getlastroot","getlastroot(skiphidden","getnodebi","getnodeby(pred","getnodebyid","getnodebyid(id","getnodebypath","getnodebypath(path","getter","getvisibleroot","hidden","hiddennodeid","id","ids.set(node.id","import","index","info","inner","input","insensit","interfac","intern","isact","isemptytre","isexpand","isfocus","isfunct","isfunction(filt","ishidden","ismulti","isnodeact","isnodeactive(nod","isnodeexpand","isnodeexpanded(nod","isnodefocus","isnodefocused(nod","isnodehidden","isnodehidden(nod","isstr","isstring(filt","isvis","it'","item","keyboardev","keycod","know","last","last(skiphidden","later","left","liter","locat","lodash","lodash'","look","loop","make","map","map((id","map([[node.id","mark","match","mdn","method","model","model.t","model.ts:106","model.ts:110","model.ts:115","model.ts:121","model.ts:129","model.ts:136","model.ts:144","model.ts:152","model.ts:162","model.ts:191","model.ts:201","model.ts:223","model.ts:227","model.ts:231","model.ts:235","model.ts:239","model.ts:24","model.ts:254","model.ts:258","model.ts:268","model.ts:276","model.ts:284","model.ts:288","model.ts:29","model.ts:292","model.ts:303","model.ts:317","model.ts:328","model.ts:33","model.ts:339","model.ts:34","model.ts:354","model.ts:373","model.ts:380","model.ts:384","model.ts:39","model.ts:406","model.ts:431","model.ts:442","model.ts:46","model.ts:468","model.ts:474","model.ts:505","model.ts:520","model.ts:53","model.ts:60","model.ts:71","model.ts:79","model.ts:80","model.ts:81","model.ts:82","model.ts:83","model.ts:87","model.ts:91","move","movenod","movenode(nod","multipl","name","need","new","next","nextnod","nextnode.focu","node","node'","node.children","node.children.foreach((child","node.displayfield.tolowercase().includes(filter.tolowercas","node.ensurevis","node.focu","node.id","node.index","node.par","node.remov","nodecach","null","number","object","observ","on","option","otherwis","param","paramet","parent","pass","path","path.length","path.shift","performkeyact","performkeyaction(nod","predic","previou","previousnod","previousnode.findnextnode(tru","previousnode.findpreviousnode(tru","previousnode.getfirstchild(tru","previousnode.haschildren","previousnode.iscollaps","previousnode.isexpand","previousnode.par","previousnode.toggleexpand","privat","properti","public","readonli","record","recurs","refactor","remov","replac","repres","respect","result","return","right","root","root.collapseal","root.expandal","root.traverse(fn","rxjs/observ","rxjs/subject","same","scrollintoview","scrollintoview(nod","scrollintoviewtarget","scrolltomiddl","search","select","set","setactivenod","setactivenode(nod","setexpandednod","setexpandednode(nod","setexpandednodeinplac","setexpandednodeinplace(nod","setfocu","setfocus(valu","setfocusednod","setfocusednode(nod","sethiddennod","sethiddennode(nod","setmultiactivenod","setmultiactivenodes(nod","setsingleactivenod","setsingleactivenode(nod","singl","skip","skiphidden","sourc","src/ngx","start","startnod","startnode.children","static","string","subject","subscrib","subscribe(eventnam","support","sure","target","target.focu","target.setactiveandvis","tell","test","that'","this.activenod","this.activenodeid","this.activenodeids.get(id","this.activenodeids.get(node.id","this.activenodeids.set(node.id","this.activenodes[0","this.clearfilt","this.events[event.eventname].emit(ev","this.events[eventname].subscribe(fn","this.expandednodeids.get(id","this.expandednodeids.get(node.id","this.expandednodeids.set(node.id","this.filternode(id","this.fireev","this.focusednod","this.focusednodeid","this.getfirstroot(tru","this.getlastroot(tru","this.getnodeby(pred","this.getnodebyid(id","this.getnodebyid(this.focusednodeid","this.getnodebypath(path","this.getvisibleroot","this.hiddennodeid","this.hiddennodeids.get(node.id","this.hiddennodeids.set(node.id","this.nod","this.nodecache.get(id","this.nodecache.set(node.id","this.opt","this.options.actionmapping.keys[$event.keycod","this.options.childrenfield","this.root","this.roots.foreach((nod","this.roots.foreach((root","this.roots.length","this.scrollintoview$.next","this.setexpandednodeinplace(this.virtualroot","this.setmultiactivenodes(nod","this.setsingleactivenode(nod","this.virtualroot","this.virtualroot.children","this.virtualroot.visiblechildren","throw","to.droponnod","to.index","to.par","to.parent.addchild(node.data","to.parent.appendchild(node.data","to.parent.data","to.parent.isdescendantof(nod","todo","toindex","travers","traverse(fn","tree","tree/models/tre","tree_ev","tree_events.activ","tree_events.changefilt","tree_events.collaps","tree_events.deactiv","tree_events.expand","tree_events.movenod","tree_events.toggleexpand","treedataopt","treeevent","treemodel","treemodel.focusedtre","treenod","treenode(virtualrootconfig","true","type","typeerror(`don't","up","updateopt","updateoptions(opt","us","user","valu","virtual","virtualroot","virtualrootconfig","visibl","void","well","whether"],"classes/TreeNode.html":["0","1","_uuid","accessor","action","action(this.treemodel","actionmap","actionmapping[actionnam","actionnam","activ","addchild","addchild(data","ancestor","angular/cor","appendchild","appendchild(data","area","array","blur","boolean","child","child.index","child.traverse(fn","children","class","collaps","collapseal","const","constants/ev","constructor","constructor(data","content","creat","data","data[this.options.isexpandedfield","deactiv","default","defin","depth","descend","descript","deselect","determin","display","displayfield","doesn't","droponnod","edg","elementref","ensurevis","es/first","es/last","es/pullat","es/without","event","event.el","event.ev","eventnam","exist","expand","expandal","export","fals","field","file","filter((nod","find","findadjacents","findadjacentsibling(step","findnextnod","findnextnode(goinsid","findnexts","findnextsibling(skiphidden","findpreviousnod","findpreviousnode(skiphidden","findpreviouss","findprevioussibling(skiphidden","fire","fireev","fireevent(ev","first","first(children","fn","focu","focus(scrol","forc","function","getchildren","getdisplayfield","getfield","getfield(key","getfirstchild","getfirstchild(skiphidden","gethaschildren","gethasvisiblechildren","getid","getisact","getiscollaps","getisexpand","getisfocus","getishidden","getisleaf","getisroot","getlastchild","getlastchild(skiphidden","getlastopendescend","getlastopendescendant(skiphidden","getlevel","getopt","getparentchildren","getparentchildren(skiphidden","getpath","getvisiblechildren","goinsid","haschildren","hasvisiblechildren","height","helper","hidden","hide","id","id(valu","immut","import","index","info","initchildren","insid","invok","isact","iscollaps","isdescendantof","isdescendantof(nod","isexpand","isfocus","ishidden","isleaf","ismulti","isroot","it'","key","last","last(children","lastchild","lastchild.getlastopendescendant(skiphidden","level","loadchildren","loadingchildren","lodash","look","make","map((data","match","method","model","mouseact","mouseaction(actionnam","mouseev","name","new","next","ngx","node","node'","node.collaps","node.data.children","node.elementref","node.expand","node.index","node.isexpand","node.isfocus","node.ishidden","node.t","node.treemodel","node.ts:102","node.ts:106","node.ts:108","node.ts:114","node.ts:118","node.ts:119","node.ts:123","node.ts:143","node.ts:147","node.ts:151","node.ts:155","node.ts:16","node.ts:163","node.ts:171","node.ts:179","node.ts:187","node.ts:197","node.ts:20","node.ts:209","node.ts:220","node.ts:232","node.ts:24","node.ts:241","node.ts:25","node.ts:26","node.ts:267","node.ts:278","node.ts:28","node.ts:290","node.ts:301","node.ts:308","node.ts:315","node.ts:32","node.ts:327","node.ts:336","node.ts:345","node.ts:351","node.ts:36","node.ts:363","node.ts:372","node.ts:379","node.ts:396","node.ts:40","node.ts:409","node.ts:418","node.ts:424","node.ts:44","node.ts:446","node.ts:450","node.ts:454","node.ts:475","node.ts:48","node.ts:486","node.ts:492","node.ts:497","node.ts:505","node.ts:52","node.ts:59","node.ts:66","node.ts:71","node.ts:76","node.ts:81","node.ts:90","node.ts:98","null","number","offset","on","ondrop","ondrop($ev","option","options.idfield","origin","otherwis","overrid","param","paramet","parent","parent'","path","pointer","posit","previou","previousnod","previouss","previoussibling.getlastopendescendant(skiphidden","privat","promise.resolv","promise.resolve(fn(this)).then","promise.resolve(this.options.getchildren(thi","properti","proxi","public","pullat","pullat(this.getfield('children","recalcchildrenindic","recalcchildrenindices(offset","receiv","redux","regist","rel","remov","removechild","removechild(nod","render","result","return","scroll","scrollintoview","scrollintoview(forc","scrolltomiddl","select","set","setact","setactive(isact","setactiveandvis","setactiveandvisible(ismulti","setfield","setfield(key","sethidden","sethidden(ishidden","setid(valu","show","sibl","skip","skiphidden","sourc","src/ngx","start","state","step","string","structur","sure","then((children","there'","this.addchild(data","this.children","this.children.foreach((child","this.children.length","this.children.slic","this.children.slice(offset).foreach((child","this.children.splice(index","this.data.haschildren","this.data[this.options[`${key}field","this.findadjacents","this.findadjacentsibling(+1","this.findnextsibling(skiphidden","this.findprevioussibling(skiphidden","this.fireev","this.getfield('children","this.getfield('children').push(data","this.getfield('children').splice(index","this.getfield('display","this.getfield('id","this.getfirstchild(skiphidden","this.getlastchild(skiphidden","this.getparentchildren(skiphidden)[this.index","this.haschildren","this.id","this.initchildren","this.iscollaps","this.isexpand","this.loadchildren","this.loadingchildren","this.mouseaction('drop","this.options.actionmapping.mous","this.options.getchildren","this.par","this.parent.children","this.parent.ensurevis","this.parent.expand","this.parent.findnextnode(fals","this.parent.isdescendantof(nod","this.parent.level","this.parent.path","this.parent.removechild(thi","this.parent.visiblechildren","this.recalcchildrenindices(0","this.recalcchildrenindices(index","this.scrollintoview","this.setactive(!this.isact","this.setactive(tru","this.setfield('children","this.setfield('id","this.sethidden(fals","this.sethidden(tru","this.toggleexpand","this.traverse((nod","this.treemodel","this.treemodel.fireevent(ev","this.treemodel.focusednod","this.treemodel.isnodeactive(thi","this.treemodel.isnodeexpanded(thi","this.treemodel.isnodefocused(thi","this.treemodel.isnodehidden(thi","this.treemodel.opt","this.treemodel.scrollintoview(thi","this.treemodel.setactivenode(nod","this.treemodel.setactivenode(thi","this.treemodel.setexpandednode(thi","this.treemodel.setexpandednodeinplace(nod","this.treemodel.setfocus(tru","this.treemodel.setfocusednode(nul","this.treemodel.setfocusednode(thi","this.treemodel.sethiddennode(thi","this.visiblechildren","this.visiblechildren.length","tid","toggleactiv","toggleactivated(ismulti","toggleexpand","toggleexpanded(isexpand","top","travers","traverse(fn","tree","tree/models/tre","tree_ev","tree_events.addnod","tree_events.blur","tree_events.focu","tree_events.loadchildren","tree_events.removenod","treedataopt","treeevent","treemodel","treemodel.addcache(thi","treemodel.setexpandednodeinplace(thi","treenod","treenode(data","true","type","undefin","under","unfocu","uniqu","unless","us","uuid","valu","visibl","visiblechildren","visual","void","whether","without","without(this.children","work"],"interfaces/ActionHandler.html":["0px","1","action","actionhandl","actionmap","allow","allowdrag","allowdrop","asynchron","boolean","chang","children","childrenfield","class","click","common","compon","const","contextmenu","creat","createtreedataoptions(rawopt","createtreeuioptions(rawopt","custom","data","dblclick","default","defaultactionmap","defaultdataopt","defaultsdeep","defaultuiopt","defin","descript","display","displayfield","drag","dragend","dragent","dragev","dragleav","dragov","dragstart","drop","droptarget","element","element:ani","es/default","es/defaultsdeep","es/isnumb","event","exampl","expanderclick","export","fals","field","file","full","function","get","getchildren","getchildren?(nod","handl","iallowdragfn","iallowdropfn","id","idfield","ilevelpaddingfn","import","increas","index","index:number}):boolean","info","injectiontoken('tree_data_opt","insid","instead","interfac","isexpand","isexpandedfield","isnumb","isnumber(levelpaddingopt","key","keyboard","larg","levelpad","levelpaddingopt","link","locat","lodash","map","match","model","mous","name","new","node","node.level","nodeclass","nodeclass?(nod","null","number","option","options.t","options.ts:11","overrid","pad","param","parent","parent.isleaf","per","perform","promis","properti","px","rawopt","rawopts.levelpad","rawtreeuiopt","receiv","rest","result","return","row","scroll","select","signatur","sourc","specifi","src/ngx","string","suppli","to:{parent:itreenod","tree","tree/models/tre","tree_data_opt","treedataopt","treemodel","treenod","treeuioption","true","type","ui","unam","us","usevirtualscrol","valu","virtual","void","whether"],"interfaces/ActionMapping.html":["0px","1","action","actionhandl","actionmap","allow","allowdrag","allowdrop","asynchron","boolean","chang","children","childrenfield","class","click","common","compon","const","contextmenu","creat","createtreedataoptions(rawopt","createtreeuioptions(rawopt","custom","data","dblclick","default","defaultactionmap","defaultdataopt","defaultsdeep","defaultuiopt","defin","descript","display","displayfield","drag","dragend","dragent","dragev","dragleav","dragov","dragstart","drop","droptarget","element","element:ani","es/default","es/defaultsdeep","es/isnumb","event","exampl","expanderclick","export","fals","field","file","full","function","get","getchildren","getchildren?(nod","handl","iallowdragfn","iallowdropfn","id","idfield","ilevelpaddingfn","import","increas","index","index:number}):boolean","info","injectiontoken('tree_data_opt","insid","instead","interfac","isexpand","isexpandedfield","isnumb","isnumber(levelpaddingopt","key","keyboard","larg","levelpad","levelpaddingopt","link","liter","locat","lodash","map","match","model","mous","name","new","node","node.level","nodeclass","nodeclass?(nod","null","number","option","options.t","options.ts:19","options.ts:32","overrid","pad","param","parent","parent.isleaf","per","perform","promis","properti","px","rawopt","rawopts.levelpad","rawtreeuiopt","receiv","rest","result","return","row","scroll","select","sourc","specifi","src/ngx","string","suppli","to:{parent:itreenod","tree","tree/models/tre","tree_data_opt","treedataopt","treemodel","treenod","treeuioption","true","type","ui","us","usevirtualscrol","valu","virtual","whether"],"interfaces/DropTarget.html":["0px","1","action","actionhandl","actionmap","allow","allowdrag","allowdrop","asynchron","boolean","chang","children","childrenfield","class","click","common","compon","const","contextmenu","creat","createtreedataoptions(rawopt","createtreeuioptions(rawopt","custom","data","dblclick","default","defaultactionmap","defaultdataopt","defaultsdeep","defaultuiopt","defin","display","displayfield","drag","dragend","dragent","dragev","dragleav","dragov","dragstart","drop","droptarget","element","element:ani","es/default","es/defaultsdeep","es/isnumb","event","exampl","expanderclick","export","fals","field","file","full","function","get","getchildren","getchildren?(nod","handl","iallowdragfn","iallowdropfn","id","idfield","ilevelpaddingfn","import","increas","index","index:number}):boolean","info","injectiontoken('tree_data_opt","insid","instead","interfac","isexpand","isexpandedfield","isnumb","isnumber(levelpaddingopt","key","keyboard","larg","levelpad","levelpaddingopt","link","locat","lodash","map","match","model","mous","name","new","node","node.level","nodeclass","nodeclass?(nod","null","number","option","options.t","options.ts:38","options.ts:39","overrid","pad","param","parent","parent.isleaf","per","perform","promis","properti","px","rawopt","rawopts.levelpad","rawtreeuiopt","receiv","rest","result","return","row","scroll","select","sourc","specifi","src/ngx","string","suppli","to:{parent:itreenod","tree","tree/models/tre","tree_data_opt","treedataopt","treemodel","treenod","treeuioption","true","type","ui","us","usevirtualscrol","valu","virtual","whether"],"interfaces/EventsMap.html":["activ","addnod","angular/cor","arrow","blur","chang","changefilt","click","collaps","const","deactiv","defin","descript","differ","enter","event","eventemitt","eventsmap","expand","export","file","focu","import","index","info","initi","interfac","key","keyboard","loadchildren","match","model","movenod","normal","properti","removenod","result","sourc","src/ngx","tab","toggleexpand","tree","tree/constants/events.t","tree/constants/events.ts:24","tree/constants/events.ts:25","tree/constants/events.ts:26","tree/constants/events.ts:30","tree/constants/events.ts:31","tree/constants/events.ts:35","tree/constants/events.ts:36","tree/constants/events.ts:37","tree/constants/events.ts:38","tree/constants/events.ts:39","tree/constants/events.ts:40","tree/constants/events.ts:41","tree/constants/events.ts:42","tree_ev","treeevent","trigger","type"],"interfaces/RawTreeUIOptions.html":["0px","1","action","actionhandl","actionmap","allow","allowdrag","allowdrop","asynchron","boolean","chang","children","childrenfield","class","click","common","compon","const","contextmenu","creat","createtreedataoptions(rawopt","createtreeuioptions(rawopt","custom","data","dblclick","default","defaultactionmap","defaultdataopt","defaultsdeep","defaultuiopt","defin","descript","display","displayfield","drag","dragend","dragent","dragev","dragleav","dragov","dragstart","drop","droptarget","element","element:ani","es/default","es/defaultsdeep","es/isnumb","event","exampl","expanderclick","export","fals","field","file","full","function","get","getchildren","getchildren?(nod","handl","iallowdragfn","iallowdropfn","id","idfield","ilevelpaddingfn","import","increas","index","index:number}):boolean","info","injectiontoken('tree_data_opt","insid","instead","interfac","isexpand","isexpandedfield","isnumb","isnumber(levelpaddingopt","key","keyboard","larg","levelpad","levelpaddingopt","link","locat","lodash","map","match","method","model","mous","name","new","node","node.level","nodeclass","nodeclass(nod","nodeclass?(nod","null","number","option","options.t","options.ts:115","options.ts:116","options.ts:117","options.ts:118","options.ts:120","overrid","pad","param","paramet","parent","parent.isleaf","per","perform","promis","properti","px","rawopt","rawopts.levelpad","rawtreeuiopt","receiv","rest","result","return","row","scroll","select","sourc","specifi","src/ngx","string","suppli","to:{parent:itreenod","tree","tree/models/tre","tree_data_opt","treedataopt","treemodel","treenod","treeuioption","true","type","ui","us","usevirtualscrol","valu","virtual","whether"],"interfaces/ScrollIntoViewTarget.html":["0","1","accord","action","action(thi","activ","activatenode(id","activenod","activenodeid","addcache(nod","alreadi","ancestor","anoth","array","array.from(this.activenodeids.key","array.from(this.expandednodeids.key","arrow","attribut","auto","autoexpand","autoshow","blur","boolean","cach","canmovenode(nod","case","child","childid","childnod","children","children'","class","clearfilt","collaps","collapseal","combin","compact","compact(nod","compens","compon","condit","const","constants/ev","constructor","contain","creat","createtreedataopt","createtreedataoptions(opt","current","data","day","deactiv","defin","deprec","determin","display","down","droponnod","each","empti","es/compact","es/find","es/first","es/isfunct","es/isstr","es/last","event","event.preventdefault","event.treemodel","eventnam","eventsmap","expand","expandal","expandednod","expandednodeid","export","fals","field","file","filter","filter((activenod","filter((id","filterfn","filterfn(nod","filternod","filternodes(filt","find","find(startnode.children","fireevent(ev","first","first(skiphidden","fix","fn","focu","focus","focusdrilldown","focusdrillup","focusednod","focusednodeid","focusedtre","focusnextnod","focusnode(id","focuspreviousnod","forc","foreach((activenod","found","foundinchildren","fromindex","frompar","function","getactivenod","getfirstroot(skiphidden","getlastroot(skiphidden","getnodeby(pred","getnodebyid(id","getnodebypath(path","getter","getvisibleroot","hidden","hiddennodeid","id","ids.set(node.id","import","index","info","inner","input","insensit","interfac","intern","isact","isemptytre","isexpand","isfocus","isfunct","isfunction(filt","ishidden","ismulti","isnodeactive(nod","isnodeexpanded(nod","isnodefocused(nod","isnodehidden(nod","isstr","isstring(filt","isvis","it'","item","keyboardev","keycod","know","last","last(skiphidden","later","left","locat","lodash","lodash'","look","loop","make","map","map((id","map([[node.id","mark","match","mdn","method","model","model.t","model.ts:15","model.ts:16","model.ts:17","move","movenode(nod","multipl","need","new","next","nextnod","nextnode.focu","node","node'","node.children","node.children.foreach((child","node.displayfield.tolowercase().includes(filter.tolowercas","node.ensurevis","node.focu","node.id","node.index","node.par","node.remov","nodecach","null","number","object","observ","on","option","otherwis","param","parent","pass","path","path.length","path.shift","performkeyaction(nod","predic","previou","previousnod","previousnode.findnextnode(tru","previousnode.findpreviousnode(tru","previousnode.getfirstchild(tru","previousnode.haschildren","previousnode.iscollaps","previousnode.isexpand","previousnode.par","previousnode.toggleexpand","privat","properti","public","readonli","record","recurs","refactor","remov","replac","repres","respect","result","return","right","root","root.collapseal","root.expandal","root.traverse(fn","rxjs/observ","rxjs/subject","same","scrollintoview","scrollintoview(nod","scrollintoviewtarget","scrolltomiddl","search","select","set","setactivenode(nod","setexpandednode(nod","setexpandednodeinplace(nod","setfocus(valu","setfocusednode(nod","sethiddennode(nod","setmultiactivenodes(nod","setsingleactivenode(nod","singl","skip","skiphidden","sourc","src/ngx","start","startnod","startnode.children","static","string","subject","subscribe(eventnam","support","sure","target","target.focu","target.setactiveandvis","tell","test","that'","this.activenod","this.activenodeid","this.activenodeids.get(id","this.activenodeids.get(node.id","this.activenodeids.set(node.id","this.activenodes[0","this.clearfilt","this.events[event.eventname].emit(ev","this.events[eventname].subscribe(fn","this.expandednodeids.get(id","this.expandednodeids.get(node.id","this.expandednodeids.set(node.id","this.filternode(id","this.fireev","this.focusednod","this.focusednodeid","this.getfirstroot(tru","this.getlastroot(tru","this.getnodeby(pred","this.getnodebyid(id","this.getnodebyid(this.focusednodeid","this.getnodebypath(path","this.getvisibleroot","this.hiddennodeid","this.hiddennodeids.get(node.id","this.hiddennodeids.set(node.id","this.nod","this.nodecache.get(id","this.nodecache.set(node.id","this.opt","this.options.actionmapping.keys[$event.keycod","this.options.childrenfield","this.root","this.roots.foreach((nod","this.roots.foreach((root","this.roots.length","this.scrollintoview$.next","this.setexpandednodeinplace(this.virtualroot","this.setmultiactivenodes(nod","this.setsingleactivenode(nod","this.virtualroot","this.virtualroot.children","this.virtualroot.visiblechildren","throw","to.droponnod","to.index","to.par","to.parent.addchild(node.data","to.parent.appendchild(node.data","to.parent.data","to.parent.isdescendantof(nod","todo","toindex","travers","traverse(fn","tree","tree/models/tre","tree_ev","tree_events.activ","tree_events.changefilt","tree_events.collaps","tree_events.deactiv","tree_events.expand","tree_events.movenod","tree_events.toggleexpand","treedataopt","treeevent","treemodel","treemodel.focusedtre","treenod","treenode(virtualrootconfig","true","type","typeerror(`don't","up","updateoptions(opt","us","user","valu","virtual","virtualroot","virtualrootconfig","visibl","well","whether"],"interfaces/TreeDataOptions.html":["0px","1","action","actionhandl","actionmap","allow","allowdrag","allowdrop","asynchron","boolean","chang","children","childrenfield","class","click","common","compon","const","contextmenu","creat","createtreedataoptions(rawopt","createtreeuioptions(rawopt","custom","data","dblclick","default","defaultactionmap","defaultdataopt","defaultsdeep","defaultuiopt","defin","descript","display","displayfield","drag","dragend","dragent","dragev","dragleav","dragov","dragstart","drop","droptarget","element","element:ani","es/default","es/defaultsdeep","es/isnumb","event","exampl","expanderclick","export","fals","field","file","full","function","get","getchildren","getchildren(nod","getchildren?(nod","handl","iallowdragfn","iallowdropfn","id","idfield","ilevelpaddingfn","import","increas","index","index:number}):boolean","info","injectiontoken('tree_data_opt","insid","instead","interfac","isexpand","isexpandedfield","isnumb","isnumber(levelpaddingopt","key","keyboard","larg","levelpad","levelpaddingopt","link","locat","lodash","map","match","method","model","mous","name","new","node","node.level","nodeclass","nodeclass?(nod","null","number","option","options.t","options.ts:142","options.ts:146","options.ts:150","options.ts:154","options.ts:158","options.ts:163","overrid","pad","param","paramet","parent","parent.isleaf","per","perform","promis","properti","px","rawopt","rawopts.levelpad","rawtreeuiopt","receiv","rest","result","return","row","scroll","select","sourc","specifi","src/ngx","string","suppli","to:{parent:itreenod","tree","tree/models/tre","tree_data_opt","treedataopt","treemodel","treenod","treeuioption","true","type","ui","us","usevirtualscrol","valu","virtual","whether"],"interfaces/TreeEvent.html":["boolean","defin","eventnam","export","file","import","index","info","interfac","isexpand","liter","match","node","number","parent","properti","result","sourc","src/ngx","string","tree","tree/models/events.t","tree/models/events.ts:4","tree/models/events.ts:5","tree/models/events.ts:6","tree/models/events.ts:7","treeevent","treenod","type"],"interfaces/TreeUIOptions.html":["0px","1","action","actionhandl","actionmap","allow","allowdrag","allowdrop","asynchron","boolean","chang","children","childrenfield","class","click","common","compon","const","contextmenu","creat","createtreedataoptions(rawopt","createtreeuioptions(rawopt","custom","data","dblclick","default","defaultactionmap","defaultdataopt","defaultsdeep","defaultuiopt","defin","descript","display","displayfield","drag","dragend","dragent","dragev","dragleav","dragov","dragstart","drop","droptarget","element","element:ani","es/default","es/defaultsdeep","es/isnumb","event","exampl","expanderclick","export","fals","field","file","full","function","get","getchildren","getchildren?(nod","handl","iallowdragfn","iallowdropfn","id","idfield","ilevelpaddingfn","import","increas","index","index:number}):boolean","info","injectiontoken('tree_data_opt","insid","instead","interfac","isexpand","isexpandedfield","isnumb","isnumber(levelpaddingopt","key","keyboard","larg","levelpad","levelpaddingopt","link","locat","lodash","map","match","method","model","mous","name","new","node","node.level","nodeclass","nodeclass(nod","nodeclass?(nod","null","number","option","options.t","options.ts:100","options.ts:106","options.ts:111","options.ts:79","options.ts:96","overrid","pad","param","paramet","parent","parent.isleaf","per","perform","promis","properti","px","rawopt","rawopts.levelpad","rawtreeuiopt","receiv","rest","result","return","row","scroll","select","sourc","specifi","src/ngx","string","suppli","to:{parent:itreenod","tree","tree/models/tre","tree_data_opt","treedataopt","treemodel","treenod","treeuioption","true","type","ui","us","usevirtualscrol","valu","virtual","whether"],"miscellaneous/functions.html":["binari","binarysearch","binarysearch(nod","canmovenod","canmovenode(nod","condit","creat","createtreedataopt","createtreedataoptions(rawopt","createtreeuiopt","createtreeuioptions(rawopt","data","default","descript","firstindex","fromindex","function","index","match","miscellan","model.t","name","node","node.t","number","option","options.t","paramet","rawopt","result","search","src/ngx","tree","tree/models/tre","tree/util.t","type","typerefer","ui","undefin","uuid"],"miscellaneous/variables.html":["0","0px","13","225m","3","32","37","38","39","40","_uuid","action","actionmap","activ","addnod","allowdrag","allowdrop","anim","arrowdown","arrowleft","arrowright","arrowup","assum","bezier(0.4,0.0,0.2,1","blur","boolean","changefilt","children","children.component.t","children/tre","childrenfield","click","collaps","contextmenu","cubic","curv","dblclick","deactiv","default","defaultactionmap","defaultdataopt","defaultuiopt","deselect","disabl","disable_on_scroll_class","displayfield","down","drag","drag.directive.t","drag_disabled_class","drag_over_class","dragging_target_class","drill_down","drill_up","drop","drop.directive.t","droponnod","enter","event","event.stoppropag","expand","expanderclick","expans","expansion_panel_animation_tim","fals","focu","getchildren","id","idfield","index","initi","injectiontoken('virtual_scroll_node_height_quota","isexpand","isexpandedfield","key","left","levelpad","loadchildren","match","miscellan","mous","move_nod","movenod","name","new","next_nod","ngx","node","node.collaps","node.expand","node.focu","node.haschildren","node.setactive(fals","node.setactive(tru","node.t","node.toggleactiv","node.toggleactivated(tru","node.toggleexpand","nodeclass","null","number","number_key","number_keys.down","number_keys.ent","number_keys.left","number_keys.right","number_keys.spac","number_keys.up","object","options.t","over","panel","parent","previous_nod","removenod","result","return","right","scroll","scroll.service.t","select","space","src/ngx","string_key","target","time","toggle_expand","toggle_select","toggle_selected_multi","toggleexpand","tree","tree.focusdrilldown","tree.focusdrillup","tree.focusnextnod","tree.focuspreviousnod","tree.movenode(from","tree/components/tre","tree/constants/events.t","tree/constants/keys.t","tree/directives/tre","tree/models/actions.t","tree/models/tre","tree/services/tre","tree_act","tree_actions.drill_down","tree_actions.drill_up","tree_actions.move_nod","tree_actions.next_nod","tree_actions.previous_nod","tree_actions.toggle_expand","tree_actions.toggle_select","tree_ev","treedataopt","treemodel","treenod","treeuioption","type","up","usevirtualscrol","valu","variabl","viewport.component.t","viewport/tre","virtual","virtual_scroll_node_height_quota","y_offset_node_s"],"miscellaneous/typealiases.html":["alias","allowdroppred","drop.directive.t","iallowdragfn","iallowdropfn","ilevelpaddingfn","index","match","miscellan","options.t","result","src/ngx","tree/directives/tre","tree/models/tre","type","typealias"],"coverage.html":["0","0/1","0/10","0/20","0/21","0/23","0/3","0/4","0/5","0/6","0/7","1/1","1/2","1/3","100","15/51","21","21/49","29","3/14","3/44","33","42","5/6","50","6","6/7","83","85","_uuid","actionhandl","actionmap","binarysearch","canmovenod","children.component.t","children/tre","class","compon","content.component.t","content/tre","coverag","createtreedataopt","createtreeuiopt","defaultactionmap","defaultdataopt","defaultuiopt","direct","disable_on_scroll_class","document","drag","drag.directive.t","drag_disabled_class","drag_over_class","dragging_target_class","drop","drop.directive.t","droptarget","eventsmap","expander.component.t","expander/tre","expansion_panel_animation_tim","file","function","id","identifi","inject","interfac","loading.component.t","loading/tre","match","model.t","new","node","node.component.t","node.t","node/tre","number_key","options.t","rawtreeuiopt","result","scroll.service.t","scrollintoviewtarget","slot.component.t","slot/tre","src/ngx","statement","string_key","tabl","tablesort(document.getelementbyid('coverag","target.service.t","tree/components/tre","tree/components/tree/tree.component.t","tree/constants/events.t","tree/constants/keys.t","tree/directives/tre","tree/models/actions.t","tree/models/events.t","tree/models/tre","tree/services/tre","tree/util.t","tree_act","tree_ev","treecompon","treedataopt","treedragdirect","treedraggingtargetservic","treedropdirect","treeevent","treeloadingcompon","treemodel","treenod","treenodechildrencompon","treenodecompon","treenodecontentcompon","treenodedropslotcompon","treenodeexpandercompon","treenodewrappercompon","treeuioption","treeviewportcompon","treevirtualscrol","type","uuid","variabl","viewport.component.t","viewport/tre","virtual","virtual_scroll_node_height_quota","wrapper.component.t","wrapper/tre","y_offset_node_s"]},"length":33},"tokenStore":{"root":{"0":{"2":{"docs":{},"f":{"docs":{},"a":{"2":{"2":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}},"docs":{}}}},"6":{"docs":{},"b":{"docs":{},"d":{"7":{"docs":{},"a":{"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}},"docs":{}}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.030434782608695653}}},"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.012698412698412698},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.018998272884283247},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.007272727272727273},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406},"coverage.html":{"ref":"coverage.html","tf":0.09482758620689655}},".":{"1":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}},"2":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}},"3":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}},"4":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}},"5":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}},"6":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}},"7":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}},"docs":{}},"p":{"docs":{},"x":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.04885057471264368}}},"2":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"docs":{}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}}},"docs":{}}},"1":{"0":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"3":{"docs":{},"b":{"9":{"docs":{},"b":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}},"docs":{}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"2":{"0":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"3":{"0":{"6":{"7":{"docs":{},"d":{"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782}}},"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.010869565217391304}},"/":{"5":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"docs":{}},"docs":{}}},"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}},".":{"5":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}},"docs":{}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"docs":{}}},"2":{"0":{"1":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.03695652173913044}}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"a":{"1":{"0":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}},"2":{"docs":{},"e":{"3":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"docs":{}}},"docs":{}},"/":{"4":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"docs":{}},"docs":{}}},"2":{"5":{"docs":{},"m":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.02097902097902098},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}},"b":{"3":{"docs":{},"f":{"5":{"6":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}},"docs":{}}},"5":{"1":{"3":{"6":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"c":{"2":{"docs":{},"a":{"9":{"6":{"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"e":{"8":{"5":{"6":{"1":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"3":{"0":{"2":{"docs":{},"b":{"6":{"docs":{},"f":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"docs":{}}},"docs":{}},"2":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"c":{"docs":{},"a":{"3":{"6":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}},"docs":{}}}},"7":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}},"8":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}},"9":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}},"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"b":{"docs":{},"f":{"5":{"3":{"2":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"docs":{}},"docs":{}},"docs":{}}},"e":{"3":{"docs":{},"f":{"docs":{},"d":{"7":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"docs":{}}}},"docs":{}},"/":{"1":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"docs":{}},"4":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"docs":{}},"docs":{}}},"4":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}},"2":{"0":{"9":{"6":{"7":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"docs":{},"c":{"9":{"docs":{},"d":{"4":{"0":{"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"c":{"docs":{},"f":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}}}}}},"5":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"9":{"3":{"6":{"docs":{},"f":{"8":{"docs":{},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}},"e":{"3":{"docs":{},"b":{"docs":{},"e":{"3":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}}}},"docs":{},"f":{"5":{"4":{"9":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"/":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"docs":{}}},"6":{"3":{"2":{"4":{"4":{"5":{"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"6":{"7":{"4":{"docs":{},"e":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"4":{"0":{"2":{"7":{"docs":{},"f":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"docs":{}},"docs":{}},"docs":{}},"7":{"7":{"2":{"8":{"4":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"6":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}},"docs":{}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"e":{"docs":{},"d":{"7":{"docs":{},"b":{"9":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}}},"docs":{}},"f":{"docs":{},"c":{"4":{"docs":{},"e":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}},"docs":{}}}},"/":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"docs":{}}},"7":{"0":{"2":{"3":{"docs":{},"a":{"8":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"docs":{}}},"docs":{}},"docs":{}},"8":{"5":{"docs":{},"a":{"docs":{},"f":{"7":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}}}},"docs":{},"a":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}}}}},"docs":{}},"8":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"6":{"docs":{},"f":{"2":{"2":{"1":{"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"e":{"7":{"9":{"docs":{},"f":{"docs":{},"a":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}}},"docs":{}},"docs":{}}},"9":{"1":{"5":{"8":{"docs":{},"c":{"3":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"overview.html":{"ref":"overview.html","tf":0.013986013986013986}},"a":{"5":{"4":{"2":{"8":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"a":{"1":{"6":{"docs":{},"b":{"4":{"docs":{},"c":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"docs":{}}},"docs":{},"f":{"5":{"docs":{},"c":{"docs":{},"f":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}},"docs":{}}},"7":{"7":{"5":{"docs":{},"a":{"docs":{},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}},"docs":{}},"docs":{}},"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.004761904761904762},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.014492753623188406}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"u":{"docs":{},"m":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.008635578583765112}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}},"g":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0051813471502590676}}}},"a":{"3":{"2":{"docs":{},"c":{"1":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"docs":{}}},"docs":{}},"docs":{}},"b":{"docs":{},"e":{"0":{"7":{"7":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"c":{"docs":{},"b":{"8":{"docs":{},"d":{"6":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}},"docs":{}}},"docs":{}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.006172839506172839},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.006326034063260341},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.034782608695652174},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.007028112449799197},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.012953367875647668},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.01256281407035176},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.01038961038961039},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.009302325581395349},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.010706638115631691},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.0078125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.010362694300518135},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":5.0125628140703515},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.01038961038961039},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.009302325581395349},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.019271948608137045},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.0078125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":5.036269430051814},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.032663316582914576},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.033766233766233764},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.030232558139534883},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.027837259100642397},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.025390625},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}},"o":{"docs":{},"r":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}}}}}}},"[":{"0":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}},"1":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}},"docs":{}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008695652173913044}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.02608695652173913},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548}}}}}}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"7":{"1":{"docs":{},"b":{"docs":{},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"docs":{}},"docs":{}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.01171875}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.010362694300518135},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.010050251256281407},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.01038961038961039},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.01627906976744186},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.008565310492505354},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.015625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258}}}}}}}},"o":{"docs":{},"p":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.012096774193548387},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.0149812734082397},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.010362694300518135},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.010050251256281407},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.01038961038961039},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.01627906976744186},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.008565310492505354},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.015625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.010683760683760684},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.11538461538461539}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464}}}}}},"o":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0038929440389294406},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}},"u":{"docs":{},"p":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}},"e":{"docs":{},"a":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.00974025974025974},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}}}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00291970802919708},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}}}}}}}}}},"b":{"2":{"8":{"6":{"8":{"docs":{},"b":{"docs":{},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"docs":{}},"docs":{}},"docs":{}},"8":{"2":{"docs":{},"f":{"docs":{},"c":{"9":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"docs":{}}}},"docs":{}},"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.007407407407407408},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.019230769230769232},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0069084628670120895},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0170316301703163},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.031088082901554404},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.03015075376884422},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.03116883116883117},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.04186046511627907},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.01706827309236948},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.02569593147751606},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.045454545454545456},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.04296875},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}},"d":{"docs":{},"i":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.007407407407407408}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"modules.html":{"ref":"modules.html","tf":0.1}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.02608695652173913}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746}}}}},"z":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"0":{"docs":{},".":{"4":{"docs":{},",":{"0":{"docs":{},".":{"0":{"docs":{},",":{"0":{"docs":{},".":{"2":{"docs":{},",":{"1":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011494252873563218}}},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.02608695652173913},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}},"c":{"9":{"docs":{},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"e":{"docs":{},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}}},"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}}}},"c":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011494252873563218}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00291970802919708},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.023809523809523808},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.009696969696969697},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.010362694300518135},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.010050251256281407},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.01038961038961039},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.009302325581395349},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.01284796573875803},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.009765625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746}}}}}},"t":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}},"s":{"docs":{},":":{"2":{"9":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"docs":{}},"3":{"0":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"2":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"3":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"4":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"5":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"6":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"7":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"docs":{}},"4":{"0":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"2":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"4":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746}}},"docs":{}},"5":{"0":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"5":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"9":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"docs":{}},"7":{"2":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"9":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"docs":{}},"8":{"3":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"7":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"docs":{}},"9":{"7":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.03333333333333333},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}}}}}},"'":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.010706638115631691},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}}}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008695652173913044},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}},"e":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":3.333333333333333}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.02608695652173913},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}}}}}},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}},"o":{"docs":{},"p":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0111731843575419},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"y":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0111731843575419},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":5.000973236009733},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":5.001212121212121},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}},".":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.01675977653631285},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.009523809523809525},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.012096774193548387},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.01327433628318584},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0136986301369863},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.00974025974025974},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}},"o":{"docs":{},"u":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.010362694300518135}}}}}}}}},"c":{"docs":{},"k":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.024154589371980676},"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":5.006172839506172},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":5.027932960893855},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":5.007936507936508},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":5.020161290322581},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":5.022123893805309},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":5.0187265917602994},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":5.0228310502283104},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":5.016233766233766},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":5.007692307692308},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"coverage.html":{"ref":"coverage.html","tf":0.02586206896551724}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.02622950819672131}},"e":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}},"'":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"o":{"docs":{},"n":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.006557377049180328}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.02654867256637168},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894}}}}}},"t":{"docs":{"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"s":{"docs":{},":":{"1":{"1":{"docs":{"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947}}},"2":{"docs":{"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947}}},"3":{"docs":{"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947}}},"4":{"docs":{"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947}}},"5":{"docs":{"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.02654867256637168},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.007407407407407408}},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}},"s":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.004761904761904762},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.007692307692307693},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.015544041450777202},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.01119221411192214},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.005454545454545455},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.010362694300518135},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.010050251256281407},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.01038961038961039},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.009302325581395349},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.023092369477911646},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.008565310492505354},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.0078125}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"v":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"(":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}},"@":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436}}}}}},"d":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0069084628670120895}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0069084628670120895}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.006060606060606061},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.02608695652173913},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109}},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008695652173913044}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0051813471502590676}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.00287356321839}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.024154589371980676},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}}}},"b":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}},"r":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0051813471502590676}},"v":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.006812652068126521},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.008032128514056224}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0069084628670120895}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436}},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"u":{"docs":{},"i":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}},"a":{"5":{"docs":{},"d":{"8":{"6":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"docs":{}},"docs":{}}},"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.00909090909090909},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011494252873563218}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704}}}}},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.009836065573770493}}}}},"o":{"docs":{},"r":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.008641975308641974}}}}},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"t":{"docs":{},"h":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.006172839506172839},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.011111111111111112},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.010769230769230769},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.010362694300518135},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0034063260340632603},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.005454545454545455},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.031088082901554404},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.03015075376884422},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.03116883116883117},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.027906976744186046},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.03640256959314775},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.029296875},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.04594594594594595}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.010810810810810811},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}}}}},"u":{"docs":{},"i":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.05308641975308642},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.01675977653631285},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.031746031746031744},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.028225806451612902},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.022123893805309734},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.018726591760299626},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0228310502283105},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.02922077922077922},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.033846153846153845},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.03296703296703297},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.04700854700854701},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.0425531914893617},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.03281519861830743},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0267639902676399},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.03878787878787879},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.05652173913043478},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.011627906976744186},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.01284796573875803},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.06060606060606061},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.009765625}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.02608695652173913},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.00641025641025641},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.015544041450777202},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.014598540145985401},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.01696969696969697},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.04597701149425287}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.010706638115631691},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0069084628670120895},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.004761904761904762}}}}}}}}}}},"_":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}}}}}}}}}}}}},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0111731843575419},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0091324200913242},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":5.016483516483516},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":5.006410256410256},"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.006557377049180328}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"w":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.00641025641025641},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.05319148936170213},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.009765625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"&":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782}}}}}}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}},"s":{"docs":{},":":{"1":{"1":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}},"2":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099}}},"docs":{}},"2":{"2":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}},"docs":{}},"4":{"4":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}},"docs":{}},"5":{"4":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.017094017094017096},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}},"n":{"docs":{},"d":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}}},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.016483516483516484},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.031914893617021274}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.00641025641025641},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.00641025641025641},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.006557377049180328},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.07116104868913857},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.009765625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464},"coverage.html":{"ref":"coverage.html","tf":0.008620689655172414}},"s":{"docs":{},":":{"1":{"0":{"3":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"7":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"docs":{}},"1":{"2":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"4":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"9":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"docs":{}},"2":{"4":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"9":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"docs":{}},"5":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"6":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"7":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"8":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"docs":{}},"2":{"1":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}}},"5":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"9":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"docs":{}},"3":{"0":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}}},"9":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"docs":{}},"4":{"7":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"docs":{}},"6":{"2":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"docs":{}},"7":{"6":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"docs":{}},"9":{"0":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.011235955056179775}}}}}}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":5.007792207792208},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}},"u":{"docs":{},"p":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}},"c":{"2":{"0":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}},"docs":{}},"6":{"7":{"5":{"8":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"b":{"docs":{},"l":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}},"e":{"2":{"docs":{},"c":{"docs":{},"c":{"6":{"docs":{},"d":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"docs":{}}},"docs":{}}},"d":{"3":{"docs":{},"a":{"docs":{},"b":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}},"docs":{}}},"docs":{"index.html":{"ref":"index.html","tf":0.014492753623188406}},"l":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0111731843575419},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.0149812734082397},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0091324200913242},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.017094017094017096},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.009765625}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.022727272727272728},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.010769230769230769},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.02197802197802198},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0048484848484848485}}}}},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.014492753623188406},"changelog.html":{"ref":"changelog.html","tf":0.015217391304347827},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0273972602739726},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00291970802919708},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.007272727272727273},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.02608695652173913},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0091324200913242}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0091324200913242}}}}}},"t":{"docs":{"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"s":{"docs":{},":":{"1":{"0":{"docs":{"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621}}},"1":{"docs":{"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621}}},"2":{"docs":{"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621}}},"3":{"docs":{"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621}}},"5":{"docs":{"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0273972602739726},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349}}}}},"l":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"s":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.02622950819672131},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.03626943005181347},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.035175879396984924},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.03636363636363636},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.03255813953488372},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.029978586723768737},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.015151515151515152},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.02734375}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"n":{"docs":{},"d":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.01171875}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}},"n":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}},"p":{"docs":{},"o":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0030303030303030303}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522}}}}}},"v":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.02345679012345679},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.018726591760299626},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.03296703296703297},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.0641025641025641},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.006326034063260341},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.005454545454545455},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.012953367875647668},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.01507537688442211},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.01038961038961039},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.009302325581395349},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0050200803212851405},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.008565310492505354},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.0078125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.03783783783783784}},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"v":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0345679012345679},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.019230769230769232},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.17391304347826086}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00291970802919708},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":5.008695652173913},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.004866180048661801},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.009036144578313253},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.06060606060606061}}}}}}}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}}}}}}}}}}}}}}},"d":{"docs":{},"g":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.015151515151515152},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0072992700729927005},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.01104417670682731}},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}},"f":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0038929440389294406},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.006024096385542169}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}}}},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0034063260340632603},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0030303030303030303},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"f":{"docs":{},"o":{"docs":{},"x":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}},"e":{"docs":{},"v":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.012953367875647668},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.01256281407035176},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.012987012987012988},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.011627906976744186},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.021413276231263382},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.009765625}}}}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.02608695652173913},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}},"n":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"e":{"docs":{},"(":{"docs":{},"g":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}}},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}}}}}},"c":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.008635578583765112},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.006024096385542169}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.043478260869565216},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109}},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.008759124087591242},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.009036144578313253}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704}}}}}}}},"d":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}},"u":{"docs":{},"p":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.004866180048661801},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.007028112449799197}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.006326034063260341},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.004242424242424243},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.023316062176165803},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.020100502512562814},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.02077922077922078},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.018604651162790697},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.007028112449799197},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.019271948608137045},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.021484375},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":6.689655172413793},"coverage.html":{"ref":"coverage.html","tf":0.014367816091954023}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.021739130434782608}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.015384615384615385},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.008635578583765112},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00827250608272506},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.01090909090909091},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.015544041450777202},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.01507537688442211},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.015584415584415584},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.013953488372093023},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.012048192771084338},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.01284796573875803},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.017578125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109}}}}},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0050200803212851405},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.005859375}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"i":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}}},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"?":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}}}}}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0069084628670120895}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.007936507936507936},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364}}}}}},"r":{"docs":{},"e":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}}},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}}}}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}},"s":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.01675977653631285},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.004761904761904762},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.012096774193548387},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.01327433628318584},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0136986301369863},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.00974025974025974},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}},"@":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.016483516483516484},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.00641025641025641}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}},"o":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}},"o":{"docs":{},"p":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0111731843575419},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0091324200913242},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.007272727272727273},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}},"e":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.043478260869565216},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.05245901639344262},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.009876543209876543},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0111731843575419},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.009523809523809525},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.012096774193548387},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.011235955056179775},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0091324200913242},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.00974025974025974},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.009230769230769232},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.016483516483516484},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.031914893617021274},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.010362694300518135},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00583941605839416},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.005454545454545455},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.015544041450777202},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.01507537688442211},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.015584415584415584},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.013953488372093023},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.012048192771084338},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.01284796573875803},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.015151515151515152},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.01171875}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}}}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.020161290322580645},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.017699115044247787},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.0149812734082397},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0182648401826484},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.012987012987012988},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.004379562043795621},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.01090909090909091},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.010362694300518135},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.010050251256281407},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.01818181818181818},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.009302325581395349},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.007028112449799197},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.008565310492505354},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.030303030303030304},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.01171875},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011494252873563218},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"}":{"docs":{},")":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":5.031914893617022},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":5.006908462867012},"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}},"(":{"docs":{},"'":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.018518518518518517},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.027932960893854747},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.014285714285714285},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.028225806451612902},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.030973451327433628},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.02247191011235955},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0319634703196347},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.022727272727272728},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.007692307692307693},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.02197802197802198},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}},"(":{"docs":{},"'":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.01932367149758454}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}}}},"i":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.0078125}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":5.018134715025907},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":5.017587939698492},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":5.0181818181818185},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":5.008695652173913},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":5.0162790697674415},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":5.002008032128514},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":5.014989293361884},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":5.03030303030303},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":5.013671875},"coverage.html":{"ref":"coverage.html","tf":0.02586206896551724}}}}},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.02608695652173913},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.015151515151515152},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}},"'":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}}}},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.010362694300518135},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.006326034063260341},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.005454545454545455},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.007028112449799197},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.010706638115631691},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.005859375},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.010810810810810811},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.010706638115631691},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"f":{"docs":{},"n":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.011627906976744186},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.009765625},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.11538461538461539}}}}}},"o":{"docs":{},"p":{"docs":{},"f":{"docs":{},"n":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.011627906976744186},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.009765625},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.11538461538461539}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"f":{"docs":{},"n":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.011627906976744186},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.009765625},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.11538461538461539}}}}}}}}}}}}}}}},"s":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129}}}},"o":{"docs":{},"p":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}},"t":{"docs":{},"r":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.0425531914893617}}}}},"i":{"docs":{},"s":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.010362694300518135}}}},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0069084628670120895}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00291970802919708},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0030303030303030303},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.004866180048661801},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.006024096385542169},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.010706638115631691},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.06060606060606061},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.005859375},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.010706638115631691},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0038929440389294406},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0048484848484848485},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0050200803212851405}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}}}}}}}},"j":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704}}}}}}}}}}}}}}},"y":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.01507537688442211},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.017391304347826087},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.008565310492505354},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.005859375},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}},"e":{"docs":{},"v":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}},"r":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522}}}}},"s":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0069084628670120895}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}},"i":{"docs":{},"f":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"g":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0051813471502590676}}}}},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}}},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.01932367149758454},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}}}}},"k":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.010050251256281407},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.030303030303030304}}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0446927374301676},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0111731843575419}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0111731843575419}}}}}},"t":{"docs":{"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"s":{"docs":{},":":{"1":{"1":{"docs":{"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095}}},"2":{"docs":{"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095}}},"4":{"docs":{"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0223463687150838},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.02608695652173913},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}},"p":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00291970802919708},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.006024096385542169},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.005859375}},"'":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}}}},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}},"g":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"a":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0030303030303030303}},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.013953488372093023},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.01171875},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.005859375}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"overview.html":{"ref":"overview.html","tf":0.013986013986013986},"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"modules.html":{"ref":"modules.html","tf":0.2},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.006557377049180328},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0111731843575419},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0091324200913242},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.02127659574468085},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.030303030303030304},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.07692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}}}},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"0":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"docs":{}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.012652068126520682},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.012048192771084338},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}},"[":{"docs":{},"[":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}}},"k":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.004379562043795621},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0050200803212851405}}}},"k":{"docs":{},"e":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0030303030303030303},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.02127659574468085},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}},"r":{"docs":{},"g":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}},"s":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008695652173913044}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":3.3448275862068964},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":3.336036036036036},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":3.3717948717948714}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}},"o":{"docs":{},"b":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"overview.html":{"ref":"overview.html","tf":0.013986013986013986},"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782},"modules.html":{"ref":"modules.html","tf":10.1},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":5.00655737704918}},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.006557377049180328}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013043478260869565},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}}}}}}}}},".":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.008620689655172414}},"s":{"docs":{},":":{"1":{"0":{"6":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"1":{"0":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"5":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"2":{"1":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"9":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"3":{"6":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"4":{"4":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"5":{"2":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}},"6":{"2":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}},"7":{"docs":{"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}},"9":{"1":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"docs":{}},"2":{"0":{"1":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"2":{"3":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"7":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"3":{"1":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"5":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"9":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"4":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"5":{"4":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"8":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"6":{"8":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"7":{"6":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"8":{"4":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"8":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"9":{"2":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"3":{"0":{"3":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"1":{"7":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"2":{"8":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"3":{"9":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"4":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"5":{"4":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"7":{"3":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"8":{"0":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"4":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"9":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"4":{"0":{"6":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"3":{"1":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"4":{"2":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"6":{"8":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"7":{"4":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"docs":{}},"5":{"0":{"5":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"2":{"0":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"3":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"6":{"0":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"7":{"1":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"9":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"8":{"0":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"1":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"2":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"3":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}}},"7":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"9":{"1":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007}}},"docs":{}},"docs":{}}}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}},"v":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.02608695652173913},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}},"u":{"docs":{},"s":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.017587939698492462},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.008565310492505354},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.005859375},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.009836065573770493}}}}}}},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.013580246913580247},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.061452513966480445},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.01746031746031746},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.04435483870967742},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.048672566371681415},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.04119850187265917},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0502283105022831},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.03571428571428571},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.016923076923076923},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"overview.html":{"ref":"overview.html","tf":0.24475524475524477},"modules.html":{"ref":"modules.html","tf":0.1},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":5.1245901639344265}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.02197802197802198}},"]":{"docs":{},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548}}}}}}}}}}},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.012987012987012988},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.012987012987012988},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.012987012987012988},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.028985507246376812},"changelog.html":{"ref":"changelog.html","tf":0.030434782608695653},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.03278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.018518518518518517},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0446927374301676},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.10952380952380952},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.06451612903225806},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.13274336283185842},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.09737827715355805},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.136986301369863},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.12337662337662338},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.007692307692307693},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.015544041450777202},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.06277372262773723},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.04727272727272727},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.02849740932642487},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.02512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.025974025974025976},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.02558139534883721},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.07530120481927711},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.023554603854389723},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.07575757575757576},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.029296875},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.051351351351351354},"coverage.html":{"ref":"coverage.html","tf":0.034482758620689655}},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258}}}}}},"t":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"s":{"docs":{},":":{"1":{"1":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129}}},"2":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129}}},"3":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129}}},"4":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129}}},"6":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129}}},"8":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129}}},"docs":{}},"2":{"6":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129}}},"docs":{}},"docs":{}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.010362694300518135}}}}}},"a":{"docs":{},"r":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011494252873563218},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.008620689655172414}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}},"s":{"docs":{},":":{"1":{"0":{"2":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"6":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"8":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"1":{"4":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"8":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"9":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"2":{"3":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"4":{"3":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"7":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"5":{"1":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"5":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"6":{"3":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"7":{"1":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"9":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"8":{"7":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"9":{"7":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"docs":{}},"2":{"0":{"9":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"2":{"0":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"3":{"2":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"4":{"1":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"5":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"6":{"7":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"7":{"8":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"8":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"9":{"0":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"docs":{}},"3":{"0":{"1":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"8":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"1":{"5":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"2":{"7":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"3":{"6":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"4":{"5":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"5":{"1":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"6":{"3":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"7":{"2":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"9":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"9":{"6":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"docs":{}},"4":{"0":{"9":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"1":{"8":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"2":{"4":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"4":{"6":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"5":{"0":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"4":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"7":{"5":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"8":{"6":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"9":{"2":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"7":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"docs":{}},"5":{"0":{"5":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"2":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"9":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"6":{"6":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"7":{"1":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"6":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"8":{"1":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"9":{"0":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"8":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}},"docs":{}}},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.03225806451612903},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.005859375},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"?":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}}}}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0069084628670120895}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"i":{"docs":{},"f":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.014492753623188406}}}},"e":{"docs":{},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.008635578583765112},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.007785888077858881},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.01104417670682731},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}},"x":{"docs":{},"t":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0038929440389294406},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.008032128514056224}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112}}}}}}}}}}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}},"e":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.008641975308641974},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.01675977653631285},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.011111111111111112},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.016129032258064516},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.01327433628318584},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.0149812734082397},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0136986301369863},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.012987012987012988},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.009230769230769232},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.00641025641025641},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.015544041450777202},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.014598540145985401},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.01818181818181818},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.008565310492505354},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.005859375},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.04597701149425287},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.018518518518518517},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.02127659574468085},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.00787878787878788},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.015060240963855422},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0091324200913242},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.02936096718480138},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00291970802919708},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.006666666666666667},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.012987012987012988},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.011627906976744186},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.015151515151515152},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.005859375},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}},"u":{"docs":{},"p":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0034063260340632603},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112}},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.004761904761904762},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.016483516483516484}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.004761904761904762},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.00974025974025974},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.00641025641025641}}}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}},"a":{"docs":{},"g":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}}},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.004761904761904762},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.00974025974025974},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"changelog.html":{"ref":"changelog.html","tf":0.013043478260869565},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.011111111111111112},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.016129032258064516},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.01327433628318584},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.0149812734082397},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0136986301369863},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.012987012987012988},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.00641025641025641},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.015544041450777202},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.021897810218978103},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.02181818181818182},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.012953367875647668},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.01256281407035176},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.012987012987012988},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.013953488372093023},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.006024096385542169},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.01284796573875803},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.017578125},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.06896551724137931}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}},"t":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011494252873563218},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464},"coverage.html":{"ref":"coverage.html","tf":0.028735632183908046}},"s":{"docs":{},":":{"1":{"0":{"0":{"docs":{"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}},"6":{"docs":{"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}},"docs":{}},"1":{"1":{"docs":{"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}},"5":{"docs":{"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837}}},"6":{"docs":{"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837}}},"7":{"docs":{"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837}}},"8":{"docs":{"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837}}},"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338}}},"2":{"0":{"docs":{"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837}}},"docs":{}},"4":{"2":{"docs":{"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384}}},"6":{"docs":{"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384}}},"docs":{}},"5":{"0":{"docs":{"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384}}},"4":{"docs":{"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384}}},"8":{"docs":{"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384}}},"docs":{}},"6":{"3":{"docs":{"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384}}},"docs":{}},"9":{"docs":{"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352}}},"docs":{}},"3":{"2":{"docs":{"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352}}},"8":{"docs":{"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974}}},"9":{"docs":{"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974}}},"docs":{}},"7":{"9":{"docs":{"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}},"docs":{}},"9":{"6":{"docs":{"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}},"docs":{}},"docs":{}}}}}}}},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.006993006993007}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.010362694300518135},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.010050251256281407},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.01038961038961039},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.009302325581395349},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.017130620985010708},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.0078125}}}}}}}},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.019753086419753086},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.00641025641025641}},"(":{"docs":{},"'":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}},"o":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.021621621621621623}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"'":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358}},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0038929440389294406},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0048484848484848485},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.004866180048661801},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.006024096385542169}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.011235955056179775},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0034063260340632603},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.005454545454545455},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.010362694300518135},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.010050251256281407},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.01818181818181818},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.009302325581395349},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.006024096385542169},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.008565310492505354},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.015151515151515152},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.013671875},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}},"'":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"f":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0072992700729927005},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.005454545454545455},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.014056224899598393},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}},"e":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.00641025641025641},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.015544041450777202},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.014598540145985401},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.01818181818181818},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.04597701149425287}}}}}}},"t":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0030303030303030303},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}},"d":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.0078125}}},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}},"i":{"docs":{},"r":{"docs":{},"[":{"0":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"1":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}},"docs":{}}}}},"e":{"docs":{},"r":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}},"a":{"docs":{},"y":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}},"i":{"docs":{},"c":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0034063260340632603},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.004379562043795621},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0030303030303030303},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.009036144578313253}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.009836065573770493},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}},"t":{"docs":{},"i":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.004761904761904762},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.02127659574468085},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.030303030303030304},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}},"l":{"docs":{},"i":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.008565310492505354},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.004761904761904762},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.03538461538461538},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.016483516483516484},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.057692307692307696},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.04317789291882556},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.012165450121654502},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.007272727272727273},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.009036144578313253}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00291970802919708},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.007272727272727273},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.02072538860103627},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}},"x":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.02608695652173913},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"overview.html":{"ref":"overview.html","tf":0.013986013986013986},"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"modules.html":{"ref":"modules.html","tf":0.2},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.006557377049180328},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0111731843575419},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0091324200913242},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.02127659574468085},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.030303030303030304},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.07692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.006993006993006993},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}},"t":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522}}}}}}},"u":{"docs":{},"x":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782}}}},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.004761904761904762}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}},"l":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.007407407407407408},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.020634920634920634},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.016129032258064516},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.00974025974025974},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.02},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.027777777777777776},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.05319148936170213},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.031088082901554404},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.04184914841849149},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.05515151515151515},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.018134715025906734},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.01507537688442211},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.015584415584415584},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.01627906976744186},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.04618473895582329},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.017130620985010708},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.017578125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.016483516483516484},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.00641025641025641},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"e":{"docs":{},"r":{"2":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.02197802197802198},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548}}},"docs":{}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.0078125}}}}}},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00291970802919708},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.007785888077858881},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.007028112449799197}},"'":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}},"w":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.014492753623188406}}}},"a":{"docs":{},"i":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"w":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.010362694300518135},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.010050251256281407},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.01038961038961039},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.009302325581395349},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.008565310492505354},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.0078125},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"u":{"docs":{},"i":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":5.006976744186047},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}},"x":{"docs":{},"j":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782}},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}},"b":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}}}},"m":{"docs":{},"e":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00535279805352798},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.006024096385542169}}}}},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}},"u":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}},"z":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715}}}}}}}}},"b":{"docs":{},"l":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0048484848484848485}}}},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.01171875}}}}}}},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}},"p":{"docs":{},"o":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.02072538860103627}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.006326034063260341},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.009036144578313253}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}},"e":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}},"o":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.008695652173913044},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.007936507936507936}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0111731843575419},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0091324200913242},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.004761904761904762}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.006172839506172839},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.01167883211678832},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.006666666666666667},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.018134715025906734},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.017587939698492462},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.01818181818181818},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.018604651162790697},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.010040160642570281},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.032119914346895075},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.045454545454545456},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.015625}},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.017391304347826087},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0051813471502590676},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00291970802919708},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.013846153846153847},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":5.002008032128514},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}},"s":{"docs":{},":":{"1":{"1":{"1":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"docs":{}},"5":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"6":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"7":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"9":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"docs":{}},"2":{"0":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"1":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"3":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"4":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}},"docs":{}},"3":{"1":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"docs":{}},"4":{"6":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"docs":{}},"5":{"2":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"6":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"docs":{}},"6":{"5":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"9":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"docs":{}},"7":{"3":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"docs":{}},"8":{"5":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"docs":{}},"9":{"8":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}},"docs":{}},"docs":{}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349}}}}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0069084628670120895},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.006024096385542169}}}}}}},"p":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.012089810017271158}}}}}}}}},"a":{"docs":{},"n":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}},"e":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.006557377049180328},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.031914893617021274},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}}}}}},"(":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"o":{"docs":{},"r":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.016049382716049384},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.07262569832402235},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.020634920634920634},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.05241935483870968},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.05752212389380531},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.04868913857677903},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0593607305936073},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.04220779220779221},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.02},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.01098901098901099},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}}}}}}},"f":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011494252873563218}}}}}}},"u":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0051813471502590676}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}}}}}}}}},"b":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.02127659574468085},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0051813471502590676},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00291970802919708},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.021739130434782608},"modules.html":{"ref":"modules.html","tf":0.1},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}},"l":{"docs":{},"i":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.005859375}}}}}},"m":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0051813471502590676}}},"r":{"docs":{},"e":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"j":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}}}},"v":{"docs":{},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}}}},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985}}}}}},"t":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"s":{"docs":{},":":{"1":{"2":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925}}},"3":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925}}},"4":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925}}},"6":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925}}},"docs":{}},"2":{"4":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.02247191011235955},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.015151515151515152},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.05432098765432099},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0223463687150838},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.03333333333333333},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.03225806451612903},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.02654867256637168},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.02247191011235955},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0273972602739726},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.032467532467532464},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.03538461538461538},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.038461538461538464},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.049145299145299144},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.05319148936170213},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.03454231433506045},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.027250608272506083},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.03939393939393939},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.06086956521739131},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.013953488372093023},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.014989293361884369},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.07575757575757576},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.01171875},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.04597701149425287},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.02702702702702703},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.07692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.12931034482758622}}}}}}}},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}},"o":{"docs":{},"w":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.006060606060606061},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.015151515151515152},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"s":{"docs":{},":":{"1":{"3":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425}}},"7":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425}}},"docs":{}},"7":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425}}},"9":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425}}},"docs":{}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616}}}}}}}}}}}},"b":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044}},"l":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"changelog.html":{"ref":"changelog.html","tf":0.017391304347826087},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0223463687150838},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.016129032258064516},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.017699115044247787},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0182648401826484},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.012987012987012988},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.019753086419753086},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.01675977653631285},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.01327433628318584},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0136986301369863}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0111731843575419},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0091324200913242},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"'":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}},"s":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}},"m":{"docs":{},"e":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}}}},"c":{"docs":{},"k":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.06763285024154589},"changelog.html":{"ref":"changelog.html","tf":0.02391304347826087},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.022222222222222223},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.08379888268156424},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.023809523809523808},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.06048387096774194},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.06637168141592921},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.056179775280898875},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0684931506849315},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.048701298701298704},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.023076923076923078},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.013625304136253041},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.007272727272727273},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.031088082901554404},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.02512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.025974025974025976},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.008695652173913044},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.023255813953488372},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.015060240963855422},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.023554603854389723},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.015151515151515152},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.025390625},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022988505747126436},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.03783783783783784}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.004379562043795621},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.010362694300518135},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.010050251256281407},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.01038961038961039},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.009302325581395349},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":5.010706638115631},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.0078125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.009836065573770493},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.013580246913580247},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.038461538461538464},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":5.0212765957446805},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.00641025641025641}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04895104895104895},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.04262295081967213},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":5.010989010989011},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}},"e":{"docs":{},"n":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.02197802197802198}}}}}},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04895104895104895},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.04262295081967213},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":5.004273504273504},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}}}}}},"o":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.009876543209876543},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.010769230769230769},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.008635578583765112},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":5.002433090024331},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.007272727272727273},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.03513513513513514},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.01675977653631285},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.01746031746031746},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.028225806451612902},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.01327433628318584},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.011235955056179775},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0136986301369863},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.00974025974025974},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.016483516483516484},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.07446808510638298},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.017271157167530225},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.03795620437956204},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":5.011515151515152},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.031088082901554404},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.02763819095477387},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.033766233766233764},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.030232558139534883},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.035140562248995984},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.027837259100642397},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.07575757575757576},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.02734375},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.04054054054054054},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715}}}}}}},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04895104895104895},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.04262295081967213},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":5.012987012987013},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04895104895104895},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.04262295081967213},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.006172839506172839},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":5.006349206349206},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04895104895104895},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.04262295081967213},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":5.016129032258065},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04895104895104895},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.04262295081967213},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":5.017699115044247},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04895104895104895},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.04262295081967213},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":5.01498127340824},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04895104895104895},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.04262295081967213},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":5.018264840182648},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}}}},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.004761904761904762},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.012096774193548387},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.01327433628318584},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.011235955056179775},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0136986301369863},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.00974025974025974},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":5.0078125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04895104895104895},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.04262295081967213},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":5.004938271604939},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04895104895104895},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.04262295081967213},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":5.022346368715084},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.04895104895104895},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.04262295081967213},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.006172839506172839},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":5.006153846153846},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.006557377049180328},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.012987012987012988},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.012307692307692308},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":5.003454231433506},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0223463687150838},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.03333333333333333},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.03225806451612903},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.02654867256637168},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.02247191011235955},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0273972602739726},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.032467532467532464},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.03538461538461538},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406},"coverage.html":{"ref":"coverage.html","tf":0.028735632183908046}},"e":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"s":{"docs":{},":":{"1":{"0":{"4":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"docs":{}},"4":{"3":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"docs":{}},"5":{"0":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"docs":{}},"6":{"5":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"docs":{}},"7":{"3":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"docs":{}},"docs":{}},"3":{"8":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"9":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"docs":{}},"4":{"0":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"1":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"6":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"docs":{}},"5":{"0":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"4":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"5":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"7":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"8":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"9":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"docs":{}},"6":{"0":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"1":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"2":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"3":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"5":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"6":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"7":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"8":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"9":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"docs":{}},"7":{"0":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"1":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"2":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"3":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"4":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"5":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"6":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"7":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"9":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"docs":{}},"8":{"1":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"2":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"3":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"4":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"5":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"7":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"8":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358}}},"docs":{}},"9":{"0":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}},"s":{"docs":{},":":{"2":{"4":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522}}},"5":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522}}},"6":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522}}},"docs":{}},"3":{"0":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522}}},"1":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522}}},"5":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522}}},"6":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522}}},"7":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522}}},"8":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522}}},"9":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522}}},"docs":{}},"4":{"0":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522}}},"1":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522}}},"2":{"docs":{"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522}}},"docs":{}},"docs":{}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.038461538461538464},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.049145299145299144},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464},"coverage.html":{"ref":"coverage.html","tf":0.014367816091954023}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.05319148936170213},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.03454231433506045},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.014367816091954023}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.027250608272506083},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.03939393939393939},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.013953488372093023},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.014989293361884369},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.01171875},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.034482758620689655},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464},"coverage.html":{"ref":"coverage.html","tf":0.04597701149425287}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.015151515151515152},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"s":{"docs":{},":":{"4":{"docs":{"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.015151515151515152}}},"5":{"docs":{"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.015151515151515152}}},"6":{"docs":{"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.015151515151515152}}},"7":{"docs":{"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.015151515151515152}}},"docs":{}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"d":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}},"u":{"docs":{},"p":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}}}}}}},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}},"d":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}},"u":{"docs":{},"p":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.010683760683760684}},"(":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.004347826086956522},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":5.03030303030303},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}},"u":{"docs":{},"e":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.006172839506172839},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0111731843575419},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.008064516129032258},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.008849557522123894},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0091324200913242},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.007692307692307693},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.01119221411192214},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.007272727272727273},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.0069767441860465115},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.01706827309236948},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.01171875}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},":":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0038929440389294406},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.017391304347826087}},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}},"w":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.00966183574879227}}}},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.02608695652173913},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242}},".":{"docs":{},"p":{"docs":{},"x":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349}}}}}},"d":{"docs":{},"o":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}}}},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}}}}}}},":":{"docs":{},"{":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006521739130434782},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.043209876543209874},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0111731843575419},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.014285714285714285},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.020161290322580645},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.017699115044247787},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.0149812734082397},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0182648401826484},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.016233766233766232},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.012307692307692308},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.02197802197802198},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.023504273504273504},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.02127659574468085},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.018998272884283247},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.020924574209245744},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.020606060606060607},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.010362694300518135},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.02512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.015584415584415584},"interfaces/EventsMap.html":{"ref":"interfaces/EventsMap.html","tf":0.05652173913043478},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.020930232558139535},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.021413276231263382},"interfaces/TreeEvent.html":{"ref":"interfaces/TreeEvent.html","tf":0.09090909090909091},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.01953125},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.04597701149425287},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01891891891891892},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"`":{"docs":{},"u":{"docs":{},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.06896551724137931}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":6.666666666666666}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}},"o":{"docs":{},"p":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.008635578583765112}}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}},"s":{"docs":{},"[":{"0":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}},"docs":{}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"[":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"}":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}}},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.011235955056179775}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.016483516483516484}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.00641025641025641}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"]":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}}}}}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.011235955056179775},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"$":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"0":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.004016064257028112}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.006172839506172839},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"$":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0024691358024691358}}}}}},"s":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.007936507936507936}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}},"[":{"0":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}},"docs":{}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}}}}}}}}},"d":{"docs":{},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"!":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.007272727272727273}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}},"$":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}},"i":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00145985401459854},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129}}}}}}}},"o":{"docs":{},"p":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129}}}}},"e":{"docs":{},"l":{"docs":{"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.00749063670411985}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"[":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"$":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"$":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"$":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"$":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616}},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616}}}}}},"$":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.004615384615384616}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"!":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0030303030303030303}}}}}}}}},"d":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137}}}}},"e":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.00641025641025641}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.02127659574468085}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.004379562043795621},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.009036144578313253}}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"+":{"1":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}},"docs":{}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0050200803212851405}},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0048484848484848485}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"a":{"docs":{},"t":{"docs":{},"'":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"'":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}},"b":{"docs":{},"d":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}},"u":{"docs":{},"i":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.001953125},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011494252873563218}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715}}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.008695652173913044},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0024330900243309003},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625}},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}}}}},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.007772020725388601},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.007537688442211055},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.007792207792207792},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.013953488372093023},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.006423982869379015},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.01171875},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703}}}}}}}}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.034482758620689655}}}}},"r":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}}}}}},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364}}}}}},"a":{"docs":{},"m":{"docs":{"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338}}}}},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.005405405405405406}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004347826086956522}}}}}}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.034482758620689655},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.010869565217391304},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.03454231433506045},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.002512562814070352},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.0025974025974025974},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.002325581395348837},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.0021413276231263384},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.00390625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.011494252873563218}},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.009836065573770493},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0031746031746031746},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.007692307692307693}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0019464720194647203},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00048661800486618007},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}},"e":{"docs":{},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.010769230769230769},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0051813471502590676}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}}}}},"t":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}},"s":{"docs":{},":":{"1":{"2":{"1":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"docs":{}},"3":{"5":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"docs":{}},"4":{"4":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"docs":{}},"5":{"5":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"docs":{}},"8":{"2":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"docs":{}},"9":{"3":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"docs":{}},"docs":{}},"3":{"1":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"2":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"4":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"6":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"8":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"docs":{}},"4":{"0":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"1":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"2":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"3":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"4":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"5":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.003076923076923077}}},"7":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"docs":{}},"5":{"1":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"docs":{}},"7":{"8":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"docs":{}},"9":{"6":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.03538461538461538},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.002702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.005747126436781609}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704}},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00535279805352798},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0024242424242424242},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.007028112449799197}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0018181818181818182}}}}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0036363636363636364}}}}}}},"a":{"docs":{},"r":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0049382716049382715},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.0223463687150838},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.006349206349206349},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.016129032258064516},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.017699115044247787},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.0149812734082397},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0182648401826484},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.012987012987012988},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.006153846153846154}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":6.6693693693693685},"coverage.html":{"ref":"coverage.html","tf":0.04597701149425287}}}}}}},"l":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224}},"u":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.006172839506172839},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.011111111111111112},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.010769230769230769},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.002136752136752137},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.010362694300518135},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.004866180048661801},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.006060606060606061},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.002008032128514056},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.0078125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.043243243243243246}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.003703703703703704},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.004761904761904762},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.00974025974025974},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.012307692307692308},"directives/TreeDragDirective.html":{"ref":"directives/TreeDragDirective.html","tf":0.005494505494505495},"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.014957264957264958},"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.010638297872340425},"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.008635578583765112},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.012165450121654502},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.00909090909090909},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0025906735751295338}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004830917874396135}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.00291970802919708},"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.007272727272727273},"interfaces/ActionHandler.html":{"ref":"interfaces/ActionHandler.html","tf":0.0051813471502590676},"interfaces/ActionMapping.html":{"ref":"interfaces/ActionMapping.html","tf":0.005025125628140704},"interfaces/DropTarget.html":{"ref":"interfaces/DropTarget.html","tf":0.005194805194805195},"interfaces/RawTreeUIOptions.html":{"ref":"interfaces/RawTreeUIOptions.html","tf":0.004651162790697674},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.0030120481927710845},"interfaces/TreeDataOptions.html":{"ref":"interfaces/TreeDataOptions.html","tf":0.004282655246252677},"interfaces/TreeUIOptions.html":{"ref":"interfaces/TreeUIOptions.html","tf":0.0078125}}}}}}}},"a":{"docs":{},"y":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"i":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.002173913043478261}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.01948051948051948}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494}}}}}},"t":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}},"s":{"docs":{},":":{"1":{"1":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247}}},"2":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247}}},"3":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247}}},"4":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247}}},"6":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.006493506493506494}}},"docs":{}},"2":{"1":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247}}},"5":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247}}},"9":{"docs":{"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.003278688524590164},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.032467532467532464},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeComponent.html":{"ref":"components/TreeComponent.html","tf":0.0012345679012345679},"components/TreeLoadingComponent.html":{"ref":"components/TreeLoadingComponent.html","tf":0.00558659217877095},"components/TreeNodeChildrenComponent.html":{"ref":"components/TreeNodeChildrenComponent.html","tf":0.0015873015873015873},"components/TreeNodeComponent.html":{"ref":"components/TreeNodeComponent.html","tf":0.004032258064516129},"components/TreeNodeContentComponent.html":{"ref":"components/TreeNodeContentComponent.html","tf":0.004424778761061947},"components/TreeNodeDropSlotComponent.html":{"ref":"components/TreeNodeDropSlotComponent.html","tf":0.003745318352059925},"components/TreeNodeExpanderComponent.html":{"ref":"components/TreeNodeExpanderComponent.html","tf":0.0045662100456621},"components/TreeNodeWrapperComponent.html":{"ref":"components/TreeNodeWrapperComponent.html","tf":0.003246753246753247},"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TreeViewportComponent.html":{"ref":"components/TreeViewportComponent.html","tf":0.0015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0017271157167530224},"classes/TreeModel.html":{"ref":"classes/TreeModel.html","tf":0.0009732360097323601},"interfaces/ScrollIntoViewTarget.html":{"ref":"interfaces/ScrollIntoViewTarget.html","tf":0.001004016064257028}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0006060606060606061}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.013986013986013986},"modules/NgxTreeModule.html":{"ref":"modules/NgxTreeModule.html","tf":0.006557377049180328}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.008547008547008548}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/TreeDropDirective.html":{"ref":"directives/TreeDropDirective.html","tf":0.004273504273504274}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/TreeDraggingTargetService.html":{"ref":"injectables/TreeDraggingTargetService.html","tf":0.0425531914893617}}}}}}}}}}},"u":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/TreeNode.html":{"ref":"classes/TreeNode.html","tf":0.0012121212121212121},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447}}}}}}},"y":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0069084628670120895}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{"injectables/TreeVirtualScroll.html":{"ref":"injectables/TreeVirtualScroll.html","tf":0.0034542314335060447},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008108108108108109},"coverage.html":{"ref":"coverage.html","tf":0.0028735632183908046}}}}}}}}}}}}}}}}}},"length":4821},"corpusTokens":["0","0.1.0","0.2.0","0.2.1","0.2.2","0.3.0","0.3.1","0.3.2","0.3.3","0.3.4","0.4.0","0.5.0","0.5.1","0.5.2","0.5.3","0.6.0","0.7.0","0.7.1","0/1","0/10","0/20","0/21","0/23","0/3","0/4","0/5","0/6","0/7","02fa222","06bd7a9","07","09","0px","1","1.5","1/1","1/2","1/3","10","100","103b9b8","11","12","120","13","13067d3","14","15","15/51","18","2","20","2017","21","21/49","21a101","21a2e3c","22","225m","25","26","29","2b3f565","2b51365","2c2a966","2e85611","3","3/14","3/44","302b6fc","32","33","33ca365","37","38","39","3bf532b","3e3fd7b","40","42","420967a","4c9d403","4debcf5","5","5/6","50","5936f8f","5e3be34","5ef5498","6","6/7","6324459","63674e2","64027fb","677284d","686acaf","6ed7b97","6efc4e4","7023a8e","785af75","78afac1","83","85","86f2219","8e79fa0","9","9158c38","9a54282","_allowdrop","_draggedel","_stopev","_stopevent(ev","_uuid","a16b4cb","a1f5cfb","a775aad","aa32c1b","abe0775","acb8d68","acc[0","acc[1","access","accessor","accord","action","action(thi","action(this.treemodel","actionhandl","actionmap","actionmapping[actionnam","actionnam","activ","activatenod","activatenode(id","activatetarget","activenod","activenodeid","actual_compon","ad","add","addcach","addcache(nod","addchild","addchild(data","addclass","adddisabledclass","addnod","adjustviewport","adjustviewport(viewport","aef71bf","afterviewinit","alias","allow","allowdrag","allowdrag(nod","allowdrop","allowdrop($ev","allowdroppred","alreadi","ancestor","angular","angular/anim","angular/common","angular/cor","angular/platform","anim","animate(expansion_panel_animation_tim","anoth","aot","app","app.compon","appcompon","appendchild","appendchild(data","applic","appmodul","area","argument","array","array.from(this.activenodeids.key","array.from(this.expandednodeids.key","arrow","arrowdown","arrowleft","arrowright","arrowup","assign","assum","async","asynchron","attribut","auto","autoexpand","autoshow","averag","averagenodeheight","avg","avoid","b2868bf","b82fc9e","base","befor","begin","behavior","behaviorsubject","behaviorsubject(nul","below","bezier(0.4,0.0,0.2,1","binari","binarysearch","binarysearch(nod","bind","block","blur","bodi","boolean","bootstrap","break","broken","brows","browser","browseranimationsmodul","browsermodul","buffer","bug","buildto","c9ddfef","cach","calcmargintop","calcul","canmovenod","canmovenode(nod","case","categori","center","chang","changeabl","changedetect","changedetectionstrategi","changedetectionstrategy.onpush","changefilt","changelog","changes.activatetarget","changes.activatetarget.currentvalu","changes.allowdrag","changes.allowdrop","changes.children.currentvalu","changes.dataopt","changes.dataoptions.currentvalu","changes.focustarget","changes.focustarget.currentvalu","changes.levelpad","changes.nod","changes.nodeclass","changes.nodes.currentvalu","changes.nodes.isfirstchang","changes.treemodel.isfirstchang","changes.usevirtualscrol","check","child","child.index","child.traverse(fn","childid","childnod","children","children'","children'},{'nam","children.compon","children.component.html","children.component.scss","children.component.t","children.component.ts:29","children.component.ts:30","children.component.ts:32","children.component.ts:33","children.component.ts:34","children.component.ts:35","children.component.ts:36","children.component.ts:37","children.component.ts:40","children.component.ts:42","children.component.ts:44","children.component.ts:50","children.component.ts:55","children.component.ts:59","children.component.ts:72","children.component.ts:79","children.component.ts:83","children.component.ts:87","children.component.ts:97","children/tre","childrenfield","claim","class","class.ngx","class.tre","classnam","clearfilt","cleartimeout(this.scrolltim","click","clientrect","closest","cloud","cloud/ngx","cluster_ngxtreemodul","cluster_ngxtreemodule_declar","cluster_ngxtreemodule_export","code","collaps","collapseal","collect","collectaveragenodeheight","collectionmonitor","combin","commit","common","commonmodul","compact","compact(nod","compens","compon","component'","component_templ","components/tre","components/tree/tree.compon","condit","config","consid","console.log('drag","const","constants/ev","constants/key","constructor","constructor(@inject(virtual_scroll_node_height_quota","constructor(data","constructor(el","constructor(nod","constructor(priv","constructor(publ","constructor(quota","constructor(treedraggingtargetservic","constructor(virtualscrol","contain","content","content'},{'nam","content.compon","content.component.html","content.component.scss","content.component.t","content.component.ts:11","content.component.ts:12","content.component.ts:13","content.component.ts:14","content.component.ts:15","content/tre","contentchild","contentchild('expandertempl","contentchild('loadingtempl","contentchild('treenodefulltempl","contentchild('treenodetempl","contentchild('treenodewrappertempl","contents(not","context","contextmenu","core","correct","count","coverag","creat","createtreedataopt","createtreedataoptions(opt","createtreedataoptions(rawopt","createtreeuiopt","createtreeuioptions(rawopt","cubic","cur","current","currentscrolltop","currentviewport","curv","custom","d.t","da5d86a","data","data[this.options.isexpandedfield","dataopt","day","dblclick","dc20dfa","dc6758b","deactiv","declar","decor","default","defaultactionmap","defaultdataopt","defaultsdeep","defaultuiopt","defin","demo","dep","depend","deprec","depth","deriv","descend","descript","deselect","detail","determin","develop","differ","direct","directives/tre","directli","disabl","disable_on_scroll_class","disabledclassad","disableeventswhenscrol","disablemargintop","display","displayfield","document","doesn't","dom","don't","down","drag","drag&drop","drag.direct","drag.directive.t","drag.directive.ts:11","drag.directive.ts:12","drag.directive.ts:22","drag.directive.ts:44","drag.directive.ts:54","drag_disabled_class","drag_over_class","dragend","dragend(ev","dragent","dragenter($ev","dragev","draggabl","draggedel","dragging_target_class","draggingtarget","dragleav","dragleave($ev","dragov","dragover($ev","dragoverclassad","dragstart","dragstart(ev","drill_down","drill_up","drop","drop($ev","drop.direct","drop.directive.t","drop.directive.ts:103","drop.directive.ts:107","drop.directive.ts:112","drop.directive.ts:114","drop.directive.ts:119","drop.directive.ts:124","drop.directive.ts:129","drop.directive.ts:15","drop.directive.ts:16","drop.directive.ts:17","drop.directive.ts:18","drop.directive.ts:21","drop.directive.ts:25","drop.directive.ts:29","drop.directive.ts:30","drop.directive.ts:39","drop.directive.ts:47","drop.directive.ts:62","drop.directive.ts:76","drop.directive.ts:90","dropindex","droponnod","droptarget","e","e2cc6d0","e2d3abb","each","each(this.emittermap","edg","el","element","element:ani","elementref","emit","emitt","emitter.complet","emittermap","empti","enabl","enableanim","end","endpo","ensur","ensurevis","enter","error","es/compact","es/default","es/defaultsdeep","es/each","es/find","es/first","es/isfunct","es/isnumb","es/isstr","es/last","es/pullat","es/without","ev","ev.datatransfer.dropeffect","ev.datatransfer.setdata('text","event","event.el","event.ev","event.preventdefault","event.stoppropag","event.target.closest('ngx","event.treemodel","eventemitt","eventnam","eventsmap","exampl","exist","expand","expandal","expandanim","expandednod","expandednodeid","expander'},{'nam","expander.compon","expander.component.html","expander.component.scss","expander.component.t","expander.component.ts:10","expander.component.ts:11","expander.component.ts:12","expander.component.ts:13","expander.component.ts:15","expander/tre","expanderclick","expandertempl","expans","expansion_panel_animation_tim","export","extend","extern","fals","featur","field","file","filter","filter((activenod","filter((id","filter((nod","filterfn","filterfn(nod","filternod","filternode(id","filternodes(filt","find","find(startnode.children","findadjacents","findadjacentsibling(step","findnextnod","findnextnode(goinsid","findnexts","findnextsibling(skiphidden","findpreviousnod","findpreviousnode(skiphidden","findpreviouss","findprevioussibling(skiphidden","fire","fireev","fireevent(ev","firefox","first","first(children","first(skiphidden","firstindex","firstnod","firstnode.parent.isroot","firstnode.parent.posit","firstnode.posit","five","fix","flexibl","fn","focu","focus","focus(scrol","focusdrilldown","focusdrillup","focusednod","focusednodeid","focusedtre","focusnextnod","focusnod","focusnode(id","focuspreviousnod","focustarget","forc","foreach((activenod","forroot","found","foundinchildren","fromindex","frompar","full","function","gener","get","getactivenod","getallowdrop","getchildren","getchildren(nod","getchildren?(nod","getdisplayfield","getexpandednod","getfield","getfield(key","getfirstchild","getfirstchild(skiphidden","getfirstroot","getfirstroot(skiphidden","getfocusednod","gethaschildren","gethasvisiblechildren","getid","getisact","getiscollaps","getisemptytre","getisexpand","getisfocus","getishidden","getisleaf","getisroot","getlastchild","getlastchild(skiphidden","getlastopendescend","getlastopendescendant(skiphidden","getlastroot","getlastroot(skiphidden","getlevel","getnodebi","getnodeby(pred","getnodebyid","getnodebyid(id","getnodebypath","getnodebypath(path","getopt","getparentchildren","getparentchildren(skiphidden","getpath","getpositionaft","getpositionafter(nod","getpositionafternod","getpositionafternode(nod","getter","gettreeallowdrop","getviewportnod","getviewportnodes(nod","getvisiblechildren","getvisibleroot","goinsid","guidelin","handl","haschildren","hasenoughnodeheight","hasvisiblechildren","height","helper","here","hidden","hiddennodeid","hide","hold","host","hostbind","hostbinding('@expandanim","hostbinding('class.ngx","hostbinding('class.tre","hostbinding('style.margin","hostlisten","hostlistener('bodi","hostlistener('drag","hostlistener('dragend","hostlistener('dragent","hostlistener('dragleav","hostlistener('dragov","hostlistener('dragstart","hostlistener('drop","hostlistener('scrol","html","iallowdragfn","iallowdropfn","id","id(valu","identifi","idfield","ids.set(node.id","ilevelpaddingfn","immut","implement","implicit","import","improv","includ","increas","index","index:number}):boolean","indic","info","initchildren","initeventsubscript","initi","inject","injectiontoken","injectiontoken('tree_data_opt","injectiontoken('virtual_scroll_node_height_quota","inner","input","input('ngxtreedrag","insensit","insid","insideclick","instal","instead","interfac","intern","introduc","invok","isact","iscollaps","isdescendantof","isdescendantof(nod","isdis","isdrag","isemptytre","isexpand","isexpandedfield","isfocus","isfunct","isfunction(allowdrop","isfunction(filt","isfunction(this.options.allowdrag","isfunction(this.options.allowdrop","ishidden","isleaf","ismulti","isnodeact","isnodeactive(nod","isnodeexpand","isnodeexpanded(nod","isnodefocus","isnodefocused(nod","isnodehidden","isnodehidden(nod","isnumb","isnumber(levelpaddingopt","isprevshadow","isroot","isscrol","isstr","isstring(filt","isvis","it'","item","js","keep","keepnodesexpand","key","keyboard","keyboardev","keycod","keydown","keydown($ev","know","larg","last","last(children","last(skiphidden","lastavg","lastchild","lastchild.getlastopendescendant(skiphidden","lastscrollintoviewtarget","lastscrolltop","lasttarget","lasttarget.forc","lasttarget.node.elementref.nativeelement.scrollintoview","lasttarget.node.elementref.nativeelement.scrollintoviewifneed","lasttarget.node.elementref.nativeelement.scrollintoviewifneeded(lasttarget.scrolltomiddl","lasttarget.scrolltomiddl","late","later","layer","leak","left","legend","leggi","lettabl","level","levelpad","levelpaddingopt","librari","lifecycl","limit","link","lint","lintlicens","liter","load","loadchildren","loading'},{'nam","loading.compon","loading.component.html","loading.component.scss","loading.component.t","loading.component.ts:11","loading.component.ts:12","loading.component.ts:14","loading/tre","loadingchildren","loadingtempl","locat","lodash","lodash'","log","look","loop","make","map","map((data","map((id","map([[node.id","map[nam","margintop","margintopattr","mark","match","math.abs(currentscrolltop","math.max(0","mdn","memori","merg","metadata","metadata.json","method","metric","middl","minimum","miscellan","miss","mit","mobx","model","model.t","model.ts:106","model.ts:110","model.ts:115","model.ts:121","model.ts:129","model.ts:136","model.ts:144","model.ts:15","model.ts:152","model.ts:16","model.ts:162","model.ts:17","model.ts:191","model.ts:201","model.ts:223","model.ts:227","model.ts:231","model.ts:235","model.ts:239","model.ts:24","model.ts:254","model.ts:258","model.ts:268","model.ts:276","model.ts:284","model.ts:288","model.ts:29","model.ts:292","model.ts:303","model.ts:317","model.ts:328","model.ts:33","model.ts:339","model.ts:34","model.ts:354","model.ts:373","model.ts:380","model.ts:384","model.ts:39","model.ts:406","model.ts:431","model.ts:442","model.ts:46","model.ts:468","model.ts:474","model.ts:505","model.ts:520","model.ts:53","model.ts:60","model.ts:71","model.ts:79","model.ts:80","model.ts:81","model.ts:82","model.ts:83","model.ts:87","model.ts:91","models/index","modifi","modul","moduleid","modulewithprovid","mous","mouseact","mouseaction(actionnam","mousedown","mousedown($ev","mouseev","move","move_nod","movenod","movenode(nod","multipl","name","need","new","next","next_nod","nextnod","nextnode.focu","ngafterviewinit","ngc","ngmodul","ngonchang","ngonchanges(chang","ngondestroy","ngoninit","ngoutlet","ngoutletcontext","ngx","ngxtreedrag","ngxtreedrag]'},{'nam","ngxtreedrop","ngxtreemodul","ngxtreemodule.forroot","node","node'","node'},{'nam","node.children","node.children.foreach((child","node.collaps","node.compon","node.component.html","node.component.scss","node.component.t","node.component.ts:11","node.component.ts:12","node.component.ts:13","node.component.ts:14","node.component.ts:16","node.component.ts:18","node.component.ts:26","node.data.children","node.data.nam","node.displayfield","node.displayfield.tolowercase().includes(filter.tolowercas","node.elementref","node.ensurevis","node.expand","node.focu","node.haschildren","node.height","node.id","node.index","node.isexpand","node.isfocus","node.ishidden","node.level","node.loadingchildren","node.par","node.posit","node.remov","node.setactive(fals","node.setactive(tru","node.t","node.toggleactiv","node.toggleactivated(tru","node.toggleexpand","node.treemodel","node.ts:102","node.ts:106","node.ts:108","node.ts:114","node.ts:118","node.ts:119","node.ts:123","node.ts:143","node.ts:147","node.ts:151","node.ts:155","node.ts:16","node.ts:163","node.ts:171","node.ts:179","node.ts:187","node.ts:197","node.ts:20","node.ts:209","node.ts:220","node.ts:232","node.ts:24","node.ts:241","node.ts:25","node.ts:26","node.ts:267","node.ts:278","node.ts:28","node.ts:290","node.ts:301","node.ts:308","node.ts:315","node.ts:32","node.ts:327","node.ts:336","node.ts:345","node.ts:351","node.ts:36","node.ts:363","node.ts:372","node.ts:379","node.ts:396","node.ts:40","node.ts:409","node.ts:418","node.ts:424","node.ts:44","node.ts:446","node.ts:450","node.ts:454","node.ts:475","node.ts:48","node.ts:486","node.ts:492","node.ts:497","node.ts:505","node.ts:52","node.ts:59","node.ts:66","node.ts:71","node.ts:76","node.ts:81","node.ts:90","node.ts:98","node/tre","nodecach","nodeclass","nodeclass(nod","nodeclass?(nod","nodeheightanalyt","nodes.foreach((nod","nodes.length","nopad","normal","notabl","note","notif","now","npm","null","number","number_key","number_keys.down","number_keys.ent","number_keys.left","number_keys.right","number_keys.spac","number_keys.up","object","object.keys(tree_events).reduce((map","observ","observable'","offset","old","oldtreemodel","oldtreemodel.expandednodes.foreach(nod","on","onc","onchang","ondestroy","ondrag(ev","ondragend(ev","ondragent","ondragenter($ev","ondragleav","ondragleave($ev","ondragov","ondragover($ev","ondragstart(ev","ondrop","ondrop($ev","oninit","onkeydown($ev","onmousedown($ev","onscroll(ev","oper","operat","optim","option","options.idfield","options.t","options.ts:100","options.ts:106","options.ts:11","options.ts:111","options.ts:115","options.ts:116","options.ts:117","options.ts:118","options.ts:120","options.ts:142","options.ts:146","options.ts:150","options.ts:154","options.ts:158","options.ts:163","options.ts:19","options.ts:32","options.ts:38","options.ts:39","options.ts:79","options.ts:96","origin","otherwis","out","output","output('ngxtreedrop","output('treedropdragent","output('treedropdragleav","output('treedropdragov","over","overflow","overrid","overview","pad","pair[0","pair[1","panel","param","paramet","parent","parent'","parent.isleaf","pass","path","path.length","path.shift","per","perform","performkeyact","performkeyaction(nod","pipe(filter(v","pipe(scan((acc","play","pleas","pointer","posit","predefin","predic","prevent","previou","previous","previous_nod","previousnod","previousnode.findnextnode(tru","previousnode.findpreviousnode(tru","previousnode.getfirstchild(tru","previousnode.haschildren","previousnode.iscollaps","previousnode.isexpand","previousnode.par","previousnode.toggleexpand","previouss","previoussibling.getlastopendescendant(skiphidden","privat","process","project","promis","promise.resolv","promise.resolve(fn(this)).then","promise.resolve(this.options.getchildren(thi","propag","proper","properli","properti","prototyp","provid","proxi","public","pullat","pullat(this.getfield('children","px","quota","rais","rawopt","rawopts.levelpad","rawtreeuiopt","readonli","recalcchildrenindic","recalcchildrenindices(offset","recalcposit","recalcpositions(treemodel","recalcul","receiv","record","recurs","redesign","redux","ref","refactor","refer","refin","refresh","refreshtre","regist","rel","relat","remov","removechild","removechild(nod","removeclass","removedisabledclass","removenod","render","renderer2","replac","reportnodeheight","reportnodeheight(data","repres","requir","reset","respect","rest","restor","result","return","revert","right","root","root'","root.collapseal","root.expandal","root.traverse(fn","round","row","run","rxj","rxjs/behaviorsubject","rxjs/observ","rxjs/observable/merg","rxjs/oper","rxjs/subject","rxjs/subscript","same","saveusag","scan","scroll","scroll(ev","scroll.servic","scroll.service.t","scroll.service.ts:111","scroll.service.ts:15","scroll.service.ts:16","scroll.service.ts:17","scroll.service.ts:19","scroll.service.ts:20","scroll.service.ts:21","scroll.service.ts:23","scroll.service.ts:24","scroll.service.ts:31","scroll.service.ts:46","scroll.service.ts:52","scroll.service.ts:56","scroll.service.ts:65","scroll.service.ts:69","scroll.service.ts:73","scroll.service.ts:85","scroll.service.ts:98","scrollcallback","scrollheight","scrollintoview","scrollintoview(forc","scrollintoview(nod","scrollintoviewandtick","scrollintoviewandtick(target","scrollintoviewsub","scrollintoviewtarget","scrollintoviewtick","scrollsub","scrolltim","scrolltomiddl","scrolltop","search","see","select","selector","self","servic","services/tre","set","set(draggedel","setact","setactive(isact","setactiveandvis","setactiveandvisible(ismulti","setactivenod","setactivenode(nod","setdis","setdisabled(isdis","setexpandednod","setexpandednode(nod","setexpandednodeinplac","setexpandednodeinplace(nod","setfield","setfield(key","setfocu","setfocus(valu","setfocusednod","setfocusednode(nod","sethidden","sethidden(ishidden","sethiddennod","sethiddennode(nod","setid(valu","setmultiactivenod","setmultiactivenodes(nod","setsingleactivenod","setsingleactivenode(nod","settimeout","settreeallowdrop(allowdrop","setviewport","shadow","show","sibl","signatur","similar","simplechang","simul","singl","site","size","sizechang","skip","skiphidden","slot","slot'},{'nam","slot.compon","slot.component.html","slot.component.scss","slot.component.t","slot.component.ts:12","slot.component.ts:13","slot.component.ts:14","slot.component.ts:16","slot.component.ts:24","slot/tre","sourc","space","specifi","split","src/ngx","standard","start","startnod","startnode.children","startpo","state","statement","static","step","stop","string","string_key","structur","structurechangesub","style","style.margin","styleurl","sub","subject","subscrib","subscribe(eventnam","subscribe(observ","subscribe(pair","subscript","subscription.empti","sum","suppli","support","sure","svg","switch","system.j","tab","tabl","tablesort(document.getelementbyid('coverag","take","target","target.focu","target.node.elementref","target.servic","target.service.t","target.service.ts:13","target.service.ts:17","target.service.ts:7","target.service.ts:9","target.setactiveandvis","targetoffset","tbd","tell","templat","templateref","templates(wil","templateurl","test","textarea'].includes(document.activeelement.tagname.tolowercas","that'","then((children","there'","this._allowdrop","this._allowdrop(this.treedraggedelement.get","this._draggedel","this._stopevent($ev","this._stopevent(ev","this.activenod","this.activenodeid","this.activenodeids.get(id","this.activenodeids.get(node.id","this.activenodeids.set(node.id","this.activenodes[0","this.addchild(data","this.addclass","this.adddisabledclass","this.allowdrag","this.allowdrop","this.allowdrop($ev","this.averagenodeheight","this.calcmargintop","this.children","this.children.foreach((child","this.children.length","this.children.slic","this.children.slice(offset).foreach((child","this.children.splice(index","this.clearfilt","this.collectaveragenodeheight","this.collectionmonitor","this.collectionmonitor$.next","this.currentviewport","this.currentviewport.height","this.data.haschildren","this.data[this.options[`${key}field","this.dataopt","this.dis","this.disabledclassad","this.disableeventswhenscrol","this.disablemargintop","this.draggingtarget.id","this.draggingtarget.mouseact","this.draggingtarget.mouseaction('drag","this.draggingtarget.mouseaction('dragend","this.draggingtarget.mouseaction('dragstart","this.dragoverclassad","this.dropindex","this.elementref","this.elementref.nativeelement.getboundingclientrect","this.elementref.nativeelement.scrolltop","this.emittermap","this.events[event.eventname].emit(ev","this.events[eventname].subscribe(fn","this.expandednodeids.get(id","this.expandednodeids.get(node.id","this.expandednodeids.set(node.id","this.filternode(id","this.findadjacents","this.findadjacentsibling(+1","this.findnextsibling(skiphidden","this.findprevioussibling(skiphidden","this.fireev","this.focusednod","this.focusednodeid","this.get","this.getfield('children","this.getfield('children').push(data","this.getfield('children').splice(index","this.getfield('display","this.getfield('id","this.getfirstchild(skiphidden","this.getfirstroot(tru","this.getlastchild(skiphidden","this.getlastroot(tru","this.getnodeby(pred","this.getnodebyid(id","this.getnodebyid(this.focusednodeid","this.getnodebypath(path","this.getparentchildren(skiphidden)[this.index","this.getpositionafter(node.visiblechildren","this.getpositionafter(treemodel.getvisibleroot","this.getpositionafternode(nod","this.getviewportnodes(this.node.visiblechildren","this.getvisibleroot","this.haschildren","this.hasenoughnodeheight","this.hasownproperty(nam","this.hiddennodeid","this.hiddennodeids.get(node.id","this.hiddennodeids.set(node.id","this.id","this.initchildren","this.initeventsubscript","this.iscollaps","this.isexpand","this.isscrol","this.keepnodesexpand","this.lastscrollintoviewtarget","this.lastscrolltop","this.levelpad","this.loadchildren","this.loadingchildren","this.margintop","this.mouseaction('drop","this.ngondestroy","this.nod","this.node.elementref","this.node.isexpand","this.node.mouseaction('drop","this.node.treemodel","this.nodecache.get(id","this.nodecache.set(node.id","this.nodeclass","this.nodeheightanalyt","this.nodeheightanalytics$.next(data","this.ondragenter$.complet","this.ondragenter$.emit","this.ondragleave$.complet","this.ondragleave$.emit","this.ondragover$.complet","this.ondragover$.emit","this.ondrop$.complet","this.ondrop$.emit","this.opt","this.options.actionmapping.keys[$event.keycod","this.options.actionmapping.mous","this.options.allowdrag","this.options.allowdrag(nod","this.options.allowdrop","this.options.allowdrop(el","this.options.allowdrop(nod","this.options.childrenfield","this.options.getchildren","this.options.levelpad","this.par","this.parent.children","this.parent.ensurevis","this.parent.expand","this.parent.findnextnode(fals","this.parent.isdescendantof(nod","this.parent.level","this.parent.path","this.parent.removechild(thi","this.parent.visiblechildren","this.quota","this.recalcchildrenindices(0","this.recalcchildrenindices(index","this.refreshtre","this.removeclass","this.removedisabledclass","this.renderer.addclass(this.el.nativeel","this.renderer.addclass(this.elementref.nativeel","this.renderer.removeclass(this.el.nativeel","this.renderer.removeclass(this.elementref.nativeel","this.renderer.setattribute(this.el.nativeel","this.root","this.roots.foreach((nod","this.roots.foreach((root","this.roots.length","this.scrollintoview","this.scrollintoview$.next","this.scrollintoviewandtick(target","this.scrollintoviewsub","this.scrollintoviewsub.unsubscrib","this.scrollintoviewtick","this.scrollsub","this.scrollsub.unsubscrib","this.scrolltim","this.setactive(!this.isact","this.setactive(tru","this.setexpandednodeinplace(this.virtualroot","this.setfield('children","this.setfield('id","this.sethidden(fals","this.sethidden(tru","this.setmultiactivenodes(nod","this.setsingleactivenode(nod","this.setviewport","this.structurechangesub","this.structurechangesub.unsubscrib","this.tick","this.toggleexpand","this.traverse((nod","this.treedragen","this.treedraggedelement.get","this.treedraggedelement.set(nul","this.treedraggingtargetservice.set(nul","this.treedraggingtargetservice.set(this.draggingtarget","this.treemodel","this.treemodel.activatenode(this.activatetarget","this.treemodel.events.addnod","this.treemodel.events.changefilt","this.treemodel.events.collaps","this.treemodel.events.expand","this.treemodel.events.loadchildren","this.treemodel.events.removenod","this.treemodel.fireev","this.treemodel.fireevent(ev","this.treemodel.focusednod","this.treemodel.focusnode(this.focustarget","this.treemodel.isfocus","this.treemodel.isnodeactive(thi","this.treemodel.isnodeexpanded(thi","this.treemodel.isnodefocused(thi","this.treemodel.isnodehidden(thi","this.treemodel.opt","this.treemodel.performkeyaction(focusednod","this.treemodel.scrollintoview$.subscribe((target","this.treemodel.scrollintoview(thi","this.treemodel.setactivenode(nod","this.treemodel.setactivenode(thi","this.treemodel.setexpandednode(thi","this.treemodel.setexpandednodeinplace(nod","this.treemodel.setfocus(fals","this.treemodel.setfocus(tru","this.treemodel.setfocusednode(nul","this.treemodel.setfocusednode(thi","this.treemodel.sethiddennode(thi","this.treemodel.updateoptions(changes.dataoptions.currentvalu","this.uiopt","this.usevirtualscrol","this.viewportcomponent.setviewport","this.viewportnod","this.viewportnodes.length","this.viewportnodes[0","this.virtualroot","this.virtualroot.children","this.virtualroot.visiblechildren","this.virtualscroll.adjustviewport","this.virtualscroll.averagenodeheight","this.virtualscroll.hasenoughnodeheight","this.virtualscroll.isdis","this.virtualscroll.recalcpositions(this.treemodel","this.virtualscroll.reportnodeheight(this.elementref.nativeelement.getboundingclientrect().height","this.virtualscroll.scrollintoview(lasttarget.nod","this.virtualscroll.setdisabled(!this.en","this.virtualscroll.waitforcollection((metr","this.visiblechildren","this.visiblechildren.length","this[nam","throw","tick","tid","time","titl","to.droponnod","to.index","to.par","to.parent.addchild(node.data","to.parent.appendchild(node.data","to.parent.data","to.parent.isdescendantof(nod","to:{parent:itreenod","todo","toggle_expand","toggle_select","toggle_selected_multi","toggleactiv","toggleactivated(ismulti","toggleexpand","toggleexpanded(isexpand","toindex","top","top.px","tracknod","tracknode(index","transit","transition(':ent","transition(':leav","travers","traverse(fn","tree","tree'},{'nam","tree.component.html","tree.component.scss","tree.focusdrilldown","tree.focusdrillup","tree.focusnextnod","tree.focuspreviousnod","tree.movenode(from","tree/components/tre","tree/components/tree/tree.component.t","tree/components/tree/tree.component.ts:104","tree/components/tree/tree.component.ts:143","tree/components/tree/tree.component.ts:150","tree/components/tree/tree.component.ts:165","tree/components/tree/tree.component.ts:173","tree/components/tree/tree.component.ts:38","tree/components/tree/tree.component.ts:39","tree/components/tree/tree.component.ts:40","tree/components/tree/tree.component.ts:41","tree/components/tree/tree.component.ts:46","tree/components/tree/tree.component.ts:50","tree/components/tree/tree.component.ts:54","tree/components/tree/tree.component.ts:55","tree/components/tree/tree.component.ts:57","tree/components/tree/tree.component.ts:58","tree/components/tree/tree.component.ts:59","tree/components/tree/tree.component.ts:60","tree/components/tree/tree.component.ts:61","tree/components/tree/tree.component.ts:62","tree/components/tree/tree.component.ts:63","tree/components/tree/tree.component.ts:65","tree/components/tree/tree.component.ts:66","tree/components/tree/tree.component.ts:67","tree/components/tree/tree.component.ts:68","tree/components/tree/tree.component.ts:69","tree/components/tree/tree.component.ts:70","tree/components/tree/tree.component.ts:71","tree/components/tree/tree.component.ts:72","tree/components/tree/tree.component.ts:73","tree/components/tree/tree.component.ts:74","tree/components/tree/tree.component.ts:75","tree/components/tree/tree.component.ts:76","tree/components/tree/tree.component.ts:77","tree/components/tree/tree.component.ts:79","tree/components/tree/tree.component.ts:81","tree/components/tree/tree.component.ts:82","tree/components/tree/tree.component.ts:83","tree/components/tree/tree.component.ts:84","tree/components/tree/tree.component.ts:85","tree/components/tree/tree.component.ts:87","tree/components/tree/tree.component.ts:88","tree/components/tree/tree.component.ts:90","tree/constants/events.t","tree/constants/events.ts:24","tree/constants/events.ts:25","tree/constants/events.ts:26","tree/constants/events.ts:30","tree/constants/events.ts:31","tree/constants/events.ts:35","tree/constants/events.ts:36","tree/constants/events.ts:37","tree/constants/events.ts:38","tree/constants/events.ts:39","tree/constants/events.ts:40","tree/constants/events.ts:41","tree/constants/events.ts:42","tree/constants/keys.t","tree/directives/tre","tree/index.t","tree/models/actions.t","tree/models/events.t","tree/models/events.ts:4","tree/models/events.ts:5","tree/models/events.ts:6","tree/models/events.ts:7","tree/models/tre","tree/services/tre","tree/util.t","tree_act","tree_actions.drill_down","tree_actions.drill_up","tree_actions.move_nod","tree_actions.next_nod","tree_actions.previous_nod","tree_actions.toggle_expand","tree_actions.toggle_select","tree_data_opt","tree_ev","tree_events.activ","tree_events.addnod","tree_events.blur","tree_events.changefilt","tree_events.collaps","tree_events.deactiv","tree_events.expand","tree_events.focu","tree_events.initi","tree_events.loadchildren","tree_events.movenod","tree_events.removenod","tree_events.toggleexpand","treeallowdrop","treeallowdrop(allowdrop","treecompon","treedataopt","treedragdirect","treedragen","treedraggedel","treedraggingtargetservic","treedropdirect","treedropdragent","treedropdragleav","treedropdragov","treeevent","treeloadingcompon","treemodel","treemodel(changes.nodes.currentvalu","treemodel.addcache(thi","treemodel.focusedtre","treemodel.roots.foreach(nod","treemodel.setexpandednodeinplace(thi","treemodel.virtualroot.height","treenod","treenode(data","treenode(virtualrootconfig","treenodechildrencompon","treenodecompon","treenodecontentcompon","treenodedropslotcompon","treenodeexpandercompon","treenodefulltempl","treenodetempl","treenodewrappercompon","treenodewrappertempl","treeuioption","treeviewportcompon","treevirtualscrol","trigger","trigger('expandanim","true","ts","two","type","typealias","typeerror(`don't","typeerror(`unmatch","typerefer","ui","uioption","unam","undefin","under","unfocu","uniqu","unless","unnecessari","up","updat","updateopt","updateoptions(opt","upgrad","us","usag","user","usevalu","usevirtualscrol","util","uuid","ux","val","valu","var","variabl","version","view","viewchild","viewchild('root","viewchild('viewport","viewport","viewport.compon","viewport.component.html","viewport.component.scss","viewport.component.t","viewport.component.ts:121","viewport.component.ts:135","viewport.component.ts:144","viewport.component.ts:155","viewport.component.ts:182","viewport.component.ts:193","viewport.component.ts:31","viewport.component.ts:32","viewport.component.ts:34","viewport.component.ts:36","viewport.component.ts:38","viewport.component.ts:40","viewport.component.ts:41","viewport.component.ts:42","viewport.component.ts:43","viewport.component.ts:44","viewport.component.ts:45","viewport.component.ts:47","viewport.component.ts:51","viewport.component.ts:78","viewport.component.ts:96","viewport.height","viewport/tre","viewportcompon","viewportnod","virtual","virtual_scroll_node_height_quota","virtualroot","virtualrootconfig","virtualscrol","virut","visibl","visiblechildren","visual","vitual","void","waitforcollect","waitforcollection(observ","way","well","whether","whilst","window.requestanimationfram","without","without(this.children","work","wrape","wrapper","wrapper'},{'nam","wrapper.compon","wrapper.component.html","wrapper.component.scss","wrapper.component.t","wrapper.component.ts:11","wrapper.component.ts:12","wrapper.component.ts:13","wrapper.component.ts:14","wrapper.component.ts:16","wrapper.component.ts:21","wrapper.component.ts:25","wrapper.component.ts:29","wrapper/tre","y_offset","y_offset_node_s","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-tree\nClaims\nThis module derivates from angular-tree-component. We remove the mobx dependency and do some performance improvements, whilst keep a similar component interface.\nInstallation\nTo install this library, run:\n$ npm install @e-cloud/ngx-tree --saveUsage\nFor details, please take a look at document site\nImports\nOnce you have installed the library, you can import it in your Angular AppModule:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import your library\nimport { NgxTreeModule } from '@e-cloud/ngx-tree';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n\n    // Specify your library as an import\n    NgxTreeModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Applications\ndemo usage\n\n\n  {{title}}\n\n\n  \n    {{ node.data.name }}\n  \n\nNOTE: the minimum input for ngx-tree component is nodes.\n\nRoot config\nThere is a forRoot() method on NgxTreeModule, which should be used only on root module of apps.\nforRoot injects two providers, TreeDraggingTargetService and VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA. The first holds the dragging element. The other specify the round size to calculate the average tree item height.\nTree options\nWe split the tree options into two category, TreeDataOptions and TreeUIOptions. dataOptions inputted by user will be passed into TreeModel which handle the tree data operations. uiOption will be passed into every child components required and declared tree templates(will introduce late).\nTree templates\nWe predefine five tree templates for flexible customization.\n\nloadingTemplate - loading indicator for async nodes\nexpanderTemplate - for tree expander customization,\ntreeNodeTemplate - for customization of tree node contents(not including node children components and node expander, only for every single node's content)\ntreeNodeWrapperTemplate - treeNodeTemplate + full customization over expander\ntreeNodeFullTemplate - treeNodeWrapperTemplate + full customization over how the node children display.\n\nDevelopment\nTo generate all *.js, *.d.ts and *.metadata.json files:\n$ npm run buildTo lint all *.ts files:\n$ npm run lintLicense\nMIT © e-cloud\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTreeModule\n\n\n\ncluster_NgxTreeModule_declarations\n\n\n\ncluster_NgxTreeModule_exports\n\n\n\n\nTreeLoadingComponent\n\nTreeLoadingComponent\n\n\n\nNgxTreeModule\n\nNgxTreeModule\n\nNgxTreeModule -->\n\nTreeLoadingComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeComponent\n\nTreeNodeComponent\n\nNgxTreeModule -->\n\nTreeNodeComponent->NgxTreeModule\n\n\n\n\n\nTreeComponent\n\nTreeComponent\n\nNgxTreeModule -->\n\nTreeComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeExpanderComponent\n\nTreeNodeExpanderComponent\n\nNgxTreeModule -->\n\nTreeNodeExpanderComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeWrapperComponent\n\nTreeNodeWrapperComponent\n\nNgxTreeModule -->\n\nTreeNodeWrapperComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeChildrenComponent\n\nTreeNodeChildrenComponent\n\nNgxTreeModule -->\n\nTreeNodeChildrenComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeContentComponent\n\nTreeNodeContentComponent\n\nNgxTreeModule -->\n\nTreeNodeContentComponent->NgxTreeModule\n\n\n\n\n\nTreeViewportComponent\n\nTreeViewportComponent\n\nNgxTreeModule -->\n\nTreeViewportComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeDropSlotComponent\n\nTreeNodeDropSlotComponent\n\nNgxTreeModule -->\n\nTreeNodeDropSlotComponent->NgxTreeModule\n\n\n\n\n\nTreeDragDirective\n\nTreeDragDirective\n\nNgxTreeModule -->\n\nTreeDragDirective->NgxTreeModule\n\n\n\n\n\nTreeDropDirective\n\nTreeDropDirective\n\nNgxTreeModule -->\n\nTreeDropDirective->NgxTreeModule\n\n\n\n\n\nTreeLoadingComponent \n\nTreeLoadingComponent \n\nTreeLoadingComponent  -->\n\nNgxTreeModule->TreeLoadingComponent \n\n\n\n\n\nTreeNodeComponent \n\nTreeNodeComponent \n\nTreeNodeComponent  -->\n\nNgxTreeModule->TreeNodeComponent \n\n\n\n\n\nTreeComponent \n\nTreeComponent \n\nTreeComponent  -->\n\nNgxTreeModule->TreeComponent \n\n\n\n\n\nTreeNodeExpanderComponent \n\nTreeNodeExpanderComponent \n\nTreeNodeExpanderComponent  -->\n\nNgxTreeModule->TreeNodeExpanderComponent \n\n\n\n\n\nTreeNodeWrapperComponent \n\nTreeNodeWrapperComponent \n\nTreeNodeWrapperComponent  -->\n\nNgxTreeModule->TreeNodeWrapperComponent \n\n\n\n\n\nTreeNodeChildrenComponent \n\nTreeNodeChildrenComponent \n\nTreeNodeChildrenComponent  -->\n\nNgxTreeModule->TreeNodeChildrenComponent \n\n\n\n\n\nTreeNodeContentComponent \n\nTreeNodeContentComponent \n\nTreeNodeContentComponent  -->\n\nNgxTreeModule->TreeNodeContentComponent \n\n\n\n\n\nTreeViewportComponent \n\nTreeViewportComponent \n\nTreeViewportComponent  -->\n\nNgxTreeModule->TreeViewportComponent \n\n\n\n\n\nTreeNodeDropSlotComponent \n\nTreeNodeDropSlotComponent \n\nTreeNodeDropSlotComponent  -->\n\nNgxTreeModule->TreeNodeDropSlotComponent \n\n\n\n\n\nTreeDragDirective \n\nTreeDragDirective \n\nTreeDragDirective  -->\n\nNgxTreeModule->TreeDragDirective \n\n\n\n\n\nTreeDropDirective \n\nTreeDropDirective \n\nTreeDropDirective  -->\n\nNgxTreeModule->TreeDropDirective \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        9 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.7.1 (2017-12-26)\n\n0.7.0 (2017-11-22)\nBug Fixes\n\ntype: remove unnecessary types and code (a775aad)\n\nFeatures\n\ndeps: upgrade deps to support Angular 5 (5936f8f)\n\n\n0.6.0 (2017-10-26)\nFeatures\n\nrxjs: upgrade rxjs and use its new lettable feature (e2d3abb)\n\nBREAKING CHANGES\n\nrxjs: previously we added the operatators to Observable's prototype, now we don't. This could raise some missing references error at the user end.\n\n\n0.5.3 (2017-10-09)\nBug Fixes\n\nsubscription: assign empty subscription to related variables (78afac1)\n\n\n0.5.2 (2017-10-09)\nBug Fixes\n\nfilter: correct the broken filter functionality (63674e2)\n\n\n0.5.1 (2017-09-25)\nBug Fixes\n\ntree-node: only display children when node has children (3e3fd7b)\n\n\n0.5.0 (2017-09-20)\nBug Fixes\n\nrefresh: ensure proper view update after nodes updated (dc6758b)\nviewport: fire initialized event when virtualScroll disabled (da5d86a)\n\nFeatures\n\nkeepNodesExpanded: support keep nodes expanded when data change (103b9b8)\n\n\n0.4.0 (2017-09-18)\nBug Fixes\n\nexpander: center the expander, optimize template and style (5e3be34)\noptions: ensure tree component has default data options (aa32c1b)\n\nFeatures\n\nactivateTarget: support specifying the activated node (02fa222)\nexpander-template: support custom template for tree expander (9158c38)\ntemplate-context: deprecate $implicit context for template context (5ef5498)\n\n\n0.3.4 (2017-09-15)\nBug Fixes\n\nngOutlet: add missing field for ngOutletContext (7023a8e)\n\n\n0.3.3 (2017-09-15)\nBug Fixes\n\ntree: correct the TreeDraggingTargetService module path (c9ddfef)\n\n\n0.3.2 (2017-09-15)\nBug Fixes\n\ntree: use correct modifier for template (a16b4cb)\n\n\n0.3.1 (2017-09-15)\nReverts\n\ntree: restore the treeDraggingTargetService injection (b2868bf)\n\n\n0.3.0 (2017-09-15)\nBug Fixes\n\nexports: use direct import for correct aot (06bd7a9)\n\nFeatures\n\ntree-node: support tree-node-full-template (4debcf5)\n\n\n0.2.2 (2017-09-14)\nBug Fixes\n\nBrowserModule: remove BrowserAnimationsModule as not for library (64027fb)\n\n\n0.2.1 (2017-09-14)\n\n0.2.0 (2017-09-14)\nFeatures\n\nexports: export most module for external reference (677284d)\n\nPerformance Improvements\n\ntree-node: avoid usage of function bind (abe0775)\n\n\n0.1.0 (2017-09-07)\nBug Fixes\n\nadd missing file (686acaf)\nmissing type for ngc (21a101e)\nexpander: stop expand event propagation as default (2b3f565)\nmemory-leak: ensure removed node has no ref to elementRef (aef71bf)\noptions: avoid reference error (86f2219)\nstyle: prevent wraping the node content (302b6fc)\n\nFeatures\n\nanimation: support animation and option to switch it on or off (6ed7b97)\ncore: set up code base (8e79fa0)\ndrag: add dragging target service (b82fc9e)\ndrag&drop: improve UX and performance (420967a)\ndrag&drop: support drag and drop feature (21a2e3c)\nfocusNode: support focusing a node from input with node id (a1f5cfb)\nlevelPadding: allow function as levelPadding for flexible style (acb8d68)\nmodel: emit sub-events before toggleExpander & loadingChildren (2e85611)\nmodel: refine the model layer (2c2a966)\nmodel: refine the model layer (2b51365)\nmodel: replace the object cache to map cache (dc20dfa)\nmodule: add moduleId for system.js (9a54282)\nscroll: support scrollIntoView either in virutal scroll or not (e2cc6d0)\ntree-node: redesign the drag&drop target and style (6efc4e4)\ntree-options: redesign options processing (13067d3)\nvirtual-scroll: leggy implementation of virtual-scroll feature (33ca365)\nvirtual-scroll: support disabling virtual scroll (6324459)\nvitual-scroll: simulate the scrollHeight with another way (4c9d403)\n\nPerformance Improvements\n\nmove changeable internal host bindings to parent template (785af75)\nvirtual-scroll: use a limit to end average node height collection (3bf532b)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n            \n                \n                    \n                        NgxTreeModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTreeModule.html":{"url":"modules/NgxTreeModule.html","title":"module - NgxTreeModule","body":"\n                   \n\n\n\n\n  Modules\n  NgxTreeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTreeModule\n\n\n\ncluster_NgxTreeModule_declarations\n\n\n\ncluster_NgxTreeModule_exports\n\n\n\n\nTreeLoadingComponent\n\nTreeLoadingComponent\n\n\n\nNgxTreeModule\n\nNgxTreeModule\n\nNgxTreeModule -->\n\nTreeLoadingComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeComponent\n\nTreeNodeComponent\n\nNgxTreeModule -->\n\nTreeNodeComponent->NgxTreeModule\n\n\n\n\n\nTreeComponent\n\nTreeComponent\n\nNgxTreeModule -->\n\nTreeComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeExpanderComponent\n\nTreeNodeExpanderComponent\n\nNgxTreeModule -->\n\nTreeNodeExpanderComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeWrapperComponent\n\nTreeNodeWrapperComponent\n\nNgxTreeModule -->\n\nTreeNodeWrapperComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeChildrenComponent\n\nTreeNodeChildrenComponent\n\nNgxTreeModule -->\n\nTreeNodeChildrenComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeContentComponent\n\nTreeNodeContentComponent\n\nNgxTreeModule -->\n\nTreeNodeContentComponent->NgxTreeModule\n\n\n\n\n\nTreeViewportComponent\n\nTreeViewportComponent\n\nNgxTreeModule -->\n\nTreeViewportComponent->NgxTreeModule\n\n\n\n\n\nTreeNodeDropSlotComponent\n\nTreeNodeDropSlotComponent\n\nNgxTreeModule -->\n\nTreeNodeDropSlotComponent->NgxTreeModule\n\n\n\n\n\nTreeDragDirective\n\nTreeDragDirective\n\nNgxTreeModule -->\n\nTreeDragDirective->NgxTreeModule\n\n\n\n\n\nTreeDropDirective\n\nTreeDropDirective\n\nNgxTreeModule -->\n\nTreeDropDirective->NgxTreeModule\n\n\n\n\n\nTreeLoadingComponent \n\nTreeLoadingComponent \n\nTreeLoadingComponent  -->\n\nNgxTreeModule->TreeLoadingComponent \n\n\n\n\n\nTreeNodeComponent \n\nTreeNodeComponent \n\nTreeNodeComponent  -->\n\nNgxTreeModule->TreeNodeComponent \n\n\n\n\n\nTreeComponent \n\nTreeComponent \n\nTreeComponent  -->\n\nNgxTreeModule->TreeComponent \n\n\n\n\n\nTreeNodeExpanderComponent \n\nTreeNodeExpanderComponent \n\nTreeNodeExpanderComponent  -->\n\nNgxTreeModule->TreeNodeExpanderComponent \n\n\n\n\n\nTreeNodeWrapperComponent \n\nTreeNodeWrapperComponent \n\nTreeNodeWrapperComponent  -->\n\nNgxTreeModule->TreeNodeWrapperComponent \n\n\n\n\n\nTreeNodeChildrenComponent \n\nTreeNodeChildrenComponent \n\nTreeNodeChildrenComponent  -->\n\nNgxTreeModule->TreeNodeChildrenComponent \n\n\n\n\n\nTreeNodeContentComponent \n\nTreeNodeContentComponent \n\nTreeNodeContentComponent  -->\n\nNgxTreeModule->TreeNodeContentComponent \n\n\n\n\n\nTreeViewportComponent \n\nTreeViewportComponent \n\nTreeViewportComponent  -->\n\nNgxTreeModule->TreeViewportComponent \n\n\n\n\n\nTreeNodeDropSlotComponent \n\nTreeNodeDropSlotComponent \n\nTreeNodeDropSlotComponent  -->\n\nNgxTreeModule->TreeNodeDropSlotComponent \n\n\n\n\n\nTreeDragDirective \n\nTreeDragDirective \n\nTreeDragDirective  -->\n\nNgxTreeModule->TreeDragDirective \n\n\n\n\n\nTreeDropDirective \n\nTreeDropDirective \n\nTreeDropDirective  -->\n\nNgxTreeModule->TreeDropDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ngx-tree/index.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TreeLoadingComponent\n                            \n                            \n                                TreeNodeComponent\n                            \n                            \n                                TreeComponent\n                            \n                            \n                                TreeNodeExpanderComponent\n                            \n                            \n                                TreeNodeWrapperComponent\n                            \n                            \n                                TreeNodeChildrenComponent\n                            \n                            \n                                TreeNodeContentComponent\n                            \n                            \n                                TreeViewportComponent\n                            \n                            \n                                TreeNodeDropSlotComponent\n                            \n                            \n                                TreeDragDirective\n                            \n                            \n                                TreeDropDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TreeLoadingComponent\n                            \n                            \n                                    TreeNodeComponent\n                            \n                            \n                                    TreeComponent\n                            \n                            \n                                    TreeNodeExpanderComponent\n                            \n                            \n                                    TreeNodeWrapperComponent\n                            \n                            \n                                    TreeNodeChildrenComponent\n                            \n                            \n                                    TreeNodeContentComponent\n                            \n                            \n                                    TreeViewportComponent\n                            \n                            \n                                    TreeNodeDropSlotComponent\n                            \n                            \n                                    TreeDragDirective\n                            \n                            \n                                    TreeDropDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common'\nimport { ModuleWithProviders, NgModule } from '@angular/core'\n\nimport { TreeLoadingComponent } from './components/tree-loading/tree-loading.component'\nimport { TreeNodeChildrenComponent } from './components/tree-node-children/tree-node-children.component'\nimport { TreeNodeContentComponent } from './components/tree-node-content/tree-node-content.component'\nimport { TreeNodeDropSlotComponent } from './components/tree-node-drop-slot/tree-node-drop-slot.component'\nimport { TreeNodeExpanderComponent } from './components/tree-node-expander/tree-node-expander.component'\nimport { TreeNodeWrapperComponent } from './components/tree-node-wrapper/tree-node-wrapper.component'\nimport { TreeNodeComponent } from './components/tree-node/tree-node.component'\nimport { TreeViewportComponent } from './components/tree-viewport/tree-viewport.component'\nimport { TreeComponent } from './components/tree/tree.component'\nimport { TreeDragDirective } from './directives/tree-drag.directive'\nimport { TreeDropDirective } from './directives/tree-drop.directive'\nimport { TreeDraggingTargetService } from './services/tree-dragging-target.service'\nimport { TreeVirtualScroll, VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA } from './services/tree-virtual-scroll.service'\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n        TreeLoadingComponent,\n        TreeNodeComponent,\n        TreeComponent,\n        TreeNodeExpanderComponent,\n        TreeNodeWrapperComponent,\n        TreeNodeChildrenComponent,\n        TreeNodeContentComponent,\n        TreeViewportComponent,\n        TreeNodeDropSlotComponent,\n        TreeDragDirective,\n        TreeDropDirective,\n    ],\n    exports: [\n        TreeLoadingComponent,\n        TreeNodeComponent,\n        TreeComponent,\n        TreeNodeExpanderComponent,\n        TreeNodeWrapperComponent,\n        TreeNodeChildrenComponent,\n        TreeNodeContentComponent,\n        TreeViewportComponent,\n        TreeNodeDropSlotComponent,\n        TreeDragDirective,\n        TreeDropDirective,\n    ],\n})\nexport class NgxTreeModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: NgxTreeModule,\n            providers: [\n                TreeDraggingTargetService,\n                {\n                    provide: VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA,\n                    useValue: 5,\n                },\n            ],\n        }\n    }\n}\n\nexport {\n    TreeLoadingComponent,\n    TreeNodeChildrenComponent,\n    TreeNodeContentComponent,\n    TreeNodeDropSlotComponent,\n    TreeNodeExpanderComponent,\n    TreeNodeWrapperComponent,\n    TreeNodeComponent,\n    TreeViewportComponent,\n    TreeComponent,\n    TreeDragDirective,\n    TreeDropDirective,\n    TreeDraggingTargetService,\n    TreeVirtualScroll,\n    VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA\n}\n\nexport * from './models/index'\nexport * from './constants/events'\nexport * from './constants/keys'\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeComponent.html":{"url":"components/TreeComponent.html","title":"component - TreeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/ngx-tree/components/tree/tree.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tree\n            \n\n            \n                styleUrls\n                tree.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emitterMap\n                            \n                            \n                                expanderTemplate\n                            \n                            \n                                loadingTemplate\n                            \n                            \n                                refreshTree\n                            \n                            \n                                root\n                            \n                            \n                                    Public\n                                treeDraggingTargetService\n                            \n                            \n                                treeModel\n                            \n                            \n                                treeNodeFullTemplate\n                            \n                            \n                                treeNodeTemplate\n                            \n                            \n                                treeNodeWrapperTemplate\n                            \n                            \n                                UIOptions\n                            \n                            \n                                viewportComponent\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                sizeChanged\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                activateTarget\n                            \n                            \n                                allowDrag\n                            \n                            \n                                allowDrop\n                            \n                            \n                                dataOptions\n                            \n                            \n                                enableAnimation\n                            \n                            \n                                focusTarget\n                            \n                            \n                                keepNodesExpanded\n                            \n                            \n                                levelPadding\n                            \n                            \n                                nodeClass\n                            \n                            \n                                nodes\n                            \n                            \n                                useVirtualScroll\n                            \n                        \n                    \n                \n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                addNode\n                            \n                            \n                                blur\n                            \n                            \n                                changeFilter\n                            \n                            \n                                collapse\n                            \n                            \n                                deactivate\n                            \n                            \n                                expand\n                            \n                            \n                                focus\n                            \n                            \n                                initialized\n                            \n                            \n                                loadChildren\n                            \n                            \n                                moveNode\n                            \n                            \n                                removeNode\n                            \n                            \n                                toggleExpander\n                            \n                        \n                    \n                \n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.ngx-tree\n                            \n                        \n                    \n                \n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                body: keydown\n                            \n                            \n                                body: mousedown\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(treeDraggingTargetService: TreeDraggingTargetService)\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:88\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      treeDraggingTargetService\n                                                      \n                                                                TreeDraggingTargetService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            activateTarget\n                        \n                        \n                            id of the node to be activated\n\n                              \n                                Type:    string\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:54\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            allowDrag\n                        \n                        \n                              \n                                Type:    boolean | IAllowDragFn\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:57\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            allowDrop\n                        \n                        \n                              \n                                Type:    boolean | IAllowDropFn\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:58\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            dataOptions\n                        \n                        \n                              \n                                Type:    TreeDataOptions\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:55\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            enableAnimation\n                        \n                        \n                            \n                              Default value: true\n                            \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:62\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            focusTarget\n                        \n                        \n                            id of the node to be focused on\n\n                              \n                                Type:    string\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:50\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            keepNodesExpanded\n                        \n                        \n                            \n                              Default value: false\n                            \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:63\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            levelPadding\n                        \n                        \n                              \n                                Type:    number | ILevelPaddingFn\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:59\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            nodeClass\n                        \n                        \n                              \n                                Type:    function\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:61\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            nodes\n                        \n                        \n                            source data\n\n                              \n                                Type:    TreeNode[]\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:46\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            useVirtualScroll\n                        \n                        \n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:60\n                                \n                            \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            \n                            activate\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:68\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            addNode\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:76\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            blur\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:71\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            changeFilter\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:75\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            collapse\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:66\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            deactivate\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:69\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            expand\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:65\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            focus\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:70\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            initialized\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:72\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            loadChildren\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:74\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            moveNode\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:73\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            removeNode\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:77\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            toggleExpander\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:67\n                                \n                            \n                \n            \n    \n\n    \n        HostBindings        \n                \n                    \n                        \n                            \n                            \n                                \n                                class.ngx-tree\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            class.ngx-tree:     \n    \n                        \n                    \n                        \n                            \n                                Default value : true\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:79\n                                \n                            \n    \n    \n                \n            \n    \n\n    \n        HostListeners        \n                \n                    \n                        \n                            \n                            \n                                \n                                body: keydown\n                                \n                                \n                            \n                        \n                    \n                        \n                            \n                                Arguments : '$event' \n                            \n                        \n                    \n                        \n    body: keydown($event: )\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:150\n                                \n                            \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                body: mousedown\n                                \n                                \n                            \n                        \n                    \n                        \n                            \n                                Arguments : '$event' \n                            \n                        \n                    \n                        \n    body: mousedown($event: )\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:165\n                                \n                            \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnChanges\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnChanges(changes: SimpleChanges)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:104\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      changes\n                                                      \n                                                              SimpleChanges\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnDestroy\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnDestroy()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:143\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                sizeChanged\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    sizeChanged()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:173\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                emitterMap\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            emitterMap:     EventsMap\n    \n                        \n                    \n                        \n                            \n                                Type :     EventsMap\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:38\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                expanderTemplate\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            expanderTemplate:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ContentChild\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:82\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                loadingTemplate\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            loadingTemplate:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ContentChild\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:81\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                refreshTree\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            refreshTree:     \n    \n                        \n                    \n                        \n                            \n                                Default value : false\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:41\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                root\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            root:     TreeNodeChildrenComponent\n    \n                        \n                    \n                        \n                            \n                                Type :     TreeNodeChildrenComponent\n    \n                            \n                        \n                        \n                            \n                                Decorators : ViewChild\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:88\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Public\n                                treeDraggingTargetService\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            treeDraggingTargetService:     TreeDraggingTargetService\n    \n                        \n                    \n                        \n                            \n                                Type :     TreeDraggingTargetService\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:90\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                treeModel\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            treeModel:     TreeModel\n    \n                        \n                    \n                        \n                            \n                                Type :     TreeModel\n    \n                            \n                        \n                        \n                            \n                                Default value : null\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:39\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                treeNodeFullTemplate\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            treeNodeFullTemplate:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ContentChild\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:85\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                treeNodeTemplate\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            treeNodeTemplate:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ContentChild\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:83\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                treeNodeWrapperTemplate\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            treeNodeWrapperTemplate:     TemplateRef\n    \n                        \n                    \n                        \n                            \n                                Type :     TemplateRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ContentChild\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:84\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                UIOptions\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            UIOptions:     TreeUIOptions\n    \n                        \n                    \n                        \n                            \n                                Type :     TreeUIOptions\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:40\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                viewportComponent\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            viewportComponent:     TreeViewportComponent\n    \n                        \n                    \n                        \n                            \n                                Type :     TreeViewportComponent\n    \n                            \n                        \n                        \n                            \n                                Decorators : ViewChild\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree/tree.component.ts:87\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import {\n    Component,\n    ContentChild,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core'\nimport 'element-closest'\nimport each from 'lodash-es/each'\nimport { EventsMap, TREE_EVENTS } from '../../constants/events'\nimport {\n    createTreeUIOptions,\n    IAllowDragFn,\n    IAllowDropFn,\n    ILevelPaddingFn,\n    TreeDataOptions,\n    TreeModel,\n    TreeNode,\n    TreeUIOptions,\n} from '../../models'\nimport { TreeDraggingTargetService } from '../../services/tree-dragging-target.service'\nimport { TreeNodeChildrenComponent } from '../tree-node-children/tree-node-children.component'\nimport { TreeViewportComponent } from '../tree-viewport/tree-viewport.component'\n\n@Component({\n    selector: 'ngx-tree',\n    templateUrl: './tree.component.html',\n    styleUrls: ['./tree.component.scss'],\n})\nexport class TreeComponent implements OnChanges, OnDestroy {\n    emitterMap: EventsMap\n    treeModel: TreeModel = null\n    UIOptions: TreeUIOptions\n    refreshTree = false\n\n    /**\n     * source data\n     */\n    @Input() nodes: TreeNode[]\n    /**\n     * id of the node to be focused on\n     */\n    @Input() focusTarget: string\n    /**\n     * id of the node to be activated\n     */\n    @Input() activateTarget: string\n    @Input() dataOptions: TreeDataOptions\n\n    @Input() allowDrag: boolean | IAllowDragFn\n    @Input() allowDrop: boolean | IAllowDropFn\n    @Input() levelPadding: number | ILevelPaddingFn\n    @Input() useVirtualScroll: boolean\n    @Input() nodeClass: (node: TreeNode) => string\n    @Input() enableAnimation = true\n    @Input() keepNodesExpanded = false\n\n    @Output() expand: EventEmitter = null\n    @Output() collapse: EventEmitter = null\n    @Output() toggleExpander: EventEmitter = null\n    @Output() activate: EventEmitter = null\n    @Output() deactivate: EventEmitter = null\n    @Output() focus: EventEmitter = null\n    @Output() blur: EventEmitter = null\n    @Output() initialized: EventEmitter = null\n    @Output() moveNode: EventEmitter = null\n    @Output() loadChildren: EventEmitter = null\n    @Output() changeFilter: EventEmitter = null\n    @Output() addNode: EventEmitter = null\n    @Output() removeNode: EventEmitter = null\n\n    @HostBinding('class.ngx-tree') className = true\n\n    @ContentChild('loadingTemplate') loadingTemplate: TemplateRef\n    @ContentChild('expanderTemplate') expanderTemplate: TemplateRef\n    @ContentChild('treeNodeTemplate') treeNodeTemplate: TemplateRef\n    @ContentChild('treeNodeWrapperTemplate') treeNodeWrapperTemplate: TemplateRef\n    @ContentChild('treeNodeFullTemplate') treeNodeFullTemplate: TemplateRef\n\n    @ViewChild('viewport') viewportComponent: TreeViewportComponent\n    @ViewChild('root') root: TreeNodeChildrenComponent\n\n    constructor(public treeDraggingTargetService: TreeDraggingTargetService) {\n        this.emitterMap = Object.keys(TREE_EVENTS).reduce((map, name) => {\n            if (!this.hasOwnProperty(name)) {\n                throw new TypeError(`Unmatched events: [${name}]`)\n            }\n\n            this[name] = map[name] = new EventEmitter()\n\n            return map\n        }, {}) as any\n\n        this.UIOptions = createTreeUIOptions()\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.nodes && changes.nodes.currentValue) {\n            const oldTreeModel = this.treeModel\n            this.treeModel = new TreeModel(changes.nodes.currentValue, this.emitterMap, this.dataOptions)\n            if (oldTreeModel && this.keepNodesExpanded) {\n                oldTreeModel.expandedNodes.forEach(node => {\n                    this.treeModel.setExpandedNodeInPlace(node)\n                })\n            }\n            if (!changes.nodes.isFirstChange()) {\n                this.refreshTree = true\n            }\n        } else if (changes.dataOptions && changes.dataOptions.currentValue && this.treeModel) {\n            this.treeModel.updateOptions(changes.dataOptions.currentValue)\n        }\n\n        if (changes.focusTarget && changes.focusTarget.currentValue && this.treeModel) {\n            this.treeModel.focusNode(this.focusTarget)\n        }\n\n        if (changes.activateTarget && changes.activateTarget.currentValue && this.treeModel) {\n            this.treeModel.activateNode(this.activateTarget)\n        }\n\n        if (changes.allowDrag\n            || changes.allowDrop\n            || changes.levelPadding\n            || changes.useVirtualScroll\n            || changes.nodeClass) {\n            this.UIOptions = createTreeUIOptions({\n                allowDrag: this.allowDrag,\n                allowDrop: this.allowDrop,\n                levelPadding: this.levelPadding,\n                useVirtualScroll: this.useVirtualScroll,\n                nodeClass: this.nodeClass,\n            })\n        }\n    }\n\n    ngOnDestroy() {\n        each(this.emitterMap, function (emitter) {\n            emitter.complete()\n        })\n    }\n\n    @HostListener('body: keydown', ['$event'])\n    onKeydown($event) {\n        if (!this.treeModel.isFocused) {\n            return\n        }\n\n        if (['input', 'textarea'].includes(document.activeElement.tagName.toLowerCase())) {\n            return\n        }\n\n        const focusedNode = this.treeModel.focusedNode\n\n        this.treeModel.performKeyAction(focusedNode, $event)\n    }\n\n    @HostListener('body: mousedown', ['$event'])\n    onMousedown($event) {\n        const insideClick = $event.target.closest('ngx-tree')\n\n        if (!insideClick) {\n            this.treeModel.setFocus(false)\n        }\n    }\n\n    sizeChanged() {\n        this.viewportComponent.setViewport()\n    }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeLoadingComponent.html":{"url":"components/TreeLoadingComponent.html","title":"component - TreeLoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeLoadingComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/ngx-tree/components/tree-loading/tree-loading.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tree-loading\n            \n\n            \n                styleUrls\n                tree-loading.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-loading.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                node\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.tree-loading\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            node\n                        \n                        \n                              \n                                Type:    TreeNode\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-loading/tree-loading.component.ts:12\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            template\n                        \n                        \n                              \n                                Type:    TemplateRef\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-loading/tree-loading.component.ts:11\n                                \n                            \n                \n            \n    \n\n\n    \n        HostBindings        \n                \n                    \n                        \n                            \n                            \n                                \n                                class.tree-loading\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            class.tree-loading:     \n    \n                        \n                    \n                        \n                            \n                                Default value : true\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-loading/tree-loading.component.ts:14\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, TemplateRef } from '@angular/core'\nimport { TreeNode } from '../../models'\n\n@Component({\n    selector: 'ngx-tree-loading',\n    templateUrl: './tree-loading.component.html',\n    styleUrls: ['./tree-loading.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TreeLoadingComponent {\n    @Input() template: TemplateRef\n    @Input() node: TreeNode\n\n    @HostBinding('class.tree-loading') className = true\n}\n\n    \n\n    \n        loading...\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'loading...'\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeLoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeChildrenComponent.html":{"url":"components/TreeNodeChildrenComponent.html","title":"component - TreeNodeChildrenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeChildrenComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/ngx-tree/components/tree-node-children/tree-node-children.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tree-node-children\n            \n\n            \n                styleUrls\n                tree-node-children.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-node-children.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                marginTop\n                            \n                            \n                                    Private\n                                scrollSub\n                            \n                            \n                                viewportNodes\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcMarginTop\n                            \n                            \n                                getViewportNodes\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                trackNode\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                disableMarginTop\n                            \n                            \n                                node\n                            \n                            \n                                options\n                            \n                            \n                                refreshTree\n                            \n                            \n                                templates\n                            \n                        \n                    \n                \n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @expandAnimation\n                            \n                            \n                                class.tree-children-no-padding\n                            \n                            \n                                class.tree-node-children\n                            \n                            \n                                style.margin-top.px\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(virtualScroll: TreeVirtualScroll)\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:44\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      virtualScroll\n                                                      \n                                                                TreeVirtualScroll\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            children\n                        \n                        \n                              \n                                Type:    TreeNode[]\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:36\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            disableMarginTop\n                        \n                        \n                            \n                              Default value: false\n                            \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:35\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            node\n                        \n                        \n                              \n                                Type:    TreeNode\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:33\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            options\n                        \n                        \n                              \n                                Type:    TreeUIOptions\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:32\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            refreshTree\n                        \n                        \n                            \n                              Default value: false\n                            \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:37\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            templates\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:34\n                                \n                            \n                \n            \n    \n\n\n    \n        HostBindings        \n                \n                    \n                        \n                            \n                            \n                                \n                                @expandAnimation\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            @expandAnimation:     \n    \n                        \n                    \n                        \n                            \n                                Default value : true\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:40\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                class.tree-children-no-padding\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            class.tree-children-no-padding:     \n    \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:50\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                class.tree-node-children\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            class.tree-node-children:     \n    \n                        \n                    \n                        \n                            \n                                Default value : true\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:42\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                style.margin-top.px\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            style.margin-top.px:     \n    \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:55\n                                \n                            \n    \n    \n                \n            \n    \n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                calcMarginTop\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    calcMarginTop()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:87\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                getViewportNodes\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    getViewportNodes(nodes: TreeNode[], undefined: )\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:97\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      nodes\n                                                      \n                                                              TreeNode[]\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     any\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnChanges\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnChanges(changes: SimpleChanges)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:72\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      changes\n                                                      \n                                                              SimpleChanges\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnDestroy\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnDestroy()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:79\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:59\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                trackNode\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    trackNode(index: , node: )\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:83\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      index\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      node\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     any\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                marginTop\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            marginTop:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 0\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:29\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Private\n                                scrollSub\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            scrollSub:     \n    \n                        \n                    \n                        \n                            \n                                Default value : Subscription.EMPTY\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:44\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                viewportNodes\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            viewportNodes:     TreeNode[]\n    \n                        \n                    \n                        \n                            \n                                Type :     TreeNode[]\n    \n                            \n                        \n                        \n                            \n                                Default value : []\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-children/tree-node-children.component.ts:30\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { animate, style, transition, trigger } from '@angular/animations'\nimport { Component, HostBinding, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, } from '@angular/core'\nimport { Subscription } from 'rxjs/Subscription'\nimport { TreeNode, TreeUIOptions } from '../../models'\nimport { TreeVirtualScroll } from '../../services/tree-virtual-scroll.service'\nimport { binarySearch } from '../../util'\n\n/** Time and timing curve for expansion panel animations. */\nexport const EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)'\n\n@Component({\n    selector: 'ngx-tree-node-children',\n    templateUrl: './tree-node-children.component.html',\n    styleUrls: ['./tree-node-children.component.scss'],\n    animations: [\n        trigger('expandAnimation', [\n            transition(':enter', [\n                style({ height: 0, overflow: 'hidden' }),\n                animate(EXPANSION_PANEL_ANIMATION_TIMING, style({ height: '*' })),\n            ]),\n            transition(':leave', [\n                style({ height: '*', overflow: 'hidden' }),\n                animate(EXPANSION_PANEL_ANIMATION_TIMING, style({ height: 0 })),\n            ]),\n        ]),\n    ],\n})\nexport class TreeNodeChildrenComponent implements OnInit, OnChanges, OnDestroy {\n    marginTop = 0\n    viewportNodes: TreeNode[] = []\n\n    @Input() options: TreeUIOptions\n    @Input() node: TreeNode\n    @Input() templates: any\n    @Input() disableMarginTop = false\n    @Input() children: TreeNode[]\n    @Input() refreshTree = false\n\n    @HostBinding('@expandAnimation')\n    expandAnimation = true\n\n    @HostBinding('class.tree-node-children') className = true\n\n    private scrollSub = Subscription.EMPTY\n\n    constructor(private virtualScroll: TreeVirtualScroll) {\n    }\n\n    @HostBinding('class.tree-children-no-padding')\n    get noPadding() {\n        return !this.options.levelPadding\n    }\n\n    @HostBinding('style.margin-top.px')\n    get marginTopAttr() {\n        return this.disableMarginTop ? 0 : this.marginTop\n    }\n\n    ngOnInit() {\n        this.viewportNodes = this.children\n        this.scrollSub = this.virtualScroll.waitForCollection((metrics) => {\n            if (this.node.treeModel && this.node.isExpanded) {\n                // here we directly access node's visibleChildren but not component's `children`\n                // property is, because it will only be updated on next lifecycle check, which is\n                // after the collection notification\n                this.viewportNodes = this.getViewportNodes(this.node.visibleChildren, metrics)\n                this.marginTop = this.calcMarginTop()\n            }\n        })\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if ('children' in changes && changes.children.currentValue) {\n            this.viewportNodes = this.virtualScroll.isDisabled() || this.refreshTree\n                ? this.children : this.viewportNodes\n        }\n    }\n\n    ngOnDestroy() {\n        this.scrollSub.unsubscribe()\n    }\n\n    trackNode(index, node) {\n        return node.id\n    }\n\n    calcMarginTop() {\n        const firstNode = this.viewportNodes && this.viewportNodes.length && this.viewportNodes[0]\n\n        // condition on root node is because the virtual root's self height is 0\n        return firstNode\n            ? Math.max(0, firstNode.position - firstNode.parent.position -\n                (firstNode.parent.isRoot ? 0 : this.virtualScroll.averageNodeHeight))\n            : 0\n    }\n\n    getViewportNodes(nodes: TreeNode[], { startPos, endPos }) {\n        if (!nodes || !nodes.length) {\n            return []\n        }\n\n        // Search for first node in the viewport using binary search\n        // Look for first node that starts after the beginning of the viewport (with buffer)\n        // Or that ends after the beginning of the viewport\n        const firstIndex = binarySearch(nodes, (node) => {\n            return startPos  {\n            return endPos \n    \n\n    \n        \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeChildrenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeComponent.html":{"url":"components/TreeNodeComponent.html","title":"component - TreeNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/ngx-tree/components/tree-node/tree-node.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tree-node\n            \n\n            \n                styleUrls\n                tree-node.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-node.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrag\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                node\n                            \n                            \n                                options\n                            \n                            \n                                templates\n                            \n                        \n                    \n                \n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.tree-node\n                            \n                        \n                    \n                \n                \n                    \n                        Accessors\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrop\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            index\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node/tree-node.component.ts:13\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            node\n                        \n                        \n                              \n                                Type:    TreeNode\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node/tree-node.component.ts:11\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            options\n                        \n                        \n                              \n                                Type:    TreeUIOptions\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node/tree-node.component.ts:12\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            templates\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node/tree-node.component.ts:14\n                                \n                            \n                \n            \n    \n\n\n    \n        HostBindings        \n                \n                    \n                        \n                            \n                            \n                                \n                                class.tree-node\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            class.tree-node:     \n    \n                        \n                    \n                        \n                            \n                                Default value : true\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node/tree-node.component.ts:16\n                                \n                            \n    \n    \n                \n            \n    \n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                allowDrag\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    allowDrag(node: TreeNode)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node/tree-node.component.ts:26\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                              TreeNode\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     any\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n\n    \n        \n            Accessors\n        \n            \n                \n                    \n                        \n                            \n                            allowDrop\n                        \n                    \n    \n                    \n                        \n                            getallowDrop()\n                        \n                    \n                                \n                                    \n                                        Defined in src/ngx-tree/components/tree-node/tree-node.component.ts:18\n                                    \n                                \n    \n                \n            \n    \n\n\n\n    \n        import { Component, HostBinding, Input } from '@angular/core'\nimport isFunction from 'lodash-es/isFunction'\nimport { TreeNode, TreeUIOptions } from '../../models'\n\n@Component({\n    selector: 'ngx-tree-node',\n    templateUrl: './tree-node.component.html',\n    styleUrls: ['./tree-node.component.scss'],\n})\nexport class TreeNodeComponent {\n    @Input() node: TreeNode\n    @Input() options: TreeUIOptions\n    @Input() index: number\n    @Input() templates: any\n\n    @HostBinding('class.tree-node') className = true\n\n    get allowDrop() {\n        return (node: TreeNode, $event?: DragEvent) => {\n            return isFunction(this.options.allowDrop)\n                ? this.options.allowDrop(node, { parent: this.node, index: node.index }, $event)\n                : this.options.allowDrop\n        }\n    }\n\n    allowDrag(node: TreeNode) {\n        return isFunction(this.options.allowDrag) ? this.options.allowDrag(node) : this.options.allowDrag\n    }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeContentComponent.html":{"url":"components/TreeNodeContentComponent.html","title":"component - TreeNodeContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeContentComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/ngx-tree/components/tree-node-content/tree-node-content.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tree-node-content\n            \n\n            \n                styleUrls\n                tree-node-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-node-content.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                node\n                            \n                            \n                                options\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.tree-node-content\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            index\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-content/tree-node-content.component.ts:13\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            node\n                        \n                        \n                              \n                                Type:    TreeNode\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-content/tree-node-content.component.ts:12\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            options\n                        \n                        \n                              \n                                Type:    TreeUIOptions\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-content/tree-node-content.component.ts:11\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            template\n                        \n                        \n                              \n                                Type:    TemplateRef\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-content/tree-node-content.component.ts:14\n                                \n                            \n                \n            \n    \n\n\n    \n        HostBindings        \n                \n                    \n                        \n                            \n                            \n                                \n                                class.tree-node-content\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            class.tree-node-content:     \n    \n                        \n                    \n                        \n                            \n                                Default value : true\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-content/tree-node-content.component.ts:15\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, TemplateRef } from '@angular/core'\nimport { TreeNode, TreeUIOptions } from '../../models'\n\n@Component({\n    selector: 'ngx-tree-node-content',\n    templateUrl: './tree-node-content.component.html',\n    styleUrls: ['./tree-node-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TreeNodeContentComponent {\n    @Input() options: TreeUIOptions\n    @Input() node: TreeNode\n    @Input() index: number\n    @Input() template: TemplateRef\n    @HostBinding('class.tree-node-content') className = true\n}\n\n    \n\n    \n        {{ node.displayField }}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ node.displayField }}'\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeDropSlotComponent.html":{"url":"components/TreeNodeDropSlotComponent.html","title":"component - TreeNodeDropSlotComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeDropSlotComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/ngx-tree/components/tree-node-drop-slot/tree-node-drop-slot.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tree-node-drop-slot\n            \n\n            \n                styleUrls\n                tree-node-drop-slot.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-node-drop-slot.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrop\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDrop\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dropIndex\n                            \n                            \n                                node\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            dropIndex\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-drop-slot/tree-node-drop-slot.component.ts:14\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            node\n                        \n                        \n                              \n                                Type:    TreeNode\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-drop-slot/tree-node-drop-slot.component.ts:12\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            options\n                        \n                        \n                              \n                                Type:    TreeUIOptions\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-drop-slot/tree-node-drop-slot.component.ts:13\n                                \n                            \n                \n            \n    \n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                onDrop\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    onDrop($event: )\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-drop-slot/tree-node-drop-slot.component.ts:24\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      $event\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                allowDrop\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            allowDrop:     \n    \n                        \n                    \n                        \n                            \n                                Default value : (element, $event) =>\n            isFunction(this.options.allowDrop)\n                ? this.options.allowDrop(element, {\n                    parent: this.node,\n                    index: this.dropIndex,\n                }, $event)\n                : false\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-drop-slot/tree-node-drop-slot.component.ts:16\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core'\nimport isFunction from 'lodash-es/isFunction'\nimport { TreeNode, TreeUIOptions } from '../../models'\n\n@Component({\n    selector: 'ngx-tree-node-drop-slot',\n    templateUrl: './tree-node-drop-slot.component.html',\n    styleUrls: ['./tree-node-drop-slot.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TreeNodeDropSlotComponent {\n    @Input() node: TreeNode\n    @Input() options: TreeUIOptions\n    @Input() dropIndex: number\n\n    allowDrop = (element, $event) =>\n        isFunction(this.options.allowDrop)\n            ? this.options.allowDrop(element, {\n                parent: this.node,\n                index: this.dropIndex,\n            }, $event)\n            : false\n\n    onDrop($event) {\n        this.node.mouseAction('drop', $event.event, {\n            from: $event.element,\n            to: { parent: this.node, index: this.dropIndex },\n        })\n    }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeDropSlotComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeExpanderComponent.html":{"url":"components/TreeNodeExpanderComponent.html","title":"component - TreeNodeExpanderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeExpanderComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/ngx-tree/components/tree-node-expander/tree-node-expander.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tree-node-expander\n            \n\n            \n                styleUrls\n                tree-node-expander.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-node-expander.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                node\n                            \n                            \n                                options\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.tree-node-expander\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            index\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-expander/tree-node-expander.component.ts:12\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            node\n                        \n                        \n                              \n                                Type:    TreeNode\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-expander/tree-node-expander.component.ts:11\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            options\n                        \n                        \n                              \n                                Type:    TreeUIOptions\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-expander/tree-node-expander.component.ts:10\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            template\n                        \n                        \n                              \n                                Type:    TemplateRef\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-expander/tree-node-expander.component.ts:13\n                                \n                            \n                \n            \n    \n\n\n    \n        HostBindings        \n                \n                    \n                        \n                            \n                            \n                                \n                                class.tree-node-expander\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            class.tree-node-expander:     \n    \n                        \n                    \n                        \n                            \n                                Default value : true\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-expander/tree-node-expander.component.ts:15\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n\n\n\n    \n        import { Component, HostBinding, Input, TemplateRef } from '@angular/core'\nimport { TreeNode, TreeUIOptions } from '../../models'\n\n@Component({\n    selector: 'ngx-tree-node-expander',\n    templateUrl: './tree-node-expander.component.html',\n    styleUrls: ['./tree-node-expander.component.scss'],\n})\nexport class TreeNodeExpanderComponent {\n    @Input() options: TreeUIOptions\n    @Input() node: TreeNode\n    @Input() index: number\n    @Input() template: TemplateRef\n\n    @HostBinding('class.tree-node-expander') className = true\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeExpanderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeWrapperComponent.html":{"url":"components/TreeNodeWrapperComponent.html","title":"component - TreeNodeWrapperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeWrapperComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/ngx-tree/components/tree-node-wrapper/tree-node-wrapper.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tree-node-wrapper\n            \n\n            \n                styleUrls\n                tree-node-wrapper.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-node-wrapper.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                node\n                            \n                            \n                                options\n                            \n                            \n                                templates\n                            \n                        \n                    \n                \n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.tree-node-wrapper\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(virtualScroll: TreeVirtualScroll, elementRef: ElementRef)\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-wrapper/tree-node-wrapper.component.ts:16\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      virtualScroll\n                                                      \n                                                                TreeVirtualScroll\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      elementRef\n                                                      \n                                                                ElementRef\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            index\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-wrapper/tree-node-wrapper.component.ts:13\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            node\n                        \n                        \n                              \n                                Type:    TreeNode\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-wrapper/tree-node-wrapper.component.ts:11\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            options\n                        \n                        \n                              \n                                Type:    TreeUIOptions\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-wrapper/tree-node-wrapper.component.ts:12\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            templates\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-wrapper/tree-node-wrapper.component.ts:14\n                                \n                            \n                \n            \n    \n\n\n    \n        HostBindings        \n                \n                    \n                        \n                            \n                            \n                                \n                                class.tree-node-wrapper\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            class.tree-node-wrapper:     \n    \n                        \n                    \n                        \n                            \n                                Default value : true\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-wrapper/tree-node-wrapper.component.ts:16\n                                \n                            \n    \n    \n                \n            \n    \n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngAfterViewInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngAfterViewInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-wrapper/tree-node-wrapper.component.ts:29\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnDestroy\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnDestroy()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-wrapper/tree-node-wrapper.component.ts:25\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-node-wrapper/tree-node-wrapper.component.ts:21\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, HostBinding, Input, OnDestroy, OnInit, } from '@angular/core'\nimport { TreeNode, TreeUIOptions } from '../../models'\nimport { TreeVirtualScroll } from '../../services/tree-virtual-scroll.service'\n\n@Component({\n    selector: 'ngx-tree-node-wrapper',\n    templateUrl: './tree-node-wrapper.component.html',\n    styleUrls: ['./tree-node-wrapper.component.scss'],\n})\nexport class TreeNodeWrapperComponent implements OnInit, OnDestroy, AfterViewInit {\n    @Input() node: TreeNode\n    @Input() options: TreeUIOptions\n    @Input() index: number\n    @Input() templates: any\n\n    @HostBinding('class.tree-node-wrapper') className = true\n\n    constructor(private virtualScroll: TreeVirtualScroll, private elementRef: ElementRef) {\n    }\n\n    ngOnInit() {\n        this.node.elementRef = this.elementRef\n    }\n\n    ngOnDestroy() {\n        this.node.elementRef = null\n    }\n\n    ngAfterViewInit() {\n        if (!this.virtualScroll.isDisabled() && !this.virtualScroll.hasEnoughNodeHeight) {\n            this.virtualScroll.reportNodeHeight(this.elementRef.nativeElement.getBoundingClientRect().height)\n        }\n    }\n}\n\n    \n\n    \n        \n  \n\n  \n  \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeWrapperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeViewportComponent.html":{"url":"components/TreeViewportComponent.html","title":"component - TreeViewportComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeViewportComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/ngx-tree/components/tree-viewport/tree-viewport.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                    \n                        TreeVirtualScroll\n                    \n                \n            \n\n\n            \n                selector\n                ngx-tree-viewport\n            \n\n            \n                styleUrls\n                tree-viewport.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-viewport.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isScrolling\n                            \n                            \n                                    Private\n                                lastScrollIntoViewTarget\n                            \n                            \n                                lastScrollTop\n                            \n                            \n                                    Private\n                                scrollIntoViewSub\n                            \n                            \n                                    Private\n                                scrollIntoViewTicking\n                            \n                            \n                                    Private\n                                scrollTimer\n                            \n                            \n                                    Private\n                                structureChangeSub\n                            \n                            \n                                    Private\n                                ticking\n                            \n                            \n                                    Public\n                                virtualScroll\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                disableEventsWhenScrolling\n                            \n                            \n                                initEventSubscription\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                scrollIntoViewAndTick\n                            \n                            \n                                setViewport\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                enable\n                            \n                            \n                                treeModel\n                            \n                        \n                    \n                \n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.tree-viewport\n                            \n                        \n                    \n                \n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                scroll\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(virtualScroll: TreeVirtualScroll, elementRef: ElementRef, renderer: Renderer2)\n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:45\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      virtualScroll\n                                                      \n                                                                TreeVirtualScroll\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      elementRef\n                                                      \n                                                                ElementRef\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      renderer\n                                                      \n                                                                Renderer2\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            enable\n                        \n                        \n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:34\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            treeModel\n                        \n                        \n                              \n                                Type:    TreeModel\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:36\n                                \n                            \n                \n            \n    \n\n\n    \n        HostBindings        \n                \n                    \n                        \n                            \n                            \n                                \n                                class.tree-viewport\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            class.tree-viewport:     \n    \n                        \n                    \n                        \n                            \n                                Default value : true\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:38\n                                \n                            \n    \n    \n                \n            \n    \n\n    \n        HostListeners        \n                \n                    \n                        \n                            \n                            \n                                \n                                scroll\n                                \n                                \n                            \n                        \n                    \n                        \n                            \n                                Arguments : '$event' \n                            \n                        \n                    \n                        \n    scroll(event: )\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:51\n                                \n                            \n    \n                \n            \n    \n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Private\n                                disableEventsWhenScrolling\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                            disableEventsWhenScrolling()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:193\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                initEventSubscription\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    initEventSubscription()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:155\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngAfterViewInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngAfterViewInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:121\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnChanges\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnChanges(changes: SimpleChanges)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:96\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      changes\n                                                      \n                                                              SimpleChanges\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnDestroy\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnDestroy()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:135\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:78\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                scrollIntoViewAndTick\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    scrollIntoViewAndTick(target: ScrollIntoViewTarget, scrollCallback: Function)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:144\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      target\n                                                      \n                                                              ScrollIntoViewTarget\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      scrollCallback\n                                                      \n                                                              Function\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                setViewport\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    setViewport()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:182\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isScrolling\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            isScrolling:     \n    \n                        \n                    \n                        \n                            \n                                Default value : false\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:32\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Private\n                                lastScrollIntoViewTarget\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            lastScrollIntoViewTarget:     ScrollIntoViewTarget\n    \n                        \n                    \n                        \n                            \n                                Type :     ScrollIntoViewTarget\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:42\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                lastScrollTop\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            lastScrollTop:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 0\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:31\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Private\n                                scrollIntoViewSub\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            scrollIntoViewSub:     \n    \n                        \n                    \n                        \n                            \n                                Default value : Subscription.EMPTY\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:44\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Private\n                                scrollIntoViewTicking\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            scrollIntoViewTicking:     \n    \n                        \n                    \n                        \n                            \n                                Default value : false\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:41\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Private\n                                scrollTimer\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            scrollTimer:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:45\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Private\n                                structureChangeSub\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            structureChangeSub:     \n    \n                        \n                    \n                        \n                            \n                                Default value : Subscription.EMPTY\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:43\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Private\n                                ticking\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            ticking:     \n    \n                        \n                    \n                        \n                            \n                                Default value : false\n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:40\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Public\n                                virtualScroll\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            virtualScroll:     TreeVirtualScroll\n    \n                        \n                    \n                        \n                            \n                                Type :     TreeVirtualScroll\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/ngx-tree/components/tree-viewport/tree-viewport.component.ts:47\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    HostBinding,\n    HostListener,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Renderer2,\n    SimpleChanges,\n} from '@angular/core'\nimport { merge } from 'rxjs/observable/merge'\nimport { Subscription } from 'rxjs/Subscription'\nimport { TREE_EVENTS } from '../../constants/events'\nimport { ScrollIntoViewTarget, TreeModel } from '../../models'\nimport { TreeVirtualScroll } from '../../services/tree-virtual-scroll.service'\n\nconst DISABLE_ON_SCROLL_CLASS = 'disable-events-on-scroll'\n\n@Component({\n    selector: 'ngx-tree-viewport',\n    templateUrl: './tree-viewport.component.html',\n    styleUrls: ['./tree-viewport.component.scss'],\n    providers: [TreeVirtualScroll],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TreeViewportComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n    lastScrollTop = 0\n    isScrolling = false\n\n    @Input() enable: boolean\n\n    @Input() treeModel: TreeModel\n\n    @HostBinding('class.tree-viewport') className = true\n\n    private ticking = false\n    private scrollIntoViewTicking = false\n    private lastScrollIntoViewTarget: ScrollIntoViewTarget\n    private structureChangeSub = Subscription.EMPTY\n    private scrollIntoViewSub = Subscription.EMPTY\n    private scrollTimer: number\n\n    constructor(public virtualScroll: TreeVirtualScroll, private elementRef: ElementRef, private renderer: Renderer2) {\n    }\n\n    @HostListener('scroll', ['$event'])\n    onScroll(event) {\n        this.disableEventsWhenScrolling()\n        if (this.virtualScroll.isDisabled()) {\n            return\n        }\n\n        const currentScrollTop = this.elementRef.nativeElement.scrollTop\n        if (Math.abs(currentScrollTop - this.lastScrollTop)  {\n                this.setViewport()\n                this.ticking = false\n            })\n            this.ticking = true\n        }\n\n        event.preventDefault()\n        event.stopPropagation()\n\n        return false\n    }\n\n    ngOnInit() {\n        this.scrollIntoViewSub = this.treeModel.scrollIntoView$.subscribe((target: ScrollIntoViewTarget) => {\n            if (target.node.elementRef) {\n                this.scrollIntoViewAndTick(target, () => {\n                    const lastTarget = this.lastScrollIntoViewTarget\n                    if (lastTarget.node.elementRef.nativeElement.scrollIntoViewIfNeeded) {\n                        lastTarget.node.elementRef.nativeElement.scrollIntoViewIfNeeded(lastTarget.scrollToMiddle)\n                    } else {\n                        lastTarget.node.elementRef.nativeElement.scrollIntoView({\n                            behavior: 'auto',\n                            block: 'end',\n                        })\n                    }\n                })\n            }\n        })\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if ('treeModel' in changes) {\n            this.virtualScroll.setDisabled(!this.enable)\n            if (this.virtualScroll.isDisabled()) {\n                if (!changes.treeModel.isFirstChange()) {\n                    this.treeModel.fireEvent({ eventName: TREE_EVENTS.initialized })\n                }\n\n                return\n            }\n\n            this.initEventSubscription()\n            this.virtualScroll.reCalcPositions(this.treeModel)\n\n            if (!changes.treeModel.isFirstChange()) {\n                // use setTimeout to avoid do calculation on old data,\n                // let the new data render first round\n                setTimeout(() => {\n                    this.setViewport()\n                    this.treeModel.fireEvent({ eventName: TREE_EVENTS.initialized })\n                })\n            }\n        }\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            if (this.virtualScroll.isDisabled()) {\n                this.treeModel.fireEvent({ eventName: TREE_EVENTS.initialized })\n\n                return\n            }\n\n            this.virtualScroll.reCalcPositions(this.treeModel)\n            this.setViewport()\n            this.treeModel.fireEvent({ eventName: TREE_EVENTS.initialized })\n        })\n    }\n\n    ngOnDestroy() {\n        if (this.structureChangeSub) {\n            this.structureChangeSub.unsubscribe()\n        }\n        if (this.scrollIntoViewSub) {\n            this.scrollIntoViewSub.unsubscribe()\n        }\n    }\n\n    scrollIntoViewAndTick(target: ScrollIntoViewTarget, scrollCallback: Function) {\n        this.lastScrollIntoViewTarget = target\n        if (!this.scrollIntoViewTicking) {\n            window.requestAnimationFrame(() => {\n                scrollCallback()\n                this.scrollIntoViewTicking = false\n            })\n            this.scrollIntoViewTicking = true\n        }\n    }\n\n    initEventSubscription() {\n        this.ngOnDestroy()\n        this.scrollIntoViewSub = this.treeModel.scrollIntoView$.subscribe((target: ScrollIntoViewTarget) => {\n            this.scrollIntoViewAndTick(target, () => {\n                const lastTarget = this.lastScrollIntoViewTarget\n                const targetOffset = this.virtualScroll.scrollIntoView(lastTarget.node, lastTarget.force, lastTarget.scrollToMiddle)\n\n                if (targetOffset) {\n                    this.elementRef.nativeElement.scrollTop = targetOffset\n                }\n            })\n        })\n\n        this.structureChangeSub = merge(\n            this.treeModel.events.expand,\n            this.treeModel.events.collapse,\n            this.treeModel.events.loadChildren,\n            this.treeModel.events.changeFilter,\n            this.treeModel.events.addNode,\n            this.treeModel.events.removeNode,\n        )\n            .subscribe(() => {\n                this.virtualScroll.reCalcPositions(this.treeModel)\n                this.setViewport()\n            })\n    }\n\n    setViewport() {\n        if (this.virtualScroll.isDisabled()) {\n            return\n        }\n\n        this.virtualScroll.adjustViewport(\n            this.elementRef.nativeElement.getBoundingClientRect(),\n            this.lastScrollTop,\n        )\n    }\n\n    private disableEventsWhenScrolling() {\n        if (this.scrollTimer) {\n            clearTimeout(this.scrollTimer)\n        } else {\n            this.isScrolling = true\n            this.renderer.addClass(this.elementRef.nativeElement, DISABLE_ON_SCROLL_CLASS)\n        }\n\n        this.scrollTimer = setTimeout(() => {\n            this.isScrolling = false\n            this.renderer.removeClass(this.elementRef.nativeElement, DISABLE_ON_SCROLL_CLASS)\n\n            this.scrollTimer = null\n        }, 120)\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TreeComponent', 'selector': 'ngx-tree'},{'name': 'TreeLoadingComponent', 'selector': 'ngx-tree-loading'},{'name': 'TreeNodeChildrenComponent', 'selector': 'ngx-tree-node-children'},{'name': 'TreeNodeComponent', 'selector': 'ngx-tree-node'},{'name': 'TreeNodeContentComponent', 'selector': 'ngx-tree-node-content'},{'name': 'TreeNodeDropSlotComponent', 'selector': 'ngx-tree-node-drop-slot'},{'name': 'TreeNodeExpanderComponent', 'selector': 'ngx-tree-node-expander'},{'name': 'TreeNodeWrapperComponent', 'selector': 'ngx-tree-node-wrapper'},{'name': 'TreeViewportComponent', 'selector': 'ngx-tree-viewport'}];\n    var DIRECTIVES = [{'name': 'TreeDragDirective', 'selector': '[ngxTreeDrag]'},{'name': 'TreeDropDirective', 'selector': '[ngxTreeDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeViewportComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TreeDragDirective.html":{"url":"directives/TreeDragDirective.html","title":"directive - TreeDragDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TreeDragDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/directives/tree-drag.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ngxTreeDrag]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        ngOnChanges\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        ngxTreeDrag\n                                    \n                                    \n                                        treeDragEnabled\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostListeners\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dragend\n                                    \n                                    \n                                        dragstart\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(el: ElementRef, renderer: Renderer2, treeDraggingTargetService: TreeDraggingTargetService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drag.directive.ts:12\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              el\n                                                              \n                                                                        ElementRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              renderer\n                                                              \n                                                                        Renderer2\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              treeDraggingTargetService\n                                                              \n                                                                        TreeDraggingTargetService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    ngxTreeDrag\n                                \n                                \n                                      \n                                        Type:    TreeNode\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drag.directive.ts:11\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    treeDragEnabled\n                                \n                                \n                                      \n                                        Type:    boolean\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drag.directive.ts:12\n                                        \n                                    \n                        \n                    \n            \n\n\n\n            \n                HostListeners        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dragend\n                                        \n                                        \n                                    \n                                \n                            \n                                \n                                    \n                                        Arguments : '$event' \n                                    \n                                \n                            \n                                \n            dragend(event: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drag.directive.ts:44\n                                        \n                                    \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dragstart\n                                        \n                                        \n                                    \n                                \n                            \n                                \n                                    \n                                        Arguments : '$event' \n                                    \n                                \n                            \n                                \n            dragstart(ev: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drag.directive.ts:22\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        ngOnChanges\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            ngOnChanges(changes: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drag.directive.ts:54\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              changes\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener, Input, OnChanges, Renderer2 } from '@angular/core'\nimport { TreeNode } from '../models'\nimport { TreeDraggingTargetService } from '../services/tree-dragging-target.service'\n\nconst DRAGGING_TARGET_CLASS = 'ngx-tree-dragging-target'\n\n@Directive({\n    selector: '[ngxTreeDrag]',\n})\nexport class TreeDragDirective implements OnChanges {\n    @Input('ngxTreeDrag') draggingTarget: TreeNode\n    @Input() treeDragEnabled: boolean\n\n    constructor(\n        private el: ElementRef,\n        private renderer: Renderer2,\n        private treeDraggingTargetService: TreeDraggingTargetService,\n    ) {\n    }\n\n    @HostListener('dragstart', ['$event'])\n    onDragStart(ev) {\n        // setting the data is required by firefox\n        ev.dataTransfer.setData('text', this.draggingTarget.id)\n        ev.dataTransfer.dropEffect = 'move'\n        this.renderer.addClass(this.el.nativeElement, DRAGGING_TARGET_CLASS)\n\n        this.treeDraggingTargetService.set(this.draggingTarget)\n        if (this.draggingTarget.mouseAction) {\n            this.draggingTarget.mouseAction('dragStart', ev)\n        }\n    }\n\n    /*@HostListener('drag', ['$event'])\n    onDrag(ev) {\n        if (this.draggingTarget.mouseAction) {\n            this.draggingTarget.mouseAction('drag', ev)\n        }\n\n        console.log('drag')\n    }*/\n\n    @HostListener('dragend', ['$event'])\n    onDragEnd(event) {\n        if (this.draggingTarget.mouseAction) {\n            this.draggingTarget.mouseAction('dragEnd', event)\n        }\n\n        this.renderer.removeClass(this.el.nativeElement, DRAGGING_TARGET_CLASS)\n\n        this.treeDraggingTargetService.set(null)\n    }\n\n    ngOnChanges(changes) {\n        if ('treeDragEnabled' in changes) {\n            this.renderer.setAttribute(this.el.nativeElement, 'draggable', this.treeDragEnabled ? 'true' : 'false')\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TreeDropDirective.html":{"url":"directives/TreeDropDirective.html","title":"directive - TreeDropDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TreeDropDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/directives/tree-drop.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ngxTreeDrop]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _allowDrop\n                                    \n                                    \n                                            Private\n                                        disabledClassAdded\n                                    \n                                    \n                                            Private\n                                        dragOverClassAdded\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        _stopEvent\n                                    \n                                    \n                                            Private\n                                        addClass\n                                    \n                                    \n                                            Private\n                                        addDisabledClass\n                                    \n                                    \n                                        allowDrop\n                                    \n                                    \n                                        ngOnDestroy\n                                    \n                                    \n                                            Private\n                                        removeClass\n                                    \n                                    \n                                            Private\n                                        removeDisabledClass\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        treeAllowDrop\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Outputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        ngxTreeDrop\n                                    \n                                    \n                                        treeDropDragEnter\n                                    \n                                    \n                                        treeDropDragLeave\n                                    \n                                    \n                                        treeDropDragOver\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostListeners\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dragenter\n                                    \n                                    \n                                        dragleave\n                                    \n                                    \n                                        dragover\n                                    \n                                    \n                                        drop\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        treeAllowDrop\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(el: ElementRef, renderer: Renderer2, treeDraggedElement: TreeDraggingTargetService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:30\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              el\n                                                              \n                                                                        ElementRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              renderer\n                                                              \n                                                                        Renderer2\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              treeDraggedElement\n                                                              \n                                                                        TreeDraggingTargetService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    treeAllowDrop\n                                \n                                \n                                \n                            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:21\n                                        \n                                    \n                        \n                    \n            \n\n            \n                Outputs\n                    \n                        \n                            \n                                \n                                    \n                                    ngxTreeDrop\n                                \n                                \n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:15\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    treeDropDragEnter\n                                \n                                \n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:18\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    treeDropDragLeave\n                                \n                                \n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:17\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    treeDropDragOver\n                                \n                                \n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:16\n                                        \n                                    \n                        \n                    \n            \n\n\n            \n                HostListeners        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dragenter\n                                        \n                                        \n                                    \n                                \n                            \n                                \n                                    \n                                        Arguments : '$event' \n                                    \n                                \n                            \n                                \n            dragenter($event: DragEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:62\n                                        \n                                    \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dragleave\n                                        \n                                        \n                                    \n                                \n                            \n                                \n                                    \n                                        Arguments : '$event' \n                                    \n                                \n                            \n                                \n            dragleave($event: DragEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:76\n                                        \n                                    \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        dragover\n                                        \n                                        \n                                    \n                                \n                            \n                                \n                                    \n                                        Arguments : '$event' \n                                    \n                                \n                            \n                                \n            dragover($event: DragEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:47\n                                        \n                                    \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        drop\n                                        \n                                        \n                                    \n                                \n                            \n                                \n                                    \n                                        Arguments : '$event' \n                                    \n                                \n                            \n                                \n            drop($event: DragEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:90\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _stopEvent\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    _stopEvent(event: Event)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:107\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              event\n                                                              \n                                                                      Event\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        addClass\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    addClass()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:114\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        addDisabledClass\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    addDisabledClass()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:124\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        allowDrop\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            allowDrop($event: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:103\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              $event\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        ngOnDestroy\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            ngOnDestroy()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:39\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        removeClass\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    removeClass()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:119\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        removeDisabledClass\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    removeDisabledClass()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:129\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        _allowDrop\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _allowDrop:     AllowDropPredicate\n            \n                                \n                            \n                                \n                                    \n                                        Type :     AllowDropPredicate\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : (element, $event) => true\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:112\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        disabledClassAdded\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    disabledClassAdded:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:30\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        dragOverClassAdded\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    dragOverClassAdded:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/directives/tree-drop.directive.ts:29\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    treeAllowDrop\n                                \n                            \n            \n                            \n                                \n                                    gettreeAllowDrop()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/directives/tree-drop.directive.ts:25\n                                            \n                                        \n            \n                            \n                                \n                                    settreeAllowDrop(allowDrop: )\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/directives/tree-drop.directive.ts:21\n                                            \n                                        \n                        \n                    \n            \n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostListener, Input, OnDestroy, Output, Renderer2 } from '@angular/core'\nimport isFunction from 'lodash-es/isFunction'\nimport { TreeNode } from '../models'\nimport { TreeDraggingTargetService } from '../services/tree-dragging-target.service'\n\nconst DRAG_OVER_CLASS = 'is-dragging-over'\nconst DRAG_DISABLED_CLASS = 'is-dragging-over-disabled'\n\nexport type AllowDropPredicate = (element: TreeNode, $event: MouseEvent) => boolean\n\n@Directive({\n    selector: '[ngxTreeDrop]',\n})\nexport class TreeDropDirective implements OnDestroy {\n    @Output('ngxTreeDrop') onDrop$ = new EventEmitter()\n    @Output('treeDropDragOver') onDragOver$ = new EventEmitter()\n    @Output('treeDropDragLeave') onDragLeave$ = new EventEmitter()\n    @Output('treeDropDragEnter') onDragEnter$ = new EventEmitter()\n\n    @Input()\n    set treeAllowDrop(allowDrop: boolean | AllowDropPredicate) {\n        this._allowDrop = isFunction(allowDrop) ? allowDrop : (element, $event) => allowDrop\n    }\n\n    get treeAllowDrop() {\n        return this._allowDrop\n    }\n\n    private dragOverClassAdded: boolean\n    private disabledClassAdded: boolean\n\n    constructor(\n        private el: ElementRef,\n        private renderer: Renderer2,\n        private treeDraggedElement: TreeDraggingTargetService,\n    ) {\n    }\n\n    ngOnDestroy() {\n        this.onDrop$.complete()\n        this.onDragEnter$.complete()\n        this.onDragLeave$.complete()\n        this.onDragOver$.complete()\n    }\n\n    @HostListener('dragover', ['$event'])\n    onDragOver($event: DragEvent) {\n        if (!this.allowDrop($event)) {\n            return\n        }\n\n        this.onDragOver$.emit({ event: $event, element: this.treeDraggedElement.get() })\n\n        if (!this.dragOverClassAdded) {\n            this.addClass()\n        }\n\n        this._stopEvent(event)\n    }\n\n    @HostListener('dragenter', ['$event'])\n    onDragEnter($event: DragEvent) {\n        if (!this.allowDrop($event)) {\n            this.addDisabledClass()\n\n            return\n        }\n        this.addClass()\n\n        this.onDragEnter$.emit({ event: $event, element: this.treeDraggedElement.get() })\n\n        this._stopEvent(event)\n    }\n\n    @HostListener('dragleave', ['$event'])\n    onDragLeave($event: DragEvent) {\n        if (!this.allowDrop($event)) {\n            this.removeDisabledClass()\n\n            return\n        }\n        this.removeClass()\n\n        this.onDragLeave$.emit({ event: $event, element: this.treeDraggedElement.get() })\n\n        this._stopEvent(event)\n    }\n\n    @HostListener('drop', ['$event'])\n    onDrop($event: DragEvent) {\n        if (!this.allowDrop($event)) {\n            return\n        }\n        this.removeClass()\n\n        this.onDrop$.emit({ event: $event, element: this.treeDraggedElement.get() })\n\n        this.treeDraggedElement.set(null)\n\n        this._stopEvent($event)\n    }\n\n    allowDrop($event) {\n        return this._allowDrop(this.treeDraggedElement.get(), $event)\n    }\n\n    private _stopEvent(event: Event): void {\n        event.preventDefault()\n        event.stopPropagation()\n    }\n\n    private _allowDrop: AllowDropPredicate = (element, $event) => true\n\n    private addClass() {\n        this.dragOverClassAdded = true\n        this.renderer.addClass(this.el.nativeElement, DRAG_OVER_CLASS)\n    }\n\n    private removeClass() {\n        this.dragOverClassAdded = false\n        this.renderer.removeClass(this.el.nativeElement, DRAG_OVER_CLASS)\n    }\n\n    private addDisabledClass() {\n        this.disabledClassAdded = true\n        this.renderer.addClass(this.el.nativeElement, DRAG_DISABLED_CLASS)\n    }\n\n    private removeDisabledClass() {\n        this.disabledClassAdded = false\n        this.renderer.removeClass(this.el.nativeElement, DRAG_DISABLED_CLASS)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TreeDraggingTargetService.html":{"url":"injectables/TreeDraggingTargetService.html","title":"injectable - TreeDraggingTargetService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TreeDraggingTargetService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/services/tree-dragging-target.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        _draggedElement\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        get\n                                    \n                                    \n                                        isDragging\n                                    \n                                    \n                                        set\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        get\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            get()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-dragging-target.service.ts:13\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        isDragging\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            isDragging()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-dragging-target.service.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        set\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            set(draggedElement: TreeNode)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-dragging-target.service.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              draggedElement\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        _draggedElement\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    _draggedElement:     TreeNode\n            \n                                \n                            \n                                \n                                    \n                                        Type :     TreeNode\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : null\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-dragging-target.service.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { Subject } from 'rxjs/Subject'\nimport { TreeNode } from '../models'\n\n@Injectable()\nexport class TreeDraggingTargetService extends Subject {\n    _draggedElement: TreeNode = null\n\n    set (draggedElement: TreeNode) {\n        this._draggedElement = draggedElement\n    }\n\n    get () {\n        return this._draggedElement\n    }\n\n    isDragging() {\n        return !!this.get()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TreeVirtualScroll.html":{"url":"injectables/TreeVirtualScroll.html","title":"injectable - TreeVirtualScroll","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TreeVirtualScroll\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/services/tree-virtual-scroll.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        averageNodeHeight\n                                    \n                                    \n                                            Private\n                                        collectionMonitor$\n                                    \n                                    \n                                            Private\n                                        currentViewport\n                                    \n                                    \n                                            Private\n                                        disabled\n                                    \n                                    \n                                        hasEnoughNodeHeight\n                                    \n                                    \n                                        id\n                                    \n                                    \n                                            Private\n                                        lastScrollTop\n                                    \n                                    \n                                            Private\n                                        nodeHeightAnalytics$\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        adjustViewport\n                                    \n                                    \n                                            Private\n                                        collectAverageNodeHeight\n                                    \n                                    \n                                            Private\n                                        getPositionAfter\n                                    \n                                    \n                                            Private\n                                        getPositionAfterNode\n                                    \n                                    \n                                        isDisabled\n                                    \n                                    \n                                        reCalcPositions\n                                    \n                                    \n                                        reportNodeHeight\n                                    \n                                    \n                                        scrollIntoView\n                                    \n                                    \n                                        setDisabled\n                                    \n                                    \n                                        waitForCollection\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(quota: number)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:24\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              quota\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        adjustViewport\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            adjustViewport(viewport: ClientRect, scrollTop: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:31\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              viewport\n                                                              \n                                                                      ClientRect\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              scrollTop\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        collectAverageNodeHeight\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    collectAverageNodeHeight()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:111\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        getPositionAfter\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getPositionAfter(nodes: TreeNode[], startPos: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:85\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              nodes\n                                                              \n                                                                      TreeNode[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              startPos\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     number\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        getPositionAfterNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getPositionAfterNode(node: TreeNode, startPos: number, isPrevShadow: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:98\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              startPos\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              isPrevShadow\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     number\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        isDisabled\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            isDisabled()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:69\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        reCalcPositions\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            reCalcPositions(treeModel: TreeModel)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:56\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              treeModel\n                                                              \n                                                                      TreeModel\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        reportNodeHeight\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            reportNodeHeight(data: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:52\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              data\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        scrollIntoView\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            scrollIntoView(node: TreeNode, force: boolean, scrollToMiddle: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:73\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              force\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              scrollToMiddle\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setDisabled\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setDisabled(isDisabled: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:65\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              isDisabled\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        waitForCollection\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            waitForCollection(observer: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:46\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              observer\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Subscription\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        averageNodeHeight\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    averageNodeHeight:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 0\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:16\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        collectionMonitor$\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    collectionMonitor$:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : new BehaviorSubject(null)\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:23\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        currentViewport\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    currentViewport:     ClientRect\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ClientRect\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:19\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        disabled\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    disabled:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:21\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        hasEnoughNodeHeight\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    hasEnoughNodeHeight:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:17\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        id\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    id:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:15\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        lastScrollTop\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    lastScrollTop:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 0\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:20\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        nodeHeightAnalytics$\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    nodeHeightAnalytics$:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : new Subject()\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/services/tree-virtual-scroll.service.ts:24\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken } from '@angular/core'\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject'\nimport { filter, scan } from 'rxjs/operators'\nimport { Subject } from 'rxjs/Subject'\nimport { Subscription } from 'rxjs/Subscription'\nimport { TreeModel, TreeNode } from '../models'\n\nconst Y_OFFSET_NODE_SIZE = 3\nlet id = 0\n\nexport const VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA = new InjectionToken('VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA')\n\n@Injectable()\nexport class TreeVirtualScroll {\n    id: number\n    averageNodeHeight = 0\n    hasEnoughNodeHeight = false\n\n    private currentViewport: ClientRect\n    private lastScrollTop = 0\n    private disabled = false\n\n    private collectionMonitor$ = new BehaviorSubject(null)\n    private nodeHeightAnalytics$ = new Subject()\n\n    constructor(@Inject(VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA) private quota: number) {\n        this.id = id++\n        this.collectAverageNodeHeight()\n    }\n\n    adjustViewport(viewport: ClientRect, scrollTop: number) {\n        this.lastScrollTop = scrollTop\n        this.currentViewport = viewport\n\n        const Y_OFFSET = this.averageNodeHeight * Y_OFFSET_NODE_SIZE\n\n        const startPos = scrollTop > Y_OFFSET ? scrollTop - Y_OFFSET : 0\n        const endPos = viewport.height + scrollTop + Y_OFFSET\n\n        this.collectionMonitor$.next({\n            startPos,\n            endPos,\n        })\n    }\n\n    waitForCollection(observer): Subscription {\n        return this.collectionMonitor$\n            .pipe(filter(val => !!val))\n            .subscribe(observer)\n    }\n\n    reportNodeHeight(data) {\n        this.nodeHeightAnalytics$.next(data)\n    }\n\n    reCalcPositions(treeModel: TreeModel) {\n        // here we reset the root nodes' positions to properly recalculate the positions\n        // after some actions like filter\n        treeModel.roots.forEach(node => {\n            node.position = 0\n        })\n        treeModel.virtualRoot.height = this.getPositionAfter(treeModel.getVisibleRoots(), 0)\n    }\n\n    setDisabled(isDisabled) {\n        this.disabled = isDisabled\n    }\n\n    isDisabled() {\n        return this.disabled\n    }\n\n    scrollIntoView(node: TreeNode, force: boolean, scrollToMiddle = true) {\n        if (force || // force scroll to node\n            node.position  this.lastScrollTop + this.currentViewport.height) { // node is below viewport\n\n            return scrollToMiddle ? node.position - this.currentViewport.height / 2 + this.averageNodeHeight : // scroll to middle\n                node.position // scroll to start\n        }\n\n        return null\n    }\n\n    private getPositionAfter(nodes: TreeNode[], startPos: number) {\n        let position = startPos\n\n        nodes.forEach((node) => {\n            node.position = position\n            // as node is hidden, it should play as a shadow node for it next sibling node for\n            // the proper position splitting\n            position = this.getPositionAfterNode(node, node.position, node.isHidden)\n        })\n\n        return position\n    }\n\n    private getPositionAfterNode(node: TreeNode, startPos: number, isPrevShadow = false) {\n        let position = isPrevShadow ? startPos : this.averageNodeHeight + startPos\n\n        if (node.children && node.isExpanded) { // TBD: consider loading component as well\n            position = this.getPositionAfter(node.visibleChildren, position)\n        }\n\n        // todo: here we assume the loading component's height is the same as averageNodeHeight\n        node.height = position - startPos + (node.loadingChildren ? this.averageNodeHeight : 0)\n\n        return position\n    }\n\n    private collectAverageNodeHeight() {\n        this.nodeHeightAnalytics$\n            .pipe(scan((acc, cur) => {\n                const lastAvg = acc[0] / acc[1]\n                const sum = cur + acc[0]\n                const count = acc[1] + 1\n                const avg = sum / count\n                if (avg / lastAvg > 1.5 || lastAvg / avg > 1.5) {\n                    return [cur, 1]\n                }\n\n                return [sum, count]\n            }, [0, 0]))\n            .subscribe(pair => {\n                this.averageNodeHeight = pair[0] / pair[1]\n                if (pair[1] >= this.quota) {\n                    this.hasEnoughNodeHeight = true\n                }\n            })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeModel.html":{"url":"classes/TreeModel.html","title":"class - TreeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/models/tree-model.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Private\n                                        activeNodeIds\n                                    \n                                    \n                                            Public\n                                        events\n                                    \n                                    \n                                            Private\n                                        expandedNodeIds\n                                    \n                                    \n                                            Private\n                                        focusedNodeId\n                                    \n                                    \n                                            Static\n                                        focusedTree\n                                    \n                                    \n                                            Private\n                                        hiddenNodeIds\n                                    \n                                    \n                                            Private\n                                        nodeCache\n                                    \n                                    \n                                            Public\n                                        options\n                                    \n                                    \n                                        roots\n                                    \n                                    \n                                            Readonly\n                                        scrollIntoView$\n                                    \n                                    \n                                            Readonly\n                                        virtualRoot\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        activateNode\n                                    \n                                    \n                                        addCache\n                                    \n                                    \n                                        clearFilter\n                                    \n                                    \n                                        collapseAll\n                                    \n                                    \n                                        expandAll\n                                    \n                                    \n                                            Private\n                                        filterNode\n                                    \n                                    \n                                        filterNodes\n                                    \n                                    \n                                        fireEvent\n                                    \n                                    \n                                        focusDrillDown\n                                    \n                                    \n                                        focusDrillUp\n                                    \n                                    \n                                        focusNextNode\n                                    \n                                    \n                                        focusNode\n                                    \n                                    \n                                        focusPreviousNode\n                                    \n                                    \n                                        getActiveNode\n                                    \n                                    \n                                        getFirstRoot\n                                    \n                                    \n                                        getLastRoot\n                                    \n                                    \n                                        getNodeBy\n                                    \n                                    \n                                        getNodeById\n                                    \n                                    \n                                        getNodeByPath\n                                    \n                                    \n                                        getVisibleRoots\n                                    \n                                    \n                                        isNodeActive\n                                    \n                                    \n                                        isNodeExpanded\n                                    \n                                    \n                                        isNodeFocused\n                                    \n                                    \n                                        isNodeHidden\n                                    \n                                    \n                                        moveNode\n                                    \n                                    \n                                        performKeyAction\n                                    \n                                    \n                                        scrollIntoView\n                                    \n                                    \n                                        setActiveNode\n                                    \n                                    \n                                        setExpandedNode\n                                    \n                                    \n                                        setExpandedNodeInPlace\n                                    \n                                    \n                                        setFocus\n                                    \n                                    \n                                        setFocusedNode\n                                    \n                                    \n                                        setHiddenNode\n                                    \n                                    \n                                            Private\n                                        setMultiActiveNodes\n                                    \n                                    \n                                            Private\n                                        setSingleActiveNode\n                                    \n                                    \n                                        subscribe\n                                    \n                                    \n                                        traverse\n                                    \n                                    \n                                        updateOptions\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        isFocused\n                                    \n                                    \n                                        isEmptyTree\n                                    \n                                    \n                                        focusedNode\n                                    \n                                    \n                                        expandedNodes\n                                    \n                                    \n                                        activeNodes\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(nodes: any[], events: EventsMap, options?: TreeDataOptions)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:83\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              nodes\n                                                              \n                                                                        any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              events\n                                                              \n                                                                        EventsMap\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              options\n                                                              \n                                                                        TreeDataOptions\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        activateNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            activateNode(id: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:292\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              id\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        addCache\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            addCache(node: TreeNode)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:106\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        clearFilter\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            clearFilter()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:431\n                                        \n                                    \n            \n                            \n                                \n                                        Marks all nodes isHidden = false\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        collapseAll\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            collapseAll()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:380\n                                        \n                                    \n            \n                            \n                                \n                                        collapse all nodes\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        expandAll\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            expandAll()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:373\n                                        \n                                    \n            \n                            \n                                \n                                        expand all nodes\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        filterNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    filterNode(ids: Map, node: TreeNode, filterFn: (node: TreeNode) => void, autoExpand: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:474\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              ids\n                                                              \n                                                                      Map\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              filterFn\n                                                              \n                                                                      function\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              autoExpand\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        filterNodes\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            filterNodes(filter: string | , autoShow: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:406\n                                        \n                                    \n            \n                            \n                                \n                                        Marks isHidden field in all nodes recursively according to the filter param.\n            If a node is marked visible, all of its ancestors will be marked visible as well.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              filter\n                                                              \n                                                                      string | \n                                                              \n                                                              \n                                                              \n                                                              either a string or a function.\n            In case it's a string, it will be searched case insensitively in the node's display attribute\n            In case it's a function, it will be passed the node, and should return true if the node should be visible,\n            false otherwise\n            \n                                                            \n                                                            \n                                                              autoShow\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              if true, make sure all nodes that passed the filter are visible\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        fireEvent\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            fireEvent(event: TreeEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:115\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              event\n                                                              \n                                                                      TreeEvent\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        focusDrillDown\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            focusDrillDown()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:339\n                                        \n                                    \n            \n                            \n                                \n                                        Focuses on the inner child of the current focused node (same as right arrow on an expanded node)\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        focusDrillUp\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            focusDrillUp()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:354\n                                        \n                                    \n            \n                            \n                                \n                                        Focuses on the parent of the current focused node (same as left arrow on a collapsed node)\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        focusNextNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            focusNextNode()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:317\n                                        \n                                    \n            \n                            \n                                \n                                        Focuses on the next node in the tree (same as down arrow)\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        focusNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            focusNode(id: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:303\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        focusPreviousNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            focusPreviousNode()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:328\n                                        \n                                    \n            \n                            \n                                \n                                        Focuses on the previous node in the tree (same as up arrow)\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getActiveNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getActiveNode()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:129\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                        \n                                        \n                                            Returns :     TreeNode\n            \n                                        \n                                            \n                                                Current active (selected) node. If multiple nodes are active - returns the first one.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getFirstRoot\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getFirstRoot(skipHidden: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:144\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              skipHidden\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              true or false - whether to skip hidden nodes\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                first root of the tree\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getLastRoot\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getLastRoot(skipHidden: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:152\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              skipHidden\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              true or false - whether to skip hidden nodes\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                last root of the tree\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getNodeBy\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getNodeBy(predicate: (node: TreeNode) => void, startNode: TreeNode)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:201\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              predicate\n                                                              \n                                                                      function\n                                                              \n                                                              \n                                                              \n                                                              \n            either an object or a function, used as a test condition on all nodes.\n            Could be every predicate that's supported by lodash's find method\n            \n            \n                                                            \n                                                            \n                                                              startNode\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              optional. Which node to start traversing from\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                First node that matches the predicate, if found - null otherwise\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getNodeById\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getNodeById(id: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:191\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              node ID to find\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                The node, if found - null otherwise\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getNodeByPath\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getNodeByPath(path: string | number[], startNode: TreeNode)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:162\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              path\n                                                              \n                                                                      string | number[]\n                                                              \n                                                              \n                                                              \n                                                              array of node IDs to be traversed respectively\n            \n                                                            \n                                                            \n                                                              startNode\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              optional. Which node to start traversing from\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     TreeNode\n            \n                                        \n                                            \n                                                The node, if found - null otherwise\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getVisibleRoots\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getVisibleRoots()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:136\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                All root nodes that pass the current filter\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        isNodeActive\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            isNodeActive(node: TreeNode)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:231\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        isNodeExpanded\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            isNodeExpanded(node: TreeNode)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:223\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        isNodeFocused\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            isNodeFocused(node: TreeNode)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:235\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        isNodeHidden\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            isNodeHidden(node: TreeNode)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:227\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        moveNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            moveNode(node: TreeNode, to: literal type)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:442\n                                        \n                                    \n            \n                            \n                                \n                                        moves a node from one location in the tree to another\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              location has a from and a to attributes, each has a node and index attributes.\n            The combination of node + index tells which node needs to be moved, and to where\n            \n                                                            \n                                                            \n                                                              to\n                                                              \n                                                                      literal type\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        performKeyAction\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            performKeyAction(node: TreeNode, $event: KeyboardEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:384\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              $event\n                                                              \n                                                                      KeyboardEvent\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        scrollIntoView\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            scrollIntoView(node: TreeNode, force: boolean, scrollToMiddle: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:468\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              force\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              scrollToMiddle\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setActiveNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setActiveNode(node: TreeNode, isActive: boolean, isMulti: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:239\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              isActive\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              isMulti\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setExpandedNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setExpandedNode(node: TreeNode, isExpanded: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:258\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              isExpanded\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setExpandedNodeInPlace\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setExpandedNodeInPlace(node: TreeNode, isExpanded: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:254\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              isExpanded\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setFocus\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setFocus(value: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:284\n                                        \n                                    \n            \n                            \n                                \n                                        Focuses or blurs the tree\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              value\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              true or false - whether to set focus or blur.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setFocusedNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setFocusedNode(node: TreeNode)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:276\n                                        \n                                    \n            \n                            \n                                \n                                        Set focus on a node\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setHiddenNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setHiddenNode(node: TreeNode, isHidden: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:268\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              isHidden\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        setMultiActiveNodes\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    setMultiActiveNodes(node: TreeNode, active: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:520\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              active\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        setSingleActiveNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    setSingleActiveNode(node: TreeNode, active: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:505\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              active\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        subscribe\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            subscribe(eventName: string, fn: Observer)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:121\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              eventName\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              fn\n                                                              \n                                                                      Observer\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        traverse\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            traverse(fn: (node: TreeNode) => void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:288\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fn\n                                                              \n                                                                      function\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        updateOptions\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            updateOptions(options: TreeDataOptions)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:110\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              options\n                                                              \n                                                                      TreeDataOptions\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        activeNodeIds\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    activeNodeIds:     Map\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Map\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Map()\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:81\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        events\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    events:     EventsMap\n            \n                                \n                            \n                                \n                                    \n                                        Type :     EventsMap\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:87\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        expandedNodeIds\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    expandedNodeIds:     Map\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Map\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Map()\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:80\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        focusedNodeId\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    focusedNodeId:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : null\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:79\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Static\n                                        focusedTree\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    focusedTree:     TreeModel\n            \n                                \n                            \n                                \n                                    \n                                        Type :     TreeModel\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : null\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:24\n                                        \n                                    \n            \n                            \n                                \n                                    static cache for recording the tree model while using multiple tree component in same container.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        hiddenNodeIds\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    hiddenNodeIds:     Map\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Map\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Map()\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:82\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        nodeCache\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    nodeCache:     Map\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Map\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Map()\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:83\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        options\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    options:     TreeDataOptions\n            \n                                \n                            \n                                \n                                    \n                                        Type :     TreeDataOptions\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:91\n                                        \n                                    \n            \n                            \n                                \n                                    Options that are passed to the tree component\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        roots\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    roots:     TreeNode[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     TreeNode[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:29\n                                        \n                                    \n            \n                            \n                                \n                                    All root nodes, it will have one item if a user input a single root tree.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        scrollIntoView$\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    scrollIntoView$:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subject\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : new Subject()\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:34\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        virtualRoot\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    virtualRoot:     TreeNode\n            \n                                \n                            \n                                \n                                    \n                                        Type :     TreeNode\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:33\n                                        \n                                    \n            \n                            \n                                \n                                    a tree node created internally to represent the root node of input data\n            \n                                \n                            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    isFocused\n                                \n                            \n            \n                            \n                                \n                                    getisFocused()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-model.ts:39\n                                            \n                                        \n                                \n                                    \n                                            Is the tree currently focused\n            \n            \n                                    \n                                \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    isEmptyTree\n                                \n                            \n            \n                            \n                                \n                                    getisEmptyTree()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-model.ts:46\n                                            \n                                        \n                                \n                                    \n                                            if the tree is empty\n            \n            \n                                    \n                                \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    focusedNode\n                                \n                            \n            \n                            \n                                \n                                    getfocusedNode()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-model.ts:53\n                                            \n                                        \n                                \n                                    \n                                            Current focused node\n            \n            \n                                    \n                                \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    expandedNodes\n                                \n                            \n            \n                            \n                                \n                                    getexpandedNodes()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-model.ts:60\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    activeNodes\n                                \n                            \n            \n                            \n                                \n                                    getactiveNodes()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-model.ts:71\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import compact from 'lodash-es/compact'\nimport find from 'lodash-es/find'\nimport first from 'lodash-es/first'\nimport isFunction from 'lodash-es/isFunction'\nimport isString from 'lodash-es/isString'\nimport last from 'lodash-es/last'\nimport { Observer } from 'rxjs/Observer'\nimport { Subject } from 'rxjs/Subject'\nimport { EventsMap, TREE_EVENTS } from '../constants/events'\nimport { TreeEvent } from './events'\nimport { TreeNode } from './tree-node'\nimport { createTreeDataOptions, TreeDataOptions } from './tree-options'\n\nexport interface ScrollIntoViewTarget {\n    node: TreeNode\n    force: boolean\n    scrollToMiddle: boolean\n}\n\nexport class TreeModel {\n    /**\n     * static cache for recording the tree model while using multiple tree component in same container.\n     */\n    static focusedTree: TreeModel = null\n\n    /**\n     * All root nodes, it will have one item if a user input a single root tree.\n     */\n    roots: TreeNode[]\n    /**\n     * a tree node created internally to represent the root node of input data\n     */\n    readonly virtualRoot: TreeNode\n    readonly scrollIntoView$: Subject = new Subject()\n\n    /**\n     * Is the tree currently focused\n     */\n    get isFocused() {\n        return TreeModel.focusedTree === this\n    }\n\n    /**\n     * if the tree is empty\n     */\n    get isEmptyTree() {\n        return this.roots && this.roots.length === 0\n    }\n\n    /**\n     * Current focused node\n     */\n    get focusedNode() {\n        return this.focusedNodeId ? this.getNodeById(this.focusedNodeId) : null\n    }\n\n    /**\n     * @returns Current expanded nodes\n     */\n    get expandedNodes(): TreeNode[] {\n        const nodes = Array.from(this.expandedNodeIds.keys())\n            .filter((id) => this.expandedNodeIds.get(id))\n            .map((id) => this.getNodeById(id))\n\n        return compact(nodes)\n    }\n\n    /**\n     * @returns Current active (selected) nodes\n     */\n    get activeNodes(): TreeNode[] {\n        const nodes = Array.from(this.activeNodeIds.keys())\n            .filter((id) => this.activeNodeIds.get(id))\n            .map((id) => this.nodeCache.get(id))\n\n        return compact(nodes)\n    }\n\n    private focusedNodeId: string = null\n    private expandedNodeIds: Map = new Map()\n    private activeNodeIds: Map = new Map()\n    private hiddenNodeIds: Map = new Map()\n    private nodeCache: Map = new Map()\n\n    constructor(\n        private nodes: any[],\n        public events: EventsMap,\n        /**\n         * Options that are passed to the tree component\n         */\n        public options?: TreeDataOptions,\n    ) {\n        this.options = createTreeDataOptions(options)\n        const virtualRootConfig = {\n            virtual: true,\n            // todo: determine to use fixed children field later\n            [this.options.childrenField]: this.nodes,\n        }\n\n        this.virtualRoot = new TreeNode(virtualRootConfig, null, this, 0)\n        this.setExpandedNodeInPlace(this.virtualRoot)\n\n        this.roots = this.virtualRoot.children\n    }\n\n    addCache(node: TreeNode) {\n        this.nodeCache.set(node.id, node)\n    }\n\n    updateOptions(options: TreeDataOptions) {\n        this.options = options\n    }\n\n    // events\n    fireEvent(event: TreeEvent) {\n        // event.treeModel = this\n\n        this.events[event.eventName].emit(event)\n    }\n\n    subscribe(eventName: string, fn: Observer) {\n        return this.events[eventName].subscribe(fn)\n    }\n\n    // getters\n    /**\n     * @returns Current active (selected) node. If multiple nodes are active - returns the first one.\n     */\n    getActiveNode(): TreeNode {\n        return this.activeNodes[0]\n    }\n\n    /**\n     * @returns All root nodes that pass the current filter\n     */\n    getVisibleRoots() {\n        return this.virtualRoot.visibleChildren\n    }\n\n    /**\n     * @param skipHidden  true or false - whether to skip hidden nodes\n     * @returns      first root of the tree\n     */\n    getFirstRoot(skipHidden = false) {\n        return first(skipHidden ? this.getVisibleRoots() : this.roots)\n    }\n\n    /**\n     * @param skipHidden  true or false - whether to skip hidden nodes\n     * @returns      last root of the tree\n     */\n    getLastRoot(skipHidden = false) {\n        return last(skipHidden ? this.getVisibleRoots() : this.roots)\n    }\n\n    // locating nodes\n    /**\n     * @param     path  array of node IDs to be traversed respectively\n     * @param     startNode  optional. Which node to start traversing from\n     * @returns   The node, if found - null otherwise\n     */\n    getNodeByPath(path: (string | number)[], startNode: TreeNode = null): TreeNode {\n        if (!path) {\n            return null\n        }\n\n        startNode = startNode || this.virtualRoot\n\n        if (path.length === 0) {\n            return startNode\n        }\n\n        if (!startNode.children) {\n            return null\n        }\n\n        const childId = path.shift()\n        const childNode = find(startNode.children, { id: childId })\n\n        if (!childNode) {\n            return null\n        }\n\n        return this.getNodeByPath(path, childNode)\n    }\n\n    /**\n     * @param     id  node ID to find\n     * @returns   The node, if found - null otherwise\n     */\n    getNodeById(id: string) {\n        return this.nodeCache.get(id)\n    }\n\n    /**\n     * @param     predicate - either an object or a function, used as a test condition on all nodes.\n     *            Could be every predicate that's supported by lodash's `find` method\n     * @param     startNode  optional. Which node to start traversing from\n     * @returns   First node that matches the predicate, if found - null otherwise\n     */\n    getNodeBy(predicate: (node: TreeNode) => boolean, startNode: TreeNode = null) {\n        // todo: refactor to a loop\n        startNode = startNode || this.virtualRoot\n\n        if (!startNode.children) {\n            return null\n        }\n\n        const found = find(startNode.children, predicate)\n\n        if (found) { // found in children\n            return found\n        } else { // look in children's children\n            for (const child of startNode.children) {\n                const foundInChildren = this.getNodeBy(predicate, child)\n                if (foundInChildren) {\n                    return foundInChildren\n                }\n            }\n        }\n    }\n\n    isNodeExpanded(node: TreeNode) {\n        return !!this.expandedNodeIds.get(node.id)\n    }\n\n    isNodeHidden(node: TreeNode) {\n        return !!this.hiddenNodeIds.get(node.id)\n    }\n\n    isNodeActive(node: TreeNode) {\n        return !!this.activeNodeIds.get(node.id)\n    }\n\n    isNodeFocused(node: TreeNode) {\n        return this.focusedNode === node\n    }\n\n    setActiveNode(node: TreeNode, isActive: boolean, isMulti = false) {\n        if (isMulti) {\n            this.setMultiActiveNodes(node, isActive)\n        } else {\n            this.setSingleActiveNode(node, isActive)\n        }\n\n        if (isActive) {\n            node.focus()\n            this.fireEvent({ eventName: TREE_EVENTS.activate, node })\n        } else {\n            this.fireEvent({ eventName: TREE_EVENTS.deactivate, node })\n        }\n    }\n\n    setExpandedNodeInPlace(node: TreeNode, isExpanded = true) {\n        this.expandedNodeIds.set(node.id, isExpanded)\n    }\n\n    setExpandedNode(node: TreeNode, isExpanded = true) {\n        this.expandedNodeIds.set(node.id, isExpanded)\n        if (isExpanded) {\n            this.fireEvent({ eventName: TREE_EVENTS.expand, node })\n        } else {\n            this.fireEvent({ eventName: TREE_EVENTS.collapse, node })\n        }\n        this.fireEvent({ eventName: TREE_EVENTS.toggleExpander, node, isExpanded })\n    }\n\n    setHiddenNode(node: TreeNode, isHidden = true) {\n        this.hiddenNodeIds.set(node.id, isHidden)\n    }\n\n    /**\n     * Set focus on a node\n     * @param node\n     */\n    setFocusedNode(node: TreeNode) {\n        this.focusedNodeId = node ? node.id : null\n    }\n\n    /**\n     * Focuses or blurs the tree\n     * @param value  true or false - whether to set focus or blur.\n     */\n    setFocus(value: boolean) {\n        TreeModel.focusedTree = value ? this : null\n    }\n\n    traverse(fn: (node: TreeNode) => any) {\n        this.roots.forEach((root) => root.traverse(fn))\n    }\n\n    activateNode(id) {\n        const target = this.getNodeById(id)\n        if (target) {\n            target.setActiveAndVisible()\n\n            return true\n        }\n\n        return false\n    }\n\n    focusNode(id: string) {\n        const target = this.getNodeById(id)\n        if (target) {\n            target.focus()\n\n            return true\n        }\n\n        return false\n    }\n\n    /**\n     * Focuses on the next node in the tree (same as down arrow)\n     */\n    focusNextNode() {\n        const previousNode = this.focusedNode\n        const nextNode = previousNode ? previousNode.findNextNode(true, true) : this.getFirstRoot(true)\n        if (nextNode) {\n            nextNode.focus()\n        }\n    }\n\n    /**\n     * Focuses on the previous node in the tree (same as up arrow)\n     */\n    focusPreviousNode() {\n        const previousNode = this.focusedNode\n        const nextNode = previousNode ? previousNode.findPreviousNode(true) : this.getLastRoot(true)\n        if (nextNode) {\n            nextNode.focus()\n        }\n    }\n\n    /**\n     * Focuses on the inner child of the current focused node (same as right arrow on an expanded node)\n     */\n    focusDrillDown() {\n        const previousNode = this.focusedNode\n        if (previousNode && previousNode.isCollapsed && previousNode.hasChildren) {\n            previousNode.toggleExpanded()\n        } else {\n            const nextNode = previousNode ? previousNode.getFirstChild(true) : this.getFirstRoot(true)\n            if (nextNode) {\n                nextNode.focus()\n            }\n        }\n    }\n\n    /**\n     * Focuses on the parent of the current focused node (same as left arrow on a collapsed node)\n     */\n    focusDrillUp() {\n        const previousNode = this.focusedNode\n        if (!previousNode) {\n            return\n        }\n\n        if (previousNode.isExpanded) {\n            previousNode.toggleExpanded()\n        } else {\n            const nextNode = previousNode.parent\n            if (nextNode) {\n                nextNode.focus()\n            }\n        }\n    }\n\n    /**\n     * expand all nodes\n     */\n    expandAll() {\n        this.roots.forEach((root) => root.expandAll())\n    }\n\n    /**\n     * collapse all nodes\n     */\n    collapseAll() {\n        this.roots.forEach((root) => root.collapseAll())\n    }\n\n    performKeyAction(node: TreeNode, $event: KeyboardEvent) {\n        // todo: the keyCode is deprecated on MDN, replace it some day\n        const action = this.options.actionMapping.keys[$event.keyCode]\n        if (action) {\n            $event.preventDefault()\n            action(this, node, $event)\n\n            return true\n        } else {\n            return false\n        }\n    }\n\n    /**\n     * Marks isHidden field in all nodes recursively according to the filter param.\n     * If a node is marked visible, all of its ancestors will be marked visible as well.\n     * @param filter  either a string or a function.\n     *   In case it's a string, it will be searched case insensitively in the node's display attribute\n     *   In case it's a function, it will be passed the node, and should return true if the node should be visible,\n     *     false otherwise\n     * @param autoShow  if true, make sure all nodes that passed the filter are visible\n     */\n    filterNodes(filter: string | ((node: TreeNode) => boolean), autoShow = true) {\n        let filterFn\n\n        if (!filter) {\n            return this.clearFilter()\n        }\n\n        // support function and string filter\n        if (isString(filter)) {\n            filterFn = (node) => node.displayField.toLowerCase().includes(filter.toLowerCase())\n        } else if (isFunction(filter)) {\n            filterFn = filter\n        } else {\n            throw new TypeError(`Don't know what to do with filter: ${filter}. It should be either a string or function`)\n        }\n\n        const ids = new Map()\n        this.roots.forEach((node) => this.filterNode(ids, node, filterFn, autoShow))\n        this.hiddenNodeIds = ids\n        this.fireEvent({ eventName: TREE_EVENTS.changeFilter })\n    }\n\n    /**\n     * Marks all nodes isHidden = false\n     */\n    clearFilter() {\n        this.hiddenNodeIds = new Map()\n        this.fireEvent({ eventName: TREE_EVENTS.changeFilter })\n    }\n\n    /**\n     * moves a node from one location in the tree to another\n     * @param node location has a from and a to attributes, each has a node and index attributes.\n     * The combination of node + index tells which node needs to be moved, and to where\n     * @param to\n     */\n    moveNode(node: TreeNode, to: { parent: TreeNode, index: number, dropOnNode: boolean }) {\n        const fromIndex = node.index\n        const fromParent = node.parent\n\n        if (!canMoveNode(node, fromIndex, to)) {\n            return\n        }\n\n        node.remove()\n\n        // Compensate for index if already removed from parent:\n        const toIndex = (fromParent === to.parent && to.index > fromIndex) ? to.index - 1 : to.index\n\n        if (to.dropOnNode) {\n            to.parent.appendChild(node.data)\n        } else {\n            to.parent.addChild(node.data, toIndex)\n        }\n\n        this.fireEvent({\n            eventName: TREE_EVENTS.moveNode,\n            node,\n            to: { parent: to.parent.data, index: toIndex },\n        })\n    }\n\n    scrollIntoView(node: TreeNode, force: boolean, scrollToMiddle: boolean) {\n        this.scrollIntoView$.next({\n            node, force, scrollToMiddle,\n        })\n    }\n\n    private filterNode(\n        ids: Map,\n        node: TreeNode,\n        filterFn: (node: TreeNode) => boolean,\n        autoExpand: boolean,\n    ) {\n        // if node passes function then it's visible\n        let isVisible = filterFn(node)\n\n        if (node.children) {\n            // if one of node's children passes filter then this node is also visible\n            node.children.forEach((child) => {\n                if (this.filterNode(ids, child, filterFn, autoExpand)) {\n                    isVisible = true\n                }\n            })\n        }\n\n        // mark node as hidden\n        if (!isVisible) {\n            ids.set(node.id, true)\n        }\n\n        // auto expand parents to make sure the filtered nodes are visible\n        if (autoExpand && isVisible) {\n            node.ensureVisible()\n        }\n\n        return isVisible\n    }\n\n    private setSingleActiveNode(node: TreeNode, active: boolean) {\n        // Deactivate all other nodes:\n        this.activeNodes\n            .filter((activeNode) => activeNode !== node)\n            .forEach((activeNode) => {\n                this.fireEvent({ eventName: TREE_EVENTS.deactivate, node: activeNode })\n            })\n\n        if (active) {\n            this.activeNodeIds = new Map([[node.id, true]])\n        } else {\n            this.activeNodeIds = new Map()\n        }\n    }\n\n    private setMultiActiveNodes(node: TreeNode, active: boolean) {\n        this.activeNodeIds.set(node.id, active)\n    }\n}\n\nfunction canMoveNode(node: TreeNode, fromIndex: number, to: { parent: TreeNode, index: number }) {\n    // same node:\n    if (node.parent === to.parent && fromIndex === to.index) {\n        return false\n    }\n\n    return !to.parent.isDescendantOf(node)\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeNode.html":{"url":"classes/TreeNode.html","title":"class - TreeNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeNode\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/models/tree-node.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        children\n                                    \n                                    \n                                            Public\n                                        data\n                                    \n                                    \n                                        elementRef\n                                    \n                                    \n                                        height\n                                    \n                                    \n                                            Public\n                                        index\n                                    \n                                    \n                                        loadingChildren\n                                    \n                                    \n                                            Public\n                                        parent\n                                    \n                                    \n                                        position\n                                    \n                                    \n                                            Public\n                                        treeModel\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        addChild\n                                    \n                                    \n                                        appendChild\n                                    \n                                    \n                                        blur\n                                    \n                                    \n                                        collapse\n                                    \n                                    \n                                        collapseAll\n                                    \n                                    \n                                        ensureVisible\n                                    \n                                    \n                                        expand\n                                    \n                                    \n                                        expandAll\n                                    \n                                    \n                                        findAdjacentSibling\n                                    \n                                    \n                                        findNextNode\n                                    \n                                    \n                                        findNextSibling\n                                    \n                                    \n                                        findPreviousNode\n                                    \n                                    \n                                        findPreviousSibling\n                                    \n                                    \n                                        fireEvent\n                                    \n                                    \n                                        focus\n                                    \n                                    \n                                        getField\n                                    \n                                    \n                                        getFirstChild\n                                    \n                                    \n                                        getLastChild\n                                    \n                                    \n                                            Private\n                                        getLastOpenDescendant\n                                    \n                                    \n                                            Private\n                                        getParentChildren\n                                    \n                                    \n                                        hide\n                                    \n                                    \n                                            Private\n                                        initChildren\n                                    \n                                    \n                                        isDescendantOf\n                                    \n                                    \n                                        loadChildren\n                                    \n                                    \n                                        mouseAction\n                                    \n                                    \n                                        onDrop\n                                    \n                                    \n                                            Private\n                                        reCalcChildrenIndices\n                                    \n                                    \n                                        remove\n                                    \n                                    \n                                        removeChild\n                                    \n                                    \n                                        scrollIntoView\n                                    \n                                    \n                                        setActive\n                                    \n                                    \n                                        setActiveAndVisible\n                                    \n                                    \n                                        setField\n                                    \n                                    \n                                        setHidden\n                                    \n                                    \n                                        show\n                                    \n                                    \n                                        toggleActivated\n                                    \n                                    \n                                        toggleExpanded\n                                    \n                                    \n                                        traverse\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        isHidden\n                                    \n                                    \n                                        isExpanded\n                                    \n                                    \n                                        isCollapsed\n                                    \n                                    \n                                        isActive\n                                    \n                                    \n                                        isFocused\n                                    \n                                    \n                                        isLeaf\n                                    \n                                    \n                                        isRoot\n                                    \n                                    \n                                        level\n                                    \n                                    \n                                        path\n                                    \n                                    \n                                        hasChildren\n                                    \n                                    \n                                        hasVisibleChildren\n                                    \n                                    \n                                        options\n                                    \n                                    \n                                        displayField\n                                    \n                                    \n                                        id\n                                    \n                                    \n                                        visibleChildren\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(data: any, parent: TreeNode, treeModel: TreeModel, index: number)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:108\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              data\n                                                              \n                                                                        any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              parent\n                                                              \n                                                                        TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              treeModel\n                                                              \n                                                                        TreeModel\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              index\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        addChild\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            addChild(data: any, index: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:424\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              data\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              index\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        appendChild\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            appendChild(data: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:446\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              data\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        blur\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            blur()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:396\n                                        \n                                    \n            \n                            \n                                \n                                        Blur (unfocus) the node\n            \n            \n                                        \n                                            Returns :     this\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        collapse\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            collapse()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:278\n                                        \n                                    \n            \n                            \n                                \n                                        Collapses the node\n            \n            \n                                        \n                                            Returns :     this\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        collapseAll\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            collapseAll()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:308\n                                        \n                                    \n            \n                            \n                                \n                                        collapse all nodes under this one\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        ensureVisible\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            ensureVisible()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:363\n                                        \n                                    \n            \n                            \n                                \n                                        Expands all ancestors of the node\n            \n            \n                                        \n                                            Returns :     this\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        expand\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            expand()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:267\n                                        \n                                    \n            \n                            \n                                \n                                        Expands the node\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        expandAll\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            expandAll()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:301\n                                        \n                                    \n            \n                            \n                                \n                                        expand all nodes under this one\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        findAdjacentSibling\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            findAdjacentSibling(steps: number, skipHidden: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:163\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              steps\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              skipHidden\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        findNextNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            findNextNode(goInside: , skipHidden: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:209\n                                        \n                                    \n            \n                            \n                                \n                                        Finds the visually next node in the tree.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              goInside\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              whether to look for children or just siblings\n            \n                                                            \n                                                            \n                                                              skipHidden\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                next node.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        findNextSibling\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            findNextSibling(skipHidden: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:171\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              skipHidden\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              whether to skip hidden nodes\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                next sibling (or null)\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        findPreviousNode\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            findPreviousNode(skipHidden: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:220\n                                        \n                                    \n            \n                            \n                                \n                                        Finds the visually previous node in the tree.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              skipHidden\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              whether to skip hidden nodes\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                previous node.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        findPreviousSibling\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            findPreviousSibling(skipHidden: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:179\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              skipHidden\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              whether to skip hidden nodes\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                previous sibling (or null)\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        fireEvent\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            fireEvent(event: TreeEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:143\n                                        \n                                    \n            \n                            \n                                \n                                        Fire an event to the renderer of the tree (if it was registered)\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              event\n                                                              \n                                                                      TreeEvent\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        focus\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            focus(scroll: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:379\n                                        \n                                    \n            \n                            \n                                \n                                        Focus on the node\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              scroll\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     this\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getField(key: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:147\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              key\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getFirstChild\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getFirstChild(skipHidden: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:187\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              skipHidden\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              whether to skip hidden nodes\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                first child (or null)\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getLastChild\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getLastChild(skipHidden: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:197\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              skipHidden\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              whether to skip hidden nodes\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                last child (or null)\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        getLastOpenDescendant\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getLastOpenDescendant(skipHidden: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:497\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              skipHidden\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        getParentChildren\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getParentChildren(skipHidden: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:505\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              skipHidden\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     []\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        hide\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            hide()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:409\n                                        \n                                    \n            \n                            \n                                \n                                        Hides the node\n            \n            \n                                        \n                                            Returns :     this\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        initChildren\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    initChildren()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:492\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        isDescendantOf\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            isDescendantOf(node: TreeNode)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:232\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                true if this node is a descendant of the parameter node\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        loadChildren\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            loadChildren()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:241\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mouseAction\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mouseAction(actionName: string, $event: MouseEvent, data: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:475\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              actionName\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              $event\n                                                              \n                                                                      MouseEvent\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              data\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        onDrop\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            onDrop($event: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:155\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              $event\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Private\n                                        reCalcChildrenIndices\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    reCalcChildrenIndices(offset: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:486\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              offset\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        remove\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            remove()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:450\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        removeChild\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            removeChild(node: TreeNode)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:454\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        scrollIntoView\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            scrollIntoView(force: , scrollToMiddle?: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:372\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              force\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              scrollToMiddle\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setActive\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setActive(isActive: , isMulti: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:327\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              isActive\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              isMulti\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     this\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setActiveAndVisible\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setActiveAndVisible(isMulti: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:351\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              isMulti\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     this\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setField\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setField(key: string, value: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:151\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              key\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              value\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        setHidden\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            setHidden(isHidden: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:336\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              isHidden\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              if true makes the node hidden, otherwise visible\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     this\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        show\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            show()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:418\n                                        \n                                    \n            \n                            \n                                \n                                        Makes the node visible\n            \n            \n                                        \n                                            Returns :     this\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        toggleActivated\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            toggleActivated(isMulti: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:345\n                                        \n                                    \n            \n                            \n                                \n                                        Activates / Deactivates the node (selects / deselects)\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              isMulti\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     this\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        toggleExpanded\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            toggleExpanded(isExpanded: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:315\n                                        \n                                    \n            \n                            \n                                \n                                        Expands / Collapses the node\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              isExpanded\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        traverse\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            traverse(fn: (node: TreeNode) => void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:290\n                                        \n                                    \n            \n                            \n                                \n                                        Invokes a method for every node under this one - depth first\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fn\n                                                              \n                                                                      function\n                                                              \n                                                              \n                                                              \n                                                              a function that receives the node\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        children\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    children:     TreeNode[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     TreeNode[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:16\n                                        \n                                    \n            \n                            \n                                \n                                    The children of the node.\n            By default is determined by 'node.data.children', unless stated otherwise in the options\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        data\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    data:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:114\n                                        \n                                    \n            \n                            \n                                \n                                    Pointer to the original data.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        elementRef\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    elementRef:     ElementRef\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ElementRef\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:26\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        height\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    height:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 0\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:24\n                                        \n                                    \n            \n                            \n                                \n                                    the visual height of the node\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        index\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    index:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:123\n                                        \n                                    \n            \n                            \n                                \n                                    index of the node inside its parent's children\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        loadingChildren\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    loadingChildren:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:25\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        parent\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    parent:     TreeNode\n            \n                                \n                            \n                                \n                                    \n                                        Type :     TreeNode\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:118\n                                        \n                                    \n            \n                            \n                                \n                                    Parent node\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        position\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    position:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 0\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:20\n                                        \n                                    \n            \n                            \n                                \n                                    top edge position relative to the top edge of scroll area\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        treeModel\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    treeModel:     TreeModel\n            \n                                \n                            \n                                \n                                    \n                                        Type :     TreeModel\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-node.ts:119\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    isHidden\n                                \n                            \n            \n                            \n                                \n                                    getisHidden()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:28\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    isExpanded\n                                \n                            \n            \n                            \n                                \n                                    getisExpanded()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:32\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    isCollapsed\n                                \n                            \n            \n                            \n                                \n                                    getisCollapsed()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:36\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    isActive\n                                \n                            \n            \n                            \n                                \n                                    getisActive()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:40\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    isFocused\n                                \n                            \n            \n                            \n                                \n                                    getisFocused()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:44\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    isLeaf\n                                \n                            \n            \n                            \n                                \n                                    getisLeaf()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:48\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    isRoot\n                                \n                            \n            \n                            \n                                \n                                    getisRoot()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:52\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    level\n                                \n                            \n            \n                            \n                                \n                                    getlevel()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:59\n                                            \n                                        \n                                \n                                    \n                                            Level in the tree (starts from 1).\n            \n            \n                                    \n                                \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    path\n                                \n                            \n            \n                            \n                                \n                                    getpath()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:66\n                                            \n                                        \n                                \n                                    \n                                            Path in the tree: Array of IDs.\n            \n            \n                                            \n                                                Returns :     string[]\n            \n                                            \n                                    \n                                \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    hasChildren\n                                \n                            \n            \n                            \n                                \n                                    gethasChildren()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:71\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    hasVisibleChildren\n                                \n                            \n            \n                            \n                                \n                                    gethasVisibleChildren()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:76\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    options\n                                \n                            \n            \n                            \n                                \n                                    getoptions()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:81\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    displayField\n                                \n                            \n            \n                            \n                                \n                                    getdisplayField()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:90\n                                            \n                                        \n                                \n                                    \n                                            The value of the node's field that is used for displaying its content.\n            By default 'name', unless stated otherwise in the options\n            \n            \n                                    \n                                \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    id\n                                \n                            \n            \n                            \n                                \n                                    getid()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:98\n                                            \n                                        \n                                \n                                    \n                                            A unique key of this node among its siblings.\n            By default it's the 'id' of the original node, unless stated otherwise in options.idField\n            \n            \n                                    \n                                \n            \n                            \n                                \n                                    setid(value: )\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:102\n                                            \n                                        \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    visibleChildren\n                                \n                            \n            \n                            \n                                \n                                    getvisibleChildren()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/ngx-tree/models/tree-node.ts:106\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import { ElementRef } from '@angular/core'\nimport first from 'lodash-es/first'\nimport last from 'lodash-es/last'\nimport pullAt from 'lodash-es/pullAt'\nimport without from 'lodash-es/without'\nimport { TREE_EVENTS } from '../constants/events'\nimport { TreeEvent } from './events'\nimport { TreeModel } from './tree-model'\nimport { TreeDataOptions } from './tree-options'\n\nexport class TreeNode {\n    /**\n     * The children of the node.\n     * By default is determined by 'node.data.children', unless stated otherwise in the options\n     */\n    children: TreeNode[]\n    /**\n     * top edge position relative to the top edge of scroll area\n     */\n    position = 0\n    /**\n     * the visual height of the node\n     */\n    height = 0\n    loadingChildren = false\n    elementRef: ElementRef\n\n    get isHidden() {\n        return this.treeModel.isNodeHidden(this)\n    }\n\n    get isExpanded() {\n        return this.treeModel.isNodeExpanded(this)\n    }\n\n    get isCollapsed() {\n        return !this.isExpanded\n    }\n\n    get isActive() {\n        return this.treeModel.isNodeActive(this)\n    }\n\n    get isFocused() {\n        return this.treeModel.isNodeFocused(this)\n    }\n\n    get isLeaf() {\n        return !this.hasChildren\n    }\n\n    get isRoot() {\n        return this.parent === null\n    }\n\n    /**\n     * Level in the tree (starts from 1).\n     */\n    get level() {\n        return this.parent ? this.parent.level + 1 : 0\n    }\n\n    /**\n     * Path in the tree: Array of IDs.\n     */\n    get path(): string[] {\n        return this.parent ? [...this.parent.path, this.id] : []\n    }\n\n    // helper get functions:\n    get hasChildren() {\n        return !!(this.data.hasChildren || (this.children && this.children.length > 0))\n    }\n\n    // helper get functions:\n    get hasVisibleChildren() {\n        return !!(this.data.hasChildren || (this.visibleChildren && this.visibleChildren.length > 0))\n    }\n\n    // proxy functions:\n    get options(): TreeDataOptions {\n        return this.treeModel.options\n    }\n\n    // field accessors:\n    /**\n     * The value of the node's field that is used for displaying its content.\n     * By default 'name', unless stated otherwise in the options\n     */\n    get displayField() {\n        return this.getField('display')\n    }\n\n    /**\n     * A unique key of this node among its siblings.\n     * By default it's the 'id' of the original node, unless stated otherwise in options.idField\n     */\n    get id() {\n        return this.getField('id')\n    }\n\n    set id(value) {\n        this.setField('id', value)\n    }\n\n    get visibleChildren() {\n        return (this.children || []).filter((node) => !node.isHidden)\n    }\n\n    constructor(\n        /**\n         * Pointer to the original data.\n         */\n        public data: any,\n        /**\n         * Parent node\n         */\n        public parent: TreeNode,\n        public treeModel: TreeModel,\n        /**\n         * index of the node inside its parent's children\n         */\n        public index: number,\n    ) {\n        // Make sure there's a unique id without overriding existing ids to work with immutable data structures\n        if (this.id === undefined || this.id === null) {\n            this.id = uuid()\n        }\n\n        treeModel.addCache(this)\n        if (data[this.options.isExpandedField]) {\n            treeModel.setExpandedNodeInPlace(this)\n        }\n\n        if (this.getField('children')) {\n            this.initChildren()\n        }\n    }\n\n    /**\n     * Fire an event to the renderer of the tree (if it was registered)\n     */\n    fireEvent(event: TreeEvent) {\n        this.treeModel.fireEvent(event)\n    }\n\n    getField(key: string) {\n        return this.data[this.options[`${key}Field`]]\n    }\n\n    setField(key: string, value) {\n        this.data[this.options[`${key}Field`]] = value\n    }\n\n    onDrop($event) {\n        this.mouseAction('drop', $event.event, {\n            from: $event.element,\n            to: { parent: this, index: 0, dropOnNode: true },\n        })\n    }\n\n    // traversing:\n    findAdjacentSibling(steps: number, skipHidden = false) {\n        return this.getParentChildren(skipHidden)[this.index + steps]\n    }\n\n    /**\n     * @param skipHidden whether to skip hidden nodes\n     * @returns next sibling (or null)\n     */\n    findNextSibling(skipHidden = false) {\n        return this.findAdjacentSibling(+1, skipHidden)\n    }\n\n    /**\n     * @param skipHidden whether to skip hidden nodes\n     * @returns previous sibling (or null)\n     */\n    findPreviousSibling(skipHidden = false) {\n        return this.findAdjacentSibling(-1, skipHidden)\n    }\n\n    /**\n     * @param skipHidden whether to skip hidden nodes\n     * @returns first child (or null)\n     */\n    getFirstChild(skipHidden = false) {\n        const children = skipHidden ? this.visibleChildren : this.children\n\n        return first(children || [])\n    }\n\n    /**\n     * @param skipHidden whether to skip hidden nodes\n     * @returns last child (or null)\n     */\n    getLastChild(skipHidden = false) {\n        const children = skipHidden ? this.visibleChildren : this.children\n\n        return last(children || [])\n    }\n\n    /**\n     * Finds the visually next node in the tree.\n     * @param goInside whether to look for children or just siblings\n     * @param skipHidden\n     * @returns next node.\n     */\n    findNextNode(goInside = true, skipHidden = false) {\n        return goInside && this.isExpanded && this.getFirstChild(skipHidden) ||\n            this.findNextSibling(skipHidden) ||\n            this.parent && this.parent.findNextNode(false, skipHidden)\n    }\n\n    /**\n     * Finds the visually previous node in the tree.\n     * @param skipHidden whether to skip hidden nodes\n     * @returns previous node.\n     */\n    findPreviousNode(skipHidden = false) {\n        const previousSibling = this.findPreviousSibling(skipHidden)\n        if (!previousSibling) {\n            return this.parent\n        }\n\n        return previousSibling.getLastOpenDescendant(skipHidden)\n    }\n\n    /**\n     * @returns      true if this node is a descendant of the parameter node\n     */\n    isDescendantOf(node: TreeNode) {\n        if (this === node) {\n            return true\n        } else {\n            return this.parent && this.parent.isDescendantOf(node)\n        }\n    }\n\n    // helper methods:\n    loadChildren() {\n        if (!this.options.getChildren) {\n            return Promise.resolve() // Not getChildren method - for using redux\n        }\n\n        this.loadingChildren = true\n\n        return Promise.resolve(this.options.getChildren(this))\n            .then((children) => {\n                if (children) {\n                    this.setField('children', children)\n                    this.initChildren()\n                }\n            })\n            .then(() => {\n                this.loadingChildren = false\n                this.fireEvent({\n                    eventName: TREE_EVENTS.loadChildren,\n                    node: this,\n                })\n            })\n    }\n\n    /**\n     * Expands the node\n     */\n    expand() {\n        if (!this.isExpanded) {\n            return this.toggleExpanded()\n        }\n\n        return Promise.resolve()\n    }\n\n    /**\n     * Collapses the node\n     */\n    collapse() {\n        if (this.isExpanded) {\n            this.toggleExpanded()\n        }\n\n        return this\n    }\n\n    /**\n     * Invokes a method for every node under this one - depth first\n     * @param fn  a function that receives the node\n     */\n    traverse(fn: (node: TreeNode) => any) {\n        Promise.resolve(fn(this)).then(() => {\n            if (this.children) {\n                this.children.forEach((child) => child.traverse(fn))\n            }\n        })\n    }\n\n    /**\n     * expand all nodes under this one\n     */\n    expandAll() {\n        this.traverse((node) => node.expand())\n    }\n\n    /**\n     * collapse all nodes under this one\n     */\n    collapseAll() {\n        this.traverse((node) => node.collapse())\n    }\n\n    /**\n     * Expands / Collapses the node\n     */\n    toggleExpanded(isExpanded = !this.isExpanded) {\n        if (this.hasChildren) {\n            this.treeModel.setExpandedNode(this, isExpanded)\n\n            if (!this.children && this.hasChildren && isExpanded) {\n                return this.loadChildren()\n            }\n        }\n\n        return Promise.resolve()\n    }\n\n    setActive(isActive = true, isMulti = false) {\n        this.treeModel.setActiveNode(this, isActive, isMulti)\n\n        return this\n    }\n\n    /**\n     * @param isHidden  if true makes the node hidden, otherwise visible\n     */\n    setHidden(isHidden = true) {\n        this.treeModel.setHiddenNode(this, isHidden)\n\n        return this\n    }\n\n    /**\n     * Activates / Deactivates the node (selects / deselects)\n     */\n    toggleActivated(isMulti = false) {\n        this.setActive(!this.isActive, isMulti)\n\n        return this\n    }\n\n    setActiveAndVisible(isMulti = false) {\n        this.setActive(true, isMulti)\n            .ensureVisible()\n\n        this.scrollIntoView()\n\n        return this\n    }\n\n    /**\n     * Expands all ancestors of the node\n     */\n    ensureVisible() {\n        if (this.parent) {\n            this.parent.expand()\n            this.parent.ensureVisible()\n        }\n\n        return this\n    }\n\n    scrollIntoView(force = false, scrollToMiddle?: boolean) {\n        this.treeModel.scrollIntoView(this, force, scrollToMiddle)\n    }\n\n    /**\n     * Focus on the node\n     */\n    focus(scroll = true) {\n        const previousNode = this.treeModel.focusedNode\n        this.treeModel.setFocusedNode(this)\n        if (scroll) {\n            this.scrollIntoView()\n        }\n        if (previousNode) {\n            this.fireEvent({ eventName: TREE_EVENTS.blur, node: previousNode })\n        }\n        this.fireEvent({ eventName: TREE_EVENTS.focus, node: this })\n\n        return this\n    }\n\n    /**\n     * Blur (unfocus) the node\n     */\n    blur() {\n        const previousNode = this.treeModel.focusedNode\n        this.treeModel.setFocusedNode(null)\n        if (previousNode) {\n            this.fireEvent({ eventName: TREE_EVENTS.blur, node: this })\n        }\n\n        return this\n    }\n\n    /**\n     * Hides the node\n     */\n    hide() {\n        this.setHidden(true)\n\n        return this\n    }\n\n    /**\n     * Makes the node visible\n     */\n    show() {\n        this.setHidden(false)\n\n        return this\n    }\n\n    addChild(data: any, index: number) {\n        const node = new TreeNode(data, this, this.treeModel, index)\n\n        // If node doesn't have children - create children array\n        if (!this.getField('children')) {\n            this.setField('children', [])\n        }\n\n        if (this.children) {\n            this.getField('children').splice(index, 0, data)\n            this.children.splice(index, 0, node)\n            this.children = this.children.slice()\n        } else {\n            this.getField('children').push(data)\n            this.children = [node]\n        }\n\n        this.reCalcChildrenIndices(index)\n\n        this.fireEvent({ eventName: TREE_EVENTS.addNode, node })\n    }\n\n    appendChild(data) {\n        this.addChild(data, this.children ? this.children.length : 0)\n    }\n\n    remove() {\n        this.parent.removeChild(this)\n    }\n\n    removeChild(node: TreeNode) {\n        pullAt(this.getField('children'), node.index)\n        this.children = without(this.children, node)\n\n        this.reCalcChildrenIndices(0)\n\n        this.fireEvent({ eventName: TREE_EVENTS.removeNode, node })\n\n        if (node.isFocused) {\n            this.treeModel.setFocusedNode(null)\n            this.treeModel.setActiveNode(node, false)\n        }\n\n        if (node.isExpanded) {\n            this.treeModel.setExpandedNodeInPlace(node, false)\n        }\n\n        node.treeModel = null\n        node.elementRef = null\n    }\n\n    mouseAction(actionName: string, $event: MouseEvent, data: any = null) {\n        this.treeModel.setFocus(true)\n\n        const actionMapping = this.options.actionMapping.mouse\n        const action = actionMapping[actionName]\n\n        if (action) {\n            action(this.treeModel, this, $event, data)\n        }\n    }\n\n    private reCalcChildrenIndices(offset) {\n        this.children.slice(offset).forEach((child, index) => {\n            child.index = index + offset\n        })\n    }\n\n    private initChildren() {\n        this.children = this.getField('children')\n            .map((data, index) => new TreeNode(data, this, this.treeModel, index))\n    }\n\n    private getLastOpenDescendant(skipHidden = false) {\n        const lastChild = this.getLastChild(skipHidden)\n\n        return (this.isCollapsed || !lastChild)\n            ? this\n            : lastChild.getLastOpenDescendant(skipHidden)\n    }\n\n    private getParentChildren(skipHidden = false): TreeNode[] {\n        return this.parent\n            ? (skipHidden ? this.parent.visibleChildren : this.parent.children)\n            : []\n    }\n}\n\nlet _uuid = 0\n\nfunction uuid() {\n    return `ngx-tid-${_uuid++}`\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionHandler.html":{"url":"interfaces/ActionHandler.html","title":"interface - ActionHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionHandler\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/models/tree-options.ts\n        \n\n            \n                Description\n            \n            \n                common functions to handle tree actions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [tree: TreeModel, node: TreeNode, $event: any, rest: any[]]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:11\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import defaults from 'lodash-es/defaults'\nimport defaultsDeep from 'lodash-es/defaultsDeep'\nimport isNumber from 'lodash-es/isNumber'\nimport { defaultActionMapping } from './actions'\nimport { TreeModel } from './tree-model'\nimport { TreeNode } from './tree-node'\n\n/**\n * common functions to handle tree actions\n */\nexport interface ActionHandler {\n    (tree: TreeModel, node: TreeNode, $event: any, ...rest);\n}\n\n/**\n * a mapping model to link mouse events and keyboard events with actions\n */\nexport interface ActionMapping {\n    mouse?: {\n        click?: ActionHandler,\n        dblClick?: ActionHandler,\n        contextMenu?: ActionHandler,\n        expanderClick?: ActionHandler,\n        dragStart?: ActionHandler,\n        drag?: ActionHandler,\n        dragEnd?: ActionHandler,\n        dragOver?: ActionHandler,\n        dragLeave?: ActionHandler,\n        dragEnter?: ActionHandler,\n        drop?: ActionHandler,\n    };\n    keys?: {\n        [key: number]: ActionHandler\n    };\n}\n\nexport interface DropTarget {\n    parent: TreeNode\n    index: number\n}\n\nexport type IAllowDropFn = (element: TreeNode, to: DropTarget, $event?: DragEvent) => boolean\n\nexport type IAllowDragFn = (node: TreeNode) => boolean\n\nexport type ILevelPaddingFn = (node: TreeNode) => string\n\nexport const defaultUIOptions: TreeUIOptions = {\n    allowDrag: false,\n    allowDrop: false,\n    levelPadding: () => '0px',\n    useVirtualScroll: false,\n    nodeClass: () => '',\n}\n\nexport const defaultDataOptions: TreeDataOptions = {\n    childrenField: 'children',\n    displayField: 'name',\n    idField: 'id',\n    isExpandedField: 'isExpanded',\n    actionMapping: defaultActionMapping,\n    getChildren: (node) => null,\n}\n\nexport interface TreeUIOptions {\n    /**\n     * Specify if dragging tree nodes is allowed.\n     * This could be a boolean, or a function that receives a TreeNode and returns a boolean\n     *\n     * **Default value: false**\n     *\n     * Example:\n     * ```\n     * options = {\n     *   allowDrag: true\n     * }\n     * ```\n     */\n    allowDrag?: boolean | IAllowDragFn;\n    /**\n     * Specify whether dropping inside the tree is allowed. Optional types:\n     *  - boolean\n     *  - (element:any, to:{parent:ITreeNode, index:number}):boolean\n     * A function that receives the dragged element, and the drop location (parent node and index inside the parent),\n     * and returns true or false.\n     *\n     * **Default Value: true**\n     *\n     * example:\n     * ```\n     * options = {\n     *  allowDrop: (element, {parent, index}) => parent.isLeaf\n     * }\n     * ```\n     */\n    allowDrop?: boolean | IAllowDropFn;\n    /**\n     * Specify padding per node instead of children padding (to allow full row select for example)\n     */\n    levelPadding?: ILevelPaddingFn;\n    /**\n     * Boolean whether virtual scroll should be used.\n     * Increases performance for large trees\n     * Default is false\n     */\n    useVirtualScroll?: boolean;\n\n    /**\n     * Supply function for getting a custom class for the node component\n     */\n    nodeClass?(node: TreeNode): string;\n}\n\nexport interface RawTreeUIOptions {\n    allowDrag?: boolean | IAllowDragFn;\n    allowDrop?: boolean | IAllowDropFn;\n    levelPadding?: number | ILevelPaddingFn;\n    useVirtualScroll?: boolean;\n\n    nodeClass?(node: TreeNode): string;\n}\n\n/**\n * create tree options about UI with defaults\n * @param rawOpts\n */\nexport function createTreeUIOptions(rawOpts: RawTreeUIOptions = {}): TreeUIOptions {\n    const levelPaddingOpt = rawOpts.levelPadding\n    if (isNumber(levelPaddingOpt)) {\n        rawOpts.levelPadding = function (node: TreeNode) {\n            return (levelPaddingOpt + levelPaddingOpt * (node.level - 1)) + 'px'\n        }\n    }\n\n    return defaults({}, rawOpts, defaultUIOptions)\n}\n\nexport interface TreeDataOptions {\n    /**\n     * Override children field. Default: 'children'\n     */\n    childrenField?: string;\n    /**\n     * Override display field. Default: 'name'\n     */\n    displayField?: string;\n    /**\n     * Override id field. Default: 'id'\n     */\n    idField?: string;\n    /**\n     * Override isExpanded field. Default: 'isExpanded'\n     */\n    isExpandedField?: string;\n    /**\n     * Change the default mouse and key actions on the tree\n     */\n    actionMapping?: ActionMapping;\n\n    /**\n     * Supply function for getting fields asynchronously. Should return a Promise\n     */\n    getChildren?(node: TreeNode): Promise;\n}\n\n/**\n * create tree options about data with defaults\n * @param rawOpts\n */\nexport function createTreeDataOptions(rawOpts: TreeDataOptions = {}): TreeDataOptions {\n    return defaultsDeep({}, rawOpts, defaultDataOptions)\n}\n\n// export const TREE_DATA_OPTIONS = new InjectionToken('TREE_DATA_OPTIONS')\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionMapping.html":{"url":"interfaces/ActionMapping.html","title":"interface - ActionMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionMapping\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/models/tree-options.ts\n        \n\n            \n                Description\n            \n            \n                a mapping model to link mouse events and keyboard events with actions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        keys\n                                \n                                \n                                        mouse\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                    \n                                \n                                \n                                    \n                                        keys:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:32\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mouse\n                                    \n                                \n                                \n                                    \n                                        mouse:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:19\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import defaults from 'lodash-es/defaults'\nimport defaultsDeep from 'lodash-es/defaultsDeep'\nimport isNumber from 'lodash-es/isNumber'\nimport { defaultActionMapping } from './actions'\nimport { TreeModel } from './tree-model'\nimport { TreeNode } from './tree-node'\n\n/**\n * common functions to handle tree actions\n */\nexport interface ActionHandler {\n    (tree: TreeModel, node: TreeNode, $event: any, ...rest);\n}\n\n/**\n * a mapping model to link mouse events and keyboard events with actions\n */\nexport interface ActionMapping {\n    mouse?: {\n        click?: ActionHandler,\n        dblClick?: ActionHandler,\n        contextMenu?: ActionHandler,\n        expanderClick?: ActionHandler,\n        dragStart?: ActionHandler,\n        drag?: ActionHandler,\n        dragEnd?: ActionHandler,\n        dragOver?: ActionHandler,\n        dragLeave?: ActionHandler,\n        dragEnter?: ActionHandler,\n        drop?: ActionHandler,\n    };\n    keys?: {\n        [key: number]: ActionHandler\n    };\n}\n\nexport interface DropTarget {\n    parent: TreeNode\n    index: number\n}\n\nexport type IAllowDropFn = (element: TreeNode, to: DropTarget, $event?: DragEvent) => boolean\n\nexport type IAllowDragFn = (node: TreeNode) => boolean\n\nexport type ILevelPaddingFn = (node: TreeNode) => string\n\nexport const defaultUIOptions: TreeUIOptions = {\n    allowDrag: false,\n    allowDrop: false,\n    levelPadding: () => '0px',\n    useVirtualScroll: false,\n    nodeClass: () => '',\n}\n\nexport const defaultDataOptions: TreeDataOptions = {\n    childrenField: 'children',\n    displayField: 'name',\n    idField: 'id',\n    isExpandedField: 'isExpanded',\n    actionMapping: defaultActionMapping,\n    getChildren: (node) => null,\n}\n\nexport interface TreeUIOptions {\n    /**\n     * Specify if dragging tree nodes is allowed.\n     * This could be a boolean, or a function that receives a TreeNode and returns a boolean\n     *\n     * **Default value: false**\n     *\n     * Example:\n     * ```\n     * options = {\n     *   allowDrag: true\n     * }\n     * ```\n     */\n    allowDrag?: boolean | IAllowDragFn;\n    /**\n     * Specify whether dropping inside the tree is allowed. Optional types:\n     *  - boolean\n     *  - (element:any, to:{parent:ITreeNode, index:number}):boolean\n     * A function that receives the dragged element, and the drop location (parent node and index inside the parent),\n     * and returns true or false.\n     *\n     * **Default Value: true**\n     *\n     * example:\n     * ```\n     * options = {\n     *  allowDrop: (element, {parent, index}) => parent.isLeaf\n     * }\n     * ```\n     */\n    allowDrop?: boolean | IAllowDropFn;\n    /**\n     * Specify padding per node instead of children padding (to allow full row select for example)\n     */\n    levelPadding?: ILevelPaddingFn;\n    /**\n     * Boolean whether virtual scroll should be used.\n     * Increases performance for large trees\n     * Default is false\n     */\n    useVirtualScroll?: boolean;\n\n    /**\n     * Supply function for getting a custom class for the node component\n     */\n    nodeClass?(node: TreeNode): string;\n}\n\nexport interface RawTreeUIOptions {\n    allowDrag?: boolean | IAllowDragFn;\n    allowDrop?: boolean | IAllowDropFn;\n    levelPadding?: number | ILevelPaddingFn;\n    useVirtualScroll?: boolean;\n\n    nodeClass?(node: TreeNode): string;\n}\n\n/**\n * create tree options about UI with defaults\n * @param rawOpts\n */\nexport function createTreeUIOptions(rawOpts: RawTreeUIOptions = {}): TreeUIOptions {\n    const levelPaddingOpt = rawOpts.levelPadding\n    if (isNumber(levelPaddingOpt)) {\n        rawOpts.levelPadding = function (node: TreeNode) {\n            return (levelPaddingOpt + levelPaddingOpt * (node.level - 1)) + 'px'\n        }\n    }\n\n    return defaults({}, rawOpts, defaultUIOptions)\n}\n\nexport interface TreeDataOptions {\n    /**\n     * Override children field. Default: 'children'\n     */\n    childrenField?: string;\n    /**\n     * Override display field. Default: 'name'\n     */\n    displayField?: string;\n    /**\n     * Override id field. Default: 'id'\n     */\n    idField?: string;\n    /**\n     * Override isExpanded field. Default: 'isExpanded'\n     */\n    isExpandedField?: string;\n    /**\n     * Change the default mouse and key actions on the tree\n     */\n    actionMapping?: ActionMapping;\n\n    /**\n     * Supply function for getting fields asynchronously. Should return a Promise\n     */\n    getChildren?(node: TreeNode): Promise;\n}\n\n/**\n * create tree options about data with defaults\n * @param rawOpts\n */\nexport function createTreeDataOptions(rawOpts: TreeDataOptions = {}): TreeDataOptions {\n    return defaultsDeep({}, rawOpts, defaultDataOptions)\n}\n\n// export const TREE_DATA_OPTIONS = new InjectionToken('TREE_DATA_OPTIONS')\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTarget.html":{"url":"interfaces/DropTarget.html","title":"interface - DropTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTarget\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/models/tree-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:39\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     TreeNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TreeNode\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:38\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import defaults from 'lodash-es/defaults'\nimport defaultsDeep from 'lodash-es/defaultsDeep'\nimport isNumber from 'lodash-es/isNumber'\nimport { defaultActionMapping } from './actions'\nimport { TreeModel } from './tree-model'\nimport { TreeNode } from './tree-node'\n\n/**\n * common functions to handle tree actions\n */\nexport interface ActionHandler {\n    (tree: TreeModel, node: TreeNode, $event: any, ...rest);\n}\n\n/**\n * a mapping model to link mouse events and keyboard events with actions\n */\nexport interface ActionMapping {\n    mouse?: {\n        click?: ActionHandler,\n        dblClick?: ActionHandler,\n        contextMenu?: ActionHandler,\n        expanderClick?: ActionHandler,\n        dragStart?: ActionHandler,\n        drag?: ActionHandler,\n        dragEnd?: ActionHandler,\n        dragOver?: ActionHandler,\n        dragLeave?: ActionHandler,\n        dragEnter?: ActionHandler,\n        drop?: ActionHandler,\n    };\n    keys?: {\n        [key: number]: ActionHandler\n    };\n}\n\nexport interface DropTarget {\n    parent: TreeNode\n    index: number\n}\n\nexport type IAllowDropFn = (element: TreeNode, to: DropTarget, $event?: DragEvent) => boolean\n\nexport type IAllowDragFn = (node: TreeNode) => boolean\n\nexport type ILevelPaddingFn = (node: TreeNode) => string\n\nexport const defaultUIOptions: TreeUIOptions = {\n    allowDrag: false,\n    allowDrop: false,\n    levelPadding: () => '0px',\n    useVirtualScroll: false,\n    nodeClass: () => '',\n}\n\nexport const defaultDataOptions: TreeDataOptions = {\n    childrenField: 'children',\n    displayField: 'name',\n    idField: 'id',\n    isExpandedField: 'isExpanded',\n    actionMapping: defaultActionMapping,\n    getChildren: (node) => null,\n}\n\nexport interface TreeUIOptions {\n    /**\n     * Specify if dragging tree nodes is allowed.\n     * This could be a boolean, or a function that receives a TreeNode and returns a boolean\n     *\n     * **Default value: false**\n     *\n     * Example:\n     * ```\n     * options = {\n     *   allowDrag: true\n     * }\n     * ```\n     */\n    allowDrag?: boolean | IAllowDragFn;\n    /**\n     * Specify whether dropping inside the tree is allowed. Optional types:\n     *  - boolean\n     *  - (element:any, to:{parent:ITreeNode, index:number}):boolean\n     * A function that receives the dragged element, and the drop location (parent node and index inside the parent),\n     * and returns true or false.\n     *\n     * **Default Value: true**\n     *\n     * example:\n     * ```\n     * options = {\n     *  allowDrop: (element, {parent, index}) => parent.isLeaf\n     * }\n     * ```\n     */\n    allowDrop?: boolean | IAllowDropFn;\n    /**\n     * Specify padding per node instead of children padding (to allow full row select for example)\n     */\n    levelPadding?: ILevelPaddingFn;\n    /**\n     * Boolean whether virtual scroll should be used.\n     * Increases performance for large trees\n     * Default is false\n     */\n    useVirtualScroll?: boolean;\n\n    /**\n     * Supply function for getting a custom class for the node component\n     */\n    nodeClass?(node: TreeNode): string;\n}\n\nexport interface RawTreeUIOptions {\n    allowDrag?: boolean | IAllowDragFn;\n    allowDrop?: boolean | IAllowDropFn;\n    levelPadding?: number | ILevelPaddingFn;\n    useVirtualScroll?: boolean;\n\n    nodeClass?(node: TreeNode): string;\n}\n\n/**\n * create tree options about UI with defaults\n * @param rawOpts\n */\nexport function createTreeUIOptions(rawOpts: RawTreeUIOptions = {}): TreeUIOptions {\n    const levelPaddingOpt = rawOpts.levelPadding\n    if (isNumber(levelPaddingOpt)) {\n        rawOpts.levelPadding = function (node: TreeNode) {\n            return (levelPaddingOpt + levelPaddingOpt * (node.level - 1)) + 'px'\n        }\n    }\n\n    return defaults({}, rawOpts, defaultUIOptions)\n}\n\nexport interface TreeDataOptions {\n    /**\n     * Override children field. Default: 'children'\n     */\n    childrenField?: string;\n    /**\n     * Override display field. Default: 'name'\n     */\n    displayField?: string;\n    /**\n     * Override id field. Default: 'id'\n     */\n    idField?: string;\n    /**\n     * Override isExpanded field. Default: 'isExpanded'\n     */\n    isExpandedField?: string;\n    /**\n     * Change the default mouse and key actions on the tree\n     */\n    actionMapping?: ActionMapping;\n\n    /**\n     * Supply function for getting fields asynchronously. Should return a Promise\n     */\n    getChildren?(node: TreeNode): Promise;\n}\n\n/**\n * create tree options about data with defaults\n * @param rawOpts\n */\nexport function createTreeDataOptions(rawOpts: TreeDataOptions = {}): TreeDataOptions {\n    return defaultsDeep({}, rawOpts, defaultDataOptions)\n}\n\n// export const TREE_DATA_OPTIONS = new InjectionToken('TREE_DATA_OPTIONS')\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsMap.html":{"url":"interfaces/EventsMap.html","title":"interface - EventsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventsMap\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/constants/events.ts\n        \n\n            \n                Description\n            \n            \n                all events that the tree will trigger\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activate\n                                \n                                \n                                        addNode\n                                \n                                \n                                        blur\n                                \n                                \n                                        changeFilter\n                                \n                                \n                                        collapse\n                                \n                                \n                                        deactivate\n                                \n                                \n                                        expand\n                                \n                                \n                                        focus\n                                \n                                \n                                        initialized\n                                \n                                \n                                        loadChildren\n                                \n                                \n                                        moveNode\n                                \n                                \n                                        removeNode\n                                \n                                \n                                        toggleExpander\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activate\n                                    \n                                \n                                \n                                    \n                                        activate:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/constants/events.ts:30\n                                        \n                                    \n\n                            \n                                \n                                    normally triggered by clicking or tabbing the enter key\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addNode\n                                    \n                                \n                                \n                                    \n                                        addNode:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/constants/events.ts:42\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blur\n                                    \n                                \n                                \n                                    \n                                        blur:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/constants/events.ts:36\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        changeFilter\n                                    \n                                \n                                \n                                    \n                                        changeFilter:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/constants/events.ts:40\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collapse\n                                    \n                                \n                                \n                                    \n                                        collapse:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/constants/events.ts:25\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deactivate\n                                    \n                                \n                                \n                                    \n                                        deactivate:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/constants/events.ts:31\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expand\n                                    \n                                \n                                \n                                    \n                                        expand:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/constants/events.ts:24\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        focus\n                                    \n                                \n                                \n                                    \n                                        focus:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/constants/events.ts:35\n                                        \n                                    \n\n                            \n                                \n                                    focus is different from activate, because focus can be changed by arrow keys of keyboard\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialized\n                                    \n                                \n                                \n                                    \n                                        initialized:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/constants/events.ts:37\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadChildren\n                                    \n                                \n                                \n                                    \n                                        loadChildren:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/constants/events.ts:39\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moveNode\n                                    \n                                \n                                \n                                    \n                                        moveNode:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/constants/events.ts:38\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeNode\n                                    \n                                \n                                \n                                    \n                                        removeNode:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/constants/events.ts:41\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toggleExpander\n                                    \n                                \n                                \n                                    \n                                        toggleExpander:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/constants/events.ts:26\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter } from '@angular/core'\nimport { TreeEvent } from '../models'\n\nexport const TREE_EVENTS = {\n    expand: 'expand',\n    collapse: 'collapse',\n    toggleExpander: 'toggleExpander',\n    activate: 'activate',\n    deactivate: 'deactivate',\n    focus: 'focus',\n    blur: 'blur',\n    initialized: 'initialized',\n    moveNode: 'moveNode',\n    loadChildren: 'loadChildren',\n    changeFilter: 'changeFilter',\n    removeNode: 'removeNode',\n    addNode: 'addNode',\n}\n\n/**\n * all events that the tree will trigger\n */\nexport interface EventsMap {\n    expand: EventEmitter\n    collapse: EventEmitter\n    toggleExpander: EventEmitter\n    /**\n     * normally triggered by clicking or tabbing the enter key\n     */\n    activate: EventEmitter\n    deactivate: EventEmitter\n    /**\n     * focus is different from activate, because focus can be changed by arrow keys of keyboard\n     */\n    focus: EventEmitter\n    blur: EventEmitter\n    initialized: EventEmitter\n    moveNode: EventEmitter\n    loadChildren: EventEmitter\n    changeFilter: EventEmitter\n    removeNode: EventEmitter\n    addNode: EventEmitter\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawTreeUIOptions.html":{"url":"interfaces/RawTreeUIOptions.html","title":"interface - RawTreeUIOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RawTreeUIOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/models/tree-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        allowDrag\n                                \n                                \n                                        allowDrop\n                                \n                                \n                                        levelPadding\n                                \n                                \n                                        useVirtualScroll\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nodeClass\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        nodeClass\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            nodeClass(node: TreeNode)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:120\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowDrag\n                                    \n                                \n                                \n                                    \n                                        allowDrag:     boolean | IAllowDragFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | IAllowDragFn\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:115\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowDrop\n                                    \n                                \n                                \n                                    \n                                        allowDrop:     boolean | IAllowDropFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | IAllowDropFn\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:116\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        levelPadding\n                                    \n                                \n                                \n                                    \n                                        levelPadding:     number | ILevelPaddingFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | ILevelPaddingFn\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:117\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useVirtualScroll\n                                    \n                                \n                                \n                                    \n                                        useVirtualScroll:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:118\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import defaults from 'lodash-es/defaults'\nimport defaultsDeep from 'lodash-es/defaultsDeep'\nimport isNumber from 'lodash-es/isNumber'\nimport { defaultActionMapping } from './actions'\nimport { TreeModel } from './tree-model'\nimport { TreeNode } from './tree-node'\n\n/**\n * common functions to handle tree actions\n */\nexport interface ActionHandler {\n    (tree: TreeModel, node: TreeNode, $event: any, ...rest);\n}\n\n/**\n * a mapping model to link mouse events and keyboard events with actions\n */\nexport interface ActionMapping {\n    mouse?: {\n        click?: ActionHandler,\n        dblClick?: ActionHandler,\n        contextMenu?: ActionHandler,\n        expanderClick?: ActionHandler,\n        dragStart?: ActionHandler,\n        drag?: ActionHandler,\n        dragEnd?: ActionHandler,\n        dragOver?: ActionHandler,\n        dragLeave?: ActionHandler,\n        dragEnter?: ActionHandler,\n        drop?: ActionHandler,\n    };\n    keys?: {\n        [key: number]: ActionHandler\n    };\n}\n\nexport interface DropTarget {\n    parent: TreeNode\n    index: number\n}\n\nexport type IAllowDropFn = (element: TreeNode, to: DropTarget, $event?: DragEvent) => boolean\n\nexport type IAllowDragFn = (node: TreeNode) => boolean\n\nexport type ILevelPaddingFn = (node: TreeNode) => string\n\nexport const defaultUIOptions: TreeUIOptions = {\n    allowDrag: false,\n    allowDrop: false,\n    levelPadding: () => '0px',\n    useVirtualScroll: false,\n    nodeClass: () => '',\n}\n\nexport const defaultDataOptions: TreeDataOptions = {\n    childrenField: 'children',\n    displayField: 'name',\n    idField: 'id',\n    isExpandedField: 'isExpanded',\n    actionMapping: defaultActionMapping,\n    getChildren: (node) => null,\n}\n\nexport interface TreeUIOptions {\n    /**\n     * Specify if dragging tree nodes is allowed.\n     * This could be a boolean, or a function that receives a TreeNode and returns a boolean\n     *\n     * **Default value: false**\n     *\n     * Example:\n     * ```\n     * options = {\n     *   allowDrag: true\n     * }\n     * ```\n     */\n    allowDrag?: boolean | IAllowDragFn;\n    /**\n     * Specify whether dropping inside the tree is allowed. Optional types:\n     *  - boolean\n     *  - (element:any, to:{parent:ITreeNode, index:number}):boolean\n     * A function that receives the dragged element, and the drop location (parent node and index inside the parent),\n     * and returns true or false.\n     *\n     * **Default Value: true**\n     *\n     * example:\n     * ```\n     * options = {\n     *  allowDrop: (element, {parent, index}) => parent.isLeaf\n     * }\n     * ```\n     */\n    allowDrop?: boolean | IAllowDropFn;\n    /**\n     * Specify padding per node instead of children padding (to allow full row select for example)\n     */\n    levelPadding?: ILevelPaddingFn;\n    /**\n     * Boolean whether virtual scroll should be used.\n     * Increases performance for large trees\n     * Default is false\n     */\n    useVirtualScroll?: boolean;\n\n    /**\n     * Supply function for getting a custom class for the node component\n     */\n    nodeClass?(node: TreeNode): string;\n}\n\nexport interface RawTreeUIOptions {\n    allowDrag?: boolean | IAllowDragFn;\n    allowDrop?: boolean | IAllowDropFn;\n    levelPadding?: number | ILevelPaddingFn;\n    useVirtualScroll?: boolean;\n\n    nodeClass?(node: TreeNode): string;\n}\n\n/**\n * create tree options about UI with defaults\n * @param rawOpts\n */\nexport function createTreeUIOptions(rawOpts: RawTreeUIOptions = {}): TreeUIOptions {\n    const levelPaddingOpt = rawOpts.levelPadding\n    if (isNumber(levelPaddingOpt)) {\n        rawOpts.levelPadding = function (node: TreeNode) {\n            return (levelPaddingOpt + levelPaddingOpt * (node.level - 1)) + 'px'\n        }\n    }\n\n    return defaults({}, rawOpts, defaultUIOptions)\n}\n\nexport interface TreeDataOptions {\n    /**\n     * Override children field. Default: 'children'\n     */\n    childrenField?: string;\n    /**\n     * Override display field. Default: 'name'\n     */\n    displayField?: string;\n    /**\n     * Override id field. Default: 'id'\n     */\n    idField?: string;\n    /**\n     * Override isExpanded field. Default: 'isExpanded'\n     */\n    isExpandedField?: string;\n    /**\n     * Change the default mouse and key actions on the tree\n     */\n    actionMapping?: ActionMapping;\n\n    /**\n     * Supply function for getting fields asynchronously. Should return a Promise\n     */\n    getChildren?(node: TreeNode): Promise;\n}\n\n/**\n * create tree options about data with defaults\n * @param rawOpts\n */\nexport function createTreeDataOptions(rawOpts: TreeDataOptions = {}): TreeDataOptions {\n    return defaultsDeep({}, rawOpts, defaultDataOptions)\n}\n\n// export const TREE_DATA_OPTIONS = new InjectionToken('TREE_DATA_OPTIONS')\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScrollIntoViewTarget.html":{"url":"interfaces/ScrollIntoViewTarget.html","title":"interface - ScrollIntoViewTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ScrollIntoViewTarget\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/models/tree-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        force\n                                \n                                \n                                        node\n                                \n                                \n                                        scrollToMiddle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        force\n                                    \n                                \n                                \n                                    \n                                        force:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:16\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:     TreeNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TreeNode\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:15\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollToMiddle\n                                    \n                                \n                                \n                                    \n                                        scrollToMiddle:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-model.ts:17\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import compact from 'lodash-es/compact'\nimport find from 'lodash-es/find'\nimport first from 'lodash-es/first'\nimport isFunction from 'lodash-es/isFunction'\nimport isString from 'lodash-es/isString'\nimport last from 'lodash-es/last'\nimport { Observer } from 'rxjs/Observer'\nimport { Subject } from 'rxjs/Subject'\nimport { EventsMap, TREE_EVENTS } from '../constants/events'\nimport { TreeEvent } from './events'\nimport { TreeNode } from './tree-node'\nimport { createTreeDataOptions, TreeDataOptions } from './tree-options'\n\nexport interface ScrollIntoViewTarget {\n    node: TreeNode\n    force: boolean\n    scrollToMiddle: boolean\n}\n\nexport class TreeModel {\n    /**\n     * static cache for recording the tree model while using multiple tree component in same container.\n     */\n    static focusedTree: TreeModel = null\n\n    /**\n     * All root nodes, it will have one item if a user input a single root tree.\n     */\n    roots: TreeNode[]\n    /**\n     * a tree node created internally to represent the root node of input data\n     */\n    readonly virtualRoot: TreeNode\n    readonly scrollIntoView$: Subject = new Subject()\n\n    /**\n     * Is the tree currently focused\n     */\n    get isFocused() {\n        return TreeModel.focusedTree === this\n    }\n\n    /**\n     * if the tree is empty\n     */\n    get isEmptyTree() {\n        return this.roots && this.roots.length === 0\n    }\n\n    /**\n     * Current focused node\n     */\n    get focusedNode() {\n        return this.focusedNodeId ? this.getNodeById(this.focusedNodeId) : null\n    }\n\n    /**\n     * @returns Current expanded nodes\n     */\n    get expandedNodes(): TreeNode[] {\n        const nodes = Array.from(this.expandedNodeIds.keys())\n            .filter((id) => this.expandedNodeIds.get(id))\n            .map((id) => this.getNodeById(id))\n\n        return compact(nodes)\n    }\n\n    /**\n     * @returns Current active (selected) nodes\n     */\n    get activeNodes(): TreeNode[] {\n        const nodes = Array.from(this.activeNodeIds.keys())\n            .filter((id) => this.activeNodeIds.get(id))\n            .map((id) => this.nodeCache.get(id))\n\n        return compact(nodes)\n    }\n\n    private focusedNodeId: string = null\n    private expandedNodeIds: Map = new Map()\n    private activeNodeIds: Map = new Map()\n    private hiddenNodeIds: Map = new Map()\n    private nodeCache: Map = new Map()\n\n    constructor(\n        private nodes: any[],\n        public events: EventsMap,\n        /**\n         * Options that are passed to the tree component\n         */\n        public options?: TreeDataOptions,\n    ) {\n        this.options = createTreeDataOptions(options)\n        const virtualRootConfig = {\n            virtual: true,\n            // todo: determine to use fixed children field later\n            [this.options.childrenField]: this.nodes,\n        }\n\n        this.virtualRoot = new TreeNode(virtualRootConfig, null, this, 0)\n        this.setExpandedNodeInPlace(this.virtualRoot)\n\n        this.roots = this.virtualRoot.children\n    }\n\n    addCache(node: TreeNode) {\n        this.nodeCache.set(node.id, node)\n    }\n\n    updateOptions(options: TreeDataOptions) {\n        this.options = options\n    }\n\n    // events\n    fireEvent(event: TreeEvent) {\n        // event.treeModel = this\n\n        this.events[event.eventName].emit(event)\n    }\n\n    subscribe(eventName: string, fn: Observer) {\n        return this.events[eventName].subscribe(fn)\n    }\n\n    // getters\n    /**\n     * @returns Current active (selected) node. If multiple nodes are active - returns the first one.\n     */\n    getActiveNode(): TreeNode {\n        return this.activeNodes[0]\n    }\n\n    /**\n     * @returns All root nodes that pass the current filter\n     */\n    getVisibleRoots() {\n        return this.virtualRoot.visibleChildren\n    }\n\n    /**\n     * @param skipHidden  true or false - whether to skip hidden nodes\n     * @returns      first root of the tree\n     */\n    getFirstRoot(skipHidden = false) {\n        return first(skipHidden ? this.getVisibleRoots() : this.roots)\n    }\n\n    /**\n     * @param skipHidden  true or false - whether to skip hidden nodes\n     * @returns      last root of the tree\n     */\n    getLastRoot(skipHidden = false) {\n        return last(skipHidden ? this.getVisibleRoots() : this.roots)\n    }\n\n    // locating nodes\n    /**\n     * @param     path  array of node IDs to be traversed respectively\n     * @param     startNode  optional. Which node to start traversing from\n     * @returns   The node, if found - null otherwise\n     */\n    getNodeByPath(path: (string | number)[], startNode: TreeNode = null): TreeNode {\n        if (!path) {\n            return null\n        }\n\n        startNode = startNode || this.virtualRoot\n\n        if (path.length === 0) {\n            return startNode\n        }\n\n        if (!startNode.children) {\n            return null\n        }\n\n        const childId = path.shift()\n        const childNode = find(startNode.children, { id: childId })\n\n        if (!childNode) {\n            return null\n        }\n\n        return this.getNodeByPath(path, childNode)\n    }\n\n    /**\n     * @param     id  node ID to find\n     * @returns   The node, if found - null otherwise\n     */\n    getNodeById(id: string) {\n        return this.nodeCache.get(id)\n    }\n\n    /**\n     * @param     predicate - either an object or a function, used as a test condition on all nodes.\n     *            Could be every predicate that's supported by lodash's `find` method\n     * @param     startNode  optional. Which node to start traversing from\n     * @returns   First node that matches the predicate, if found - null otherwise\n     */\n    getNodeBy(predicate: (node: TreeNode) => boolean, startNode: TreeNode = null) {\n        // todo: refactor to a loop\n        startNode = startNode || this.virtualRoot\n\n        if (!startNode.children) {\n            return null\n        }\n\n        const found = find(startNode.children, predicate)\n\n        if (found) { // found in children\n            return found\n        } else { // look in children's children\n            for (const child of startNode.children) {\n                const foundInChildren = this.getNodeBy(predicate, child)\n                if (foundInChildren) {\n                    return foundInChildren\n                }\n            }\n        }\n    }\n\n    isNodeExpanded(node: TreeNode) {\n        return !!this.expandedNodeIds.get(node.id)\n    }\n\n    isNodeHidden(node: TreeNode) {\n        return !!this.hiddenNodeIds.get(node.id)\n    }\n\n    isNodeActive(node: TreeNode) {\n        return !!this.activeNodeIds.get(node.id)\n    }\n\n    isNodeFocused(node: TreeNode) {\n        return this.focusedNode === node\n    }\n\n    setActiveNode(node: TreeNode, isActive: boolean, isMulti = false) {\n        if (isMulti) {\n            this.setMultiActiveNodes(node, isActive)\n        } else {\n            this.setSingleActiveNode(node, isActive)\n        }\n\n        if (isActive) {\n            node.focus()\n            this.fireEvent({ eventName: TREE_EVENTS.activate, node })\n        } else {\n            this.fireEvent({ eventName: TREE_EVENTS.deactivate, node })\n        }\n    }\n\n    setExpandedNodeInPlace(node: TreeNode, isExpanded = true) {\n        this.expandedNodeIds.set(node.id, isExpanded)\n    }\n\n    setExpandedNode(node: TreeNode, isExpanded = true) {\n        this.expandedNodeIds.set(node.id, isExpanded)\n        if (isExpanded) {\n            this.fireEvent({ eventName: TREE_EVENTS.expand, node })\n        } else {\n            this.fireEvent({ eventName: TREE_EVENTS.collapse, node })\n        }\n        this.fireEvent({ eventName: TREE_EVENTS.toggleExpander, node, isExpanded })\n    }\n\n    setHiddenNode(node: TreeNode, isHidden = true) {\n        this.hiddenNodeIds.set(node.id, isHidden)\n    }\n\n    /**\n     * Set focus on a node\n     * @param node\n     */\n    setFocusedNode(node: TreeNode) {\n        this.focusedNodeId = node ? node.id : null\n    }\n\n    /**\n     * Focuses or blurs the tree\n     * @param value  true or false - whether to set focus or blur.\n     */\n    setFocus(value: boolean) {\n        TreeModel.focusedTree = value ? this : null\n    }\n\n    traverse(fn: (node: TreeNode) => any) {\n        this.roots.forEach((root) => root.traverse(fn))\n    }\n\n    activateNode(id) {\n        const target = this.getNodeById(id)\n        if (target) {\n            target.setActiveAndVisible()\n\n            return true\n        }\n\n        return false\n    }\n\n    focusNode(id: string) {\n        const target = this.getNodeById(id)\n        if (target) {\n            target.focus()\n\n            return true\n        }\n\n        return false\n    }\n\n    /**\n     * Focuses on the next node in the tree (same as down arrow)\n     */\n    focusNextNode() {\n        const previousNode = this.focusedNode\n        const nextNode = previousNode ? previousNode.findNextNode(true, true) : this.getFirstRoot(true)\n        if (nextNode) {\n            nextNode.focus()\n        }\n    }\n\n    /**\n     * Focuses on the previous node in the tree (same as up arrow)\n     */\n    focusPreviousNode() {\n        const previousNode = this.focusedNode\n        const nextNode = previousNode ? previousNode.findPreviousNode(true) : this.getLastRoot(true)\n        if (nextNode) {\n            nextNode.focus()\n        }\n    }\n\n    /**\n     * Focuses on the inner child of the current focused node (same as right arrow on an expanded node)\n     */\n    focusDrillDown() {\n        const previousNode = this.focusedNode\n        if (previousNode && previousNode.isCollapsed && previousNode.hasChildren) {\n            previousNode.toggleExpanded()\n        } else {\n            const nextNode = previousNode ? previousNode.getFirstChild(true) : this.getFirstRoot(true)\n            if (nextNode) {\n                nextNode.focus()\n            }\n        }\n    }\n\n    /**\n     * Focuses on the parent of the current focused node (same as left arrow on a collapsed node)\n     */\n    focusDrillUp() {\n        const previousNode = this.focusedNode\n        if (!previousNode) {\n            return\n        }\n\n        if (previousNode.isExpanded) {\n            previousNode.toggleExpanded()\n        } else {\n            const nextNode = previousNode.parent\n            if (nextNode) {\n                nextNode.focus()\n            }\n        }\n    }\n\n    /**\n     * expand all nodes\n     */\n    expandAll() {\n        this.roots.forEach((root) => root.expandAll())\n    }\n\n    /**\n     * collapse all nodes\n     */\n    collapseAll() {\n        this.roots.forEach((root) => root.collapseAll())\n    }\n\n    performKeyAction(node: TreeNode, $event: KeyboardEvent) {\n        // todo: the keyCode is deprecated on MDN, replace it some day\n        const action = this.options.actionMapping.keys[$event.keyCode]\n        if (action) {\n            $event.preventDefault()\n            action(this, node, $event)\n\n            return true\n        } else {\n            return false\n        }\n    }\n\n    /**\n     * Marks isHidden field in all nodes recursively according to the filter param.\n     * If a node is marked visible, all of its ancestors will be marked visible as well.\n     * @param filter  either a string or a function.\n     *   In case it's a string, it will be searched case insensitively in the node's display attribute\n     *   In case it's a function, it will be passed the node, and should return true if the node should be visible,\n     *     false otherwise\n     * @param autoShow  if true, make sure all nodes that passed the filter are visible\n     */\n    filterNodes(filter: string | ((node: TreeNode) => boolean), autoShow = true) {\n        let filterFn\n\n        if (!filter) {\n            return this.clearFilter()\n        }\n\n        // support function and string filter\n        if (isString(filter)) {\n            filterFn = (node) => node.displayField.toLowerCase().includes(filter.toLowerCase())\n        } else if (isFunction(filter)) {\n            filterFn = filter\n        } else {\n            throw new TypeError(`Don't know what to do with filter: ${filter}. It should be either a string or function`)\n        }\n\n        const ids = new Map()\n        this.roots.forEach((node) => this.filterNode(ids, node, filterFn, autoShow))\n        this.hiddenNodeIds = ids\n        this.fireEvent({ eventName: TREE_EVENTS.changeFilter })\n    }\n\n    /**\n     * Marks all nodes isHidden = false\n     */\n    clearFilter() {\n        this.hiddenNodeIds = new Map()\n        this.fireEvent({ eventName: TREE_EVENTS.changeFilter })\n    }\n\n    /**\n     * moves a node from one location in the tree to another\n     * @param node location has a from and a to attributes, each has a node and index attributes.\n     * The combination of node + index tells which node needs to be moved, and to where\n     * @param to\n     */\n    moveNode(node: TreeNode, to: { parent: TreeNode, index: number, dropOnNode: boolean }) {\n        const fromIndex = node.index\n        const fromParent = node.parent\n\n        if (!canMoveNode(node, fromIndex, to)) {\n            return\n        }\n\n        node.remove()\n\n        // Compensate for index if already removed from parent:\n        const toIndex = (fromParent === to.parent && to.index > fromIndex) ? to.index - 1 : to.index\n\n        if (to.dropOnNode) {\n            to.parent.appendChild(node.data)\n        } else {\n            to.parent.addChild(node.data, toIndex)\n        }\n\n        this.fireEvent({\n            eventName: TREE_EVENTS.moveNode,\n            node,\n            to: { parent: to.parent.data, index: toIndex },\n        })\n    }\n\n    scrollIntoView(node: TreeNode, force: boolean, scrollToMiddle: boolean) {\n        this.scrollIntoView$.next({\n            node, force, scrollToMiddle,\n        })\n    }\n\n    private filterNode(\n        ids: Map,\n        node: TreeNode,\n        filterFn: (node: TreeNode) => boolean,\n        autoExpand: boolean,\n    ) {\n        // if node passes function then it's visible\n        let isVisible = filterFn(node)\n\n        if (node.children) {\n            // if one of node's children passes filter then this node is also visible\n            node.children.forEach((child) => {\n                if (this.filterNode(ids, child, filterFn, autoExpand)) {\n                    isVisible = true\n                }\n            })\n        }\n\n        // mark node as hidden\n        if (!isVisible) {\n            ids.set(node.id, true)\n        }\n\n        // auto expand parents to make sure the filtered nodes are visible\n        if (autoExpand && isVisible) {\n            node.ensureVisible()\n        }\n\n        return isVisible\n    }\n\n    private setSingleActiveNode(node: TreeNode, active: boolean) {\n        // Deactivate all other nodes:\n        this.activeNodes\n            .filter((activeNode) => activeNode !== node)\n            .forEach((activeNode) => {\n                this.fireEvent({ eventName: TREE_EVENTS.deactivate, node: activeNode })\n            })\n\n        if (active) {\n            this.activeNodeIds = new Map([[node.id, true]])\n        } else {\n            this.activeNodeIds = new Map()\n        }\n    }\n\n    private setMultiActiveNodes(node: TreeNode, active: boolean) {\n        this.activeNodeIds.set(node.id, active)\n    }\n}\n\nfunction canMoveNode(node: TreeNode, fromIndex: number, to: { parent: TreeNode, index: number }) {\n    // same node:\n    if (node.parent === to.parent && fromIndex === to.index) {\n        return false\n    }\n\n    return !to.parent.isDescendantOf(node)\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeDataOptions.html":{"url":"interfaces/TreeDataOptions.html","title":"interface - TreeDataOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreeDataOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/models/tree-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        actionMapping\n                                \n                                \n                                        childrenField\n                                \n                                \n                                        displayField\n                                \n                                \n                                        idField\n                                \n                                \n                                        isExpandedField\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getChildren\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getChildren\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getChildren(node: TreeNode)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:163\n                                        \n                                    \n            \n                            \n                                \n                                        Supply function for getting fields asynchronously. Should return a Promise\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionMapping\n                                    \n                                \n                                \n                                    \n                                        actionMapping:     ActionMapping\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionMapping\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:158\n                                        \n                                    \n\n                            \n                                \n                                    Change the default mouse and key actions on the tree\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        childrenField\n                                    \n                                \n                                \n                                    \n                                        childrenField:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:142\n                                        \n                                    \n\n                            \n                                \n                                    Override children field. Default: 'children'\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayField\n                                    \n                                \n                                \n                                    \n                                        displayField:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:146\n                                        \n                                    \n\n                            \n                                \n                                    Override display field. Default: 'name'\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idField\n                                    \n                                \n                                \n                                    \n                                        idField:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:150\n                                        \n                                    \n\n                            \n                                \n                                    Override id field. Default: 'id'\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isExpandedField\n                                    \n                                \n                                \n                                    \n                                        isExpandedField:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:154\n                                        \n                                    \n\n                            \n                                \n                                    Override isExpanded field. Default: 'isExpanded'\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import defaults from 'lodash-es/defaults'\nimport defaultsDeep from 'lodash-es/defaultsDeep'\nimport isNumber from 'lodash-es/isNumber'\nimport { defaultActionMapping } from './actions'\nimport { TreeModel } from './tree-model'\nimport { TreeNode } from './tree-node'\n\n/**\n * common functions to handle tree actions\n */\nexport interface ActionHandler {\n    (tree: TreeModel, node: TreeNode, $event: any, ...rest);\n}\n\n/**\n * a mapping model to link mouse events and keyboard events with actions\n */\nexport interface ActionMapping {\n    mouse?: {\n        click?: ActionHandler,\n        dblClick?: ActionHandler,\n        contextMenu?: ActionHandler,\n        expanderClick?: ActionHandler,\n        dragStart?: ActionHandler,\n        drag?: ActionHandler,\n        dragEnd?: ActionHandler,\n        dragOver?: ActionHandler,\n        dragLeave?: ActionHandler,\n        dragEnter?: ActionHandler,\n        drop?: ActionHandler,\n    };\n    keys?: {\n        [key: number]: ActionHandler\n    };\n}\n\nexport interface DropTarget {\n    parent: TreeNode\n    index: number\n}\n\nexport type IAllowDropFn = (element: TreeNode, to: DropTarget, $event?: DragEvent) => boolean\n\nexport type IAllowDragFn = (node: TreeNode) => boolean\n\nexport type ILevelPaddingFn = (node: TreeNode) => string\n\nexport const defaultUIOptions: TreeUIOptions = {\n    allowDrag: false,\n    allowDrop: false,\n    levelPadding: () => '0px',\n    useVirtualScroll: false,\n    nodeClass: () => '',\n}\n\nexport const defaultDataOptions: TreeDataOptions = {\n    childrenField: 'children',\n    displayField: 'name',\n    idField: 'id',\n    isExpandedField: 'isExpanded',\n    actionMapping: defaultActionMapping,\n    getChildren: (node) => null,\n}\n\nexport interface TreeUIOptions {\n    /**\n     * Specify if dragging tree nodes is allowed.\n     * This could be a boolean, or a function that receives a TreeNode and returns a boolean\n     *\n     * **Default value: false**\n     *\n     * Example:\n     * ```\n     * options = {\n     *   allowDrag: true\n     * }\n     * ```\n     */\n    allowDrag?: boolean | IAllowDragFn;\n    /**\n     * Specify whether dropping inside the tree is allowed. Optional types:\n     *  - boolean\n     *  - (element:any, to:{parent:ITreeNode, index:number}):boolean\n     * A function that receives the dragged element, and the drop location (parent node and index inside the parent),\n     * and returns true or false.\n     *\n     * **Default Value: true**\n     *\n     * example:\n     * ```\n     * options = {\n     *  allowDrop: (element, {parent, index}) => parent.isLeaf\n     * }\n     * ```\n     */\n    allowDrop?: boolean | IAllowDropFn;\n    /**\n     * Specify padding per node instead of children padding (to allow full row select for example)\n     */\n    levelPadding?: ILevelPaddingFn;\n    /**\n     * Boolean whether virtual scroll should be used.\n     * Increases performance for large trees\n     * Default is false\n     */\n    useVirtualScroll?: boolean;\n\n    /**\n     * Supply function for getting a custom class for the node component\n     */\n    nodeClass?(node: TreeNode): string;\n}\n\nexport interface RawTreeUIOptions {\n    allowDrag?: boolean | IAllowDragFn;\n    allowDrop?: boolean | IAllowDropFn;\n    levelPadding?: number | ILevelPaddingFn;\n    useVirtualScroll?: boolean;\n\n    nodeClass?(node: TreeNode): string;\n}\n\n/**\n * create tree options about UI with defaults\n * @param rawOpts\n */\nexport function createTreeUIOptions(rawOpts: RawTreeUIOptions = {}): TreeUIOptions {\n    const levelPaddingOpt = rawOpts.levelPadding\n    if (isNumber(levelPaddingOpt)) {\n        rawOpts.levelPadding = function (node: TreeNode) {\n            return (levelPaddingOpt + levelPaddingOpt * (node.level - 1)) + 'px'\n        }\n    }\n\n    return defaults({}, rawOpts, defaultUIOptions)\n}\n\nexport interface TreeDataOptions {\n    /**\n     * Override children field. Default: 'children'\n     */\n    childrenField?: string;\n    /**\n     * Override display field. Default: 'name'\n     */\n    displayField?: string;\n    /**\n     * Override id field. Default: 'id'\n     */\n    idField?: string;\n    /**\n     * Override isExpanded field. Default: 'isExpanded'\n     */\n    isExpandedField?: string;\n    /**\n     * Change the default mouse and key actions on the tree\n     */\n    actionMapping?: ActionMapping;\n\n    /**\n     * Supply function for getting fields asynchronously. Should return a Promise\n     */\n    getChildren?(node: TreeNode): Promise;\n}\n\n/**\n * create tree options about data with defaults\n * @param rawOpts\n */\nexport function createTreeDataOptions(rawOpts: TreeDataOptions = {}): TreeDataOptions {\n    return defaultsDeep({}, rawOpts, defaultDataOptions)\n}\n\n// export const TREE_DATA_OPTIONS = new InjectionToken('TREE_DATA_OPTIONS')\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeEvent.html":{"url":"interfaces/TreeEvent.html","title":"interface - TreeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreeEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/models/events.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        eventName\n                                \n                                \n                                        isExpanded\n                                \n                                \n                                        node\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventName\n                                    \n                                \n                                \n                                    \n                                        eventName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/events.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isExpanded\n                                    \n                                \n                                \n                                    \n                                        isExpanded:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/events.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:     TreeNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TreeNode\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/events.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/events.ts:7\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { TreeNode } from './tree-node'\n\nexport interface TreeEvent {\n    eventName: string\n    node?: TreeNode\n    isExpanded?: boolean\n    to?: { parent: TreeNode; index: number }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeUIOptions.html":{"url":"interfaces/TreeUIOptions.html","title":"interface - TreeUIOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreeUIOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-tree/models/tree-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        allowDrag\n                                \n                                \n                                        allowDrop\n                                \n                                \n                                        levelPadding\n                                \n                                \n                                        useVirtualScroll\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nodeClass\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        nodeClass\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            nodeClass(node: TreeNode)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:111\n                                        \n                                    \n            \n                            \n                                \n                                        Supply function for getting a custom class for the node component\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              node\n                                                              \n                                                                      TreeNode\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowDrag\n                                    \n                                \n                                \n                                    \n                                        allowDrag:     boolean | IAllowDragFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | IAllowDragFn\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:79\n                                        \n                                    \n\n                            \n                                \n                                    Specify if dragging tree nodes is allowed.\nThis could be a boolean, or a function that receives a TreeNode and returns a boolean\nDefault value: false\nExample:\noptions = {\n   allowDrag: true\n}\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowDrop\n                                    \n                                \n                                \n                                    \n                                        allowDrop:     boolean | IAllowDropFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | IAllowDropFn\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:96\n                                        \n                                    \n\n                            \n                                \n                                    Specify whether dropping inside the tree is allowed. Optional types:\n\nboolean\n(element:any, to:{parent:ITreeNode, index:number}):boolean\nA function that receives the dragged element, and the drop location (parent node and index inside the parent),\nand returns true or false.\n\nDefault Value: true\nexample:\noptions = {\n  allowDrop: (element, {parent, index}) => parent.isLeaf\n}\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        levelPadding\n                                    \n                                \n                                \n                                    \n                                        levelPadding:     ILevelPaddingFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ILevelPaddingFn\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:100\n                                        \n                                    \n\n                            \n                                \n                                    Specify padding per node instead of children padding (to allow full row select for example)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useVirtualScroll\n                                    \n                                \n                                \n                                    \n                                        useVirtualScroll:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/ngx-tree/models/tree-options.ts:106\n                                        \n                                    \n\n                            \n                                \n                                    Boolean whether virtual scroll should be used.\nIncreases performance for large trees\nDefault is false\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import defaults from 'lodash-es/defaults'\nimport defaultsDeep from 'lodash-es/defaultsDeep'\nimport isNumber from 'lodash-es/isNumber'\nimport { defaultActionMapping } from './actions'\nimport { TreeModel } from './tree-model'\nimport { TreeNode } from './tree-node'\n\n/**\n * common functions to handle tree actions\n */\nexport interface ActionHandler {\n    (tree: TreeModel, node: TreeNode, $event: any, ...rest);\n}\n\n/**\n * a mapping model to link mouse events and keyboard events with actions\n */\nexport interface ActionMapping {\n    mouse?: {\n        click?: ActionHandler,\n        dblClick?: ActionHandler,\n        contextMenu?: ActionHandler,\n        expanderClick?: ActionHandler,\n        dragStart?: ActionHandler,\n        drag?: ActionHandler,\n        dragEnd?: ActionHandler,\n        dragOver?: ActionHandler,\n        dragLeave?: ActionHandler,\n        dragEnter?: ActionHandler,\n        drop?: ActionHandler,\n    };\n    keys?: {\n        [key: number]: ActionHandler\n    };\n}\n\nexport interface DropTarget {\n    parent: TreeNode\n    index: number\n}\n\nexport type IAllowDropFn = (element: TreeNode, to: DropTarget, $event?: DragEvent) => boolean\n\nexport type IAllowDragFn = (node: TreeNode) => boolean\n\nexport type ILevelPaddingFn = (node: TreeNode) => string\n\nexport const defaultUIOptions: TreeUIOptions = {\n    allowDrag: false,\n    allowDrop: false,\n    levelPadding: () => '0px',\n    useVirtualScroll: false,\n    nodeClass: () => '',\n}\n\nexport const defaultDataOptions: TreeDataOptions = {\n    childrenField: 'children',\n    displayField: 'name',\n    idField: 'id',\n    isExpandedField: 'isExpanded',\n    actionMapping: defaultActionMapping,\n    getChildren: (node) => null,\n}\n\nexport interface TreeUIOptions {\n    /**\n     * Specify if dragging tree nodes is allowed.\n     * This could be a boolean, or a function that receives a TreeNode and returns a boolean\n     *\n     * **Default value: false**\n     *\n     * Example:\n     * ```\n     * options = {\n     *   allowDrag: true\n     * }\n     * ```\n     */\n    allowDrag?: boolean | IAllowDragFn;\n    /**\n     * Specify whether dropping inside the tree is allowed. Optional types:\n     *  - boolean\n     *  - (element:any, to:{parent:ITreeNode, index:number}):boolean\n     * A function that receives the dragged element, and the drop location (parent node and index inside the parent),\n     * and returns true or false.\n     *\n     * **Default Value: true**\n     *\n     * example:\n     * ```\n     * options = {\n     *  allowDrop: (element, {parent, index}) => parent.isLeaf\n     * }\n     * ```\n     */\n    allowDrop?: boolean | IAllowDropFn;\n    /**\n     * Specify padding per node instead of children padding (to allow full row select for example)\n     */\n    levelPadding?: ILevelPaddingFn;\n    /**\n     * Boolean whether virtual scroll should be used.\n     * Increases performance for large trees\n     * Default is false\n     */\n    useVirtualScroll?: boolean;\n\n    /**\n     * Supply function for getting a custom class for the node component\n     */\n    nodeClass?(node: TreeNode): string;\n}\n\nexport interface RawTreeUIOptions {\n    allowDrag?: boolean | IAllowDragFn;\n    allowDrop?: boolean | IAllowDropFn;\n    levelPadding?: number | ILevelPaddingFn;\n    useVirtualScroll?: boolean;\n\n    nodeClass?(node: TreeNode): string;\n}\n\n/**\n * create tree options about UI with defaults\n * @param rawOpts\n */\nexport function createTreeUIOptions(rawOpts: RawTreeUIOptions = {}): TreeUIOptions {\n    const levelPaddingOpt = rawOpts.levelPadding\n    if (isNumber(levelPaddingOpt)) {\n        rawOpts.levelPadding = function (node: TreeNode) {\n            return (levelPaddingOpt + levelPaddingOpt * (node.level - 1)) + 'px'\n        }\n    }\n\n    return defaults({}, rawOpts, defaultUIOptions)\n}\n\nexport interface TreeDataOptions {\n    /**\n     * Override children field. Default: 'children'\n     */\n    childrenField?: string;\n    /**\n     * Override display field. Default: 'name'\n     */\n    displayField?: string;\n    /**\n     * Override id field. Default: 'id'\n     */\n    idField?: string;\n    /**\n     * Override isExpanded field. Default: 'isExpanded'\n     */\n    isExpandedField?: string;\n    /**\n     * Change the default mouse and key actions on the tree\n     */\n    actionMapping?: ActionMapping;\n\n    /**\n     * Supply function for getting fields asynchronously. Should return a Promise\n     */\n    getChildren?(node: TreeNode): Promise;\n}\n\n/**\n * create tree options about data with defaults\n * @param rawOpts\n */\nexport function createTreeDataOptions(rawOpts: TreeDataOptions = {}): TreeDataOptions {\n    return defaultsDeep({}, rawOpts, defaultDataOptions)\n}\n\n// export const TREE_DATA_OPTIONS = new InjectionToken('TREE_DATA_OPTIONS')\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            binarySearch\n                        \n                        \n                            canMoveNode\n                        \n                        \n                            createTreeDataOptions\n                        \n                        \n                            createTreeUIOptions\n                        \n                        \n                            uuid\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-tree/util.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                binarySearch\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    binarySearch(nodes: undefined, condition: undefined, firstIndex: )\n                        \n                    \n    \n    \n    \n                    \n                        \n                                a binary search function\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      nodes\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      condition\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      firstIndex\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/ngx-tree/models/tree-model.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                canMoveNode\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    canMoveNode(node: typeReference, fromIndex: number, to: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      fromIndex\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      to\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/ngx-tree/models/tree-options.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                createTreeDataOptions\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    createTreeDataOptions(rawOpts: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                create tree options about data with defaults\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      rawOpts\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                createTreeUIOptions\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    createTreeUIOptions(rawOpts: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                create tree options about UI with defaults\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      rawOpts\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/ngx-tree/models/tree-node.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                uuid\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    uuid()\n                        \n                    \n    \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _uuid\n                        \n                        \n                            defaultActionMapping\n                        \n                        \n                            defaultDataOptions\n                        \n                        \n                            defaultUIOptions\n                        \n                        \n                            DISABLE_ON_SCROLL_CLASS\n                        \n                        \n                            DRAG_DISABLED_CLASS\n                        \n                        \n                            DRAG_OVER_CLASS\n                        \n                        \n                            DRAGGING_TARGET_CLASS\n                        \n                        \n                            EXPANSION_PANEL_ANIMATION_TIMING\n                        \n                        \n                            id\n                        \n                        \n                            NUMBER_KEYS\n                        \n                        \n                            STRING_KEYS\n                        \n                        \n                            TREE_ACTIONS\n                        \n                        \n                            TREE_EVENTS\n                        \n                        \n                            VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA\n                        \n                        \n                            Y_OFFSET_NODE_SIZE\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-tree/models/tree-node.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                _uuid\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            _uuid:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n    \n    src/ngx-tree/models/actions.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                defaultActionMapping\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            defaultActionMapping:     ActionMapping\n    \n                        \n                    \n                        \n                            \n                                Type :     ActionMapping\n    \n                            \n                        \n                        \n                            \n                                Default value : {\n        mouse: {\n            click: TREE_ACTIONS.TOGGLE_SELECTED,\n            dblClick: null,\n            contextMenu: null,\n            expanderClick: TREE_ACTIONS.TOGGLE_EXPANDED,\n            drop: TREE_ACTIONS.MOVE_NODE,\n        },\n        keys: {\n            [NUMBER_KEYS.RIGHT]: TREE_ACTIONS.DRILL_DOWN,\n            [NUMBER_KEYS.LEFT]: TREE_ACTIONS.DRILL_UP,\n            [NUMBER_KEYS.DOWN]: TREE_ACTIONS.NEXT_NODE,\n            [NUMBER_KEYS.UP]: TREE_ACTIONS.PREVIOUS_NODE,\n            [NUMBER_KEYS.SPACE]: TREE_ACTIONS.TOGGLE_SELECTED,\n            [NUMBER_KEYS.ENTER]: TREE_ACTIONS.TOGGLE_SELECTED,\n        },\n    }\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TREE_ACTIONS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TREE_ACTIONS:     object\n    \n                        \n                    \n                        \n                            \n                                Type :     object\n    \n                            \n                        \n                        \n                            \n                                Default value : {\n        TOGGLE_SELECTED: (tree: TreeModel, node: TreeNode, $event: any) => node && node.toggleActivated(),\n        TOGGLE_SELECTED_MULTI: (tree: TreeModel, node: TreeNode, $event: any) => node && node.toggleActivated(true),\n        SELECT: (tree: TreeModel, node: TreeNode, $event: any) => node.setActive(true),\n        DESELECT: (tree: TreeModel, node: TreeNode, $event: any) => node.setActive(false),\n        FOCUS: (tree: TreeModel, node: TreeNode, $event: any) => node.focus(),\n        TOGGLE_EXPANDED: (tree: TreeModel, node: TreeNode, $event: any) => {\n            $event.stopPropagation()\n    \n            return node.hasChildren && node.toggleExpanded()\n        },\n        EXPAND: (tree: TreeModel, node: TreeNode, $event: any) => node.expand(),\n        COLLAPSE: (tree: TreeModel, node: TreeNode, $event: any) => node.collapse(),\n        DRILL_DOWN: (tree: TreeModel, node: TreeNode, $event: any) => tree.focusDrillDown(),\n        DRILL_UP: (tree: TreeModel, node: TreeNode, $event: any) => tree.focusDrillUp(),\n        NEXT_NODE: (tree: TreeModel, node: TreeNode, $event: any) => tree.focusNextNode(),\n        PREVIOUS_NODE: (tree: TreeModel, node: TreeNode, $event: any) => tree.focusPreviousNode(),\n        MOVE_NODE: (\n            tree: TreeModel,\n            node: TreeNode,\n            $event: any,\n            { from, to }: { from: TreeNode; to: { parent: TreeNode; index: number, dropOnNode: boolean } },\n        ) => {\n            // default action assumes from = node, to = {parent, index}\n            tree.moveNode(from, to)\n        },\n    }\n                            \n                        \n    \n    \n                \n            \n    \n    src/ngx-tree/models/tree-options.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                defaultDataOptions\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            defaultDataOptions:     TreeDataOptions\n    \n                        \n                    \n                        \n                            \n                                Type :     TreeDataOptions\n    \n                            \n                        \n                        \n                            \n                                Default value : {\n        childrenField: 'children',\n        displayField: 'name',\n        idField: 'id',\n        isExpandedField: 'isExpanded',\n        actionMapping: defaultActionMapping,\n        getChildren: (node) => null,\n    }\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                defaultUIOptions\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            defaultUIOptions:     TreeUIOptions\n    \n                        \n                    \n                        \n                            \n                                Type :     TreeUIOptions\n    \n                            \n                        \n                        \n                            \n                                Default value : {\n        allowDrag: false,\n        allowDrop: false,\n        levelPadding: () => '0px',\n        useVirtualScroll: false,\n        nodeClass: () => '',\n    }\n                            \n                        \n    \n    \n                \n            \n    \n    src/ngx-tree/components/tree-viewport/tree-viewport.component.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                DISABLE_ON_SCROLL_CLASS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            DISABLE_ON_SCROLL_CLASS:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 'disable-events-on-scroll'\n                            \n                        \n    \n    \n                \n            \n    \n    src/ngx-tree/directives/tree-drop.directive.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                DRAG_DISABLED_CLASS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            DRAG_DISABLED_CLASS:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 'is-dragging-over-disabled'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                DRAG_OVER_CLASS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            DRAG_OVER_CLASS:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 'is-dragging-over'\n                            \n                        \n    \n    \n                \n            \n    \n    src/ngx-tree/directives/tree-drag.directive.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                DRAGGING_TARGET_CLASS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            DRAGGING_TARGET_CLASS:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 'ngx-tree-dragging-target'\n                            \n                        \n    \n    \n                \n            \n    \n    src/ngx-tree/components/tree-node-children/tree-node-children.component.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                EXPANSION_PANEL_ANIMATION_TIMING\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            EXPANSION_PANEL_ANIMATION_TIMING:     \n    \n                        \n                    \n                        \n                            \n                                Default value : '225ms cubic-bezier(0.4,0.0,0.2,1)'\n                            \n                        \n    \n                    \n                        \n                            Time and timing curve for expansion panel animations. \n    \n                        \n                    \n    \n                \n            \n    \n    src/ngx-tree/services/tree-virtual-scroll.service.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                id\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            id:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 0\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA')\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                Y_OFFSET_NODE_SIZE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            Y_OFFSET_NODE_SIZE:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 3\n                            \n                        \n    \n    \n                \n            \n    \n    src/ngx-tree/constants/keys.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NUMBER_KEYS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NUMBER_KEYS:     object\n    \n                        \n                    \n                        \n                            \n                                Type :     object\n    \n                            \n                        \n                        \n                            \n                                Default value : {\n        LEFT: 37,\n        UP: 38,\n        RIGHT: 39,\n        DOWN: 40,\n        ENTER: 13,\n        SPACE: 32,\n    }\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                STRING_KEYS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            STRING_KEYS:     object\n    \n                        \n                    \n                        \n                            \n                                Type :     object\n    \n                            \n                        \n                        \n                            \n                                Default value : {\n        LEFT: 'ArrowLeft',\n        UP: 'ArrowUp',\n        RIGHT: 'ArrowRight',\n        DOWN: 'ArrowDown',\n        ENTER: 'Enter',\n        SPACE: ' ',\n    }\n                            \n                        \n    \n    \n                \n            \n    \n    src/ngx-tree/constants/events.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                TREE_EVENTS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TREE_EVENTS:     object\n    \n                        \n                    \n                        \n                            \n                                Type :     object\n    \n                            \n                        \n                        \n                            \n                                Default value : {\n        expand: 'expand',\n        collapse: 'collapse',\n        toggleExpander: 'toggleExpander',\n        activate: 'activate',\n        deactivate: 'deactivate',\n        focus: 'focus',\n        blur: 'blur',\n        initialized: 'initialized',\n        moveNode: 'moveNode',\n        loadChildren: 'loadChildren',\n        changeFilter: 'changeFilter',\n        removeNode: 'removeNode',\n        addNode: 'addNode',\n    }\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllowDropPredicate\n                        \n                        \n                            IAllowDragFn\n                        \n                        \n                            IAllowDropFn\n                        \n                        \n                            ILevelPaddingFn\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-tree/directives/tree-drop.directive.ts\n    \n            \n                \n                    \n                        \n                            \n                            AllowDropPredicate\n                        \n                    \n                    \n                        \n                            AllowDropPredicate()\n                        \n                    \n                \n            \n    \n    src/ngx-tree/models/tree-options.ts\n    \n            \n                \n                    \n                        \n                            \n                            IAllowDragFn\n                        \n                    \n                    \n                        \n                            IAllowDragFn()\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            IAllowDropFn\n                        \n                    \n                    \n                        \n                            IAllowDropFn()\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            ILevelPaddingFn\n                        \n                    \n                    \n                        \n                            ILevelPaddingFn()\n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/ngx-tree/components/tree-loading/tree-loading.component.ts\n            \n            \n                component\n            \n            \n                TreeLoadingComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/ngx-tree/components/tree-node-children/tree-node-children.component.ts\n            \n            \n                component\n            \n            \n                TreeNodeChildrenComponent\n            \n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                    src/ngx-tree/components/tree-node-children/tree-node-children.component.ts\n            \n            \n                variable\n            \n            \n                EXPANSION_PANEL_ANIMATION_TIMING\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/components/tree-node-content/tree-node-content.component.ts\n            \n            \n                component\n            \n            \n                TreeNodeContentComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/ngx-tree/components/tree-node-drop-slot/tree-node-drop-slot.component.ts\n            \n            \n                component\n            \n            \n                TreeNodeDropSlotComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/ngx-tree/components/tree-node-expander/tree-node-expander.component.ts\n            \n            \n                component\n            \n            \n                TreeNodeExpanderComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/ngx-tree/components/tree-node-wrapper/tree-node-wrapper.component.ts\n            \n            \n                component\n            \n            \n                TreeNodeWrapperComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/ngx-tree/components/tree-node/tree-node.component.ts\n            \n            \n                component\n            \n            \n                TreeNodeComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/ngx-tree/components/tree-viewport/tree-viewport.component.ts\n            \n            \n                component\n            \n            \n                TreeViewportComponent\n            \n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                    src/ngx-tree/components/tree-viewport/tree-viewport.component.ts\n            \n            \n                variable\n            \n            \n                DISABLE_ON_SCROLL_CLASS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/components/tree/tree.component.ts\n            \n            \n                component\n            \n            \n                TreeComponent\n            \n            \n                6 %\n                (3/44)\n            \n        \n        \n            \n                \n                    src/ngx-tree/constants/events.ts\n            \n            \n                interface\n            \n            \n                EventsMap\n            \n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                    src/ngx-tree/constants/events.ts\n            \n            \n                variable\n            \n            \n                TREE_EVENTS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/constants/keys.ts\n            \n            \n                variable\n            \n            \n                NUMBER_KEYS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/constants/keys.ts\n            \n            \n                variable\n            \n            \n                STRING_KEYS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/directives/tree-drag.directive.ts\n            \n            \n                directive\n            \n            \n                TreeDragDirective\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/ngx-tree/directives/tree-drag.directive.ts\n            \n            \n                variable\n            \n            \n                DRAGGING_TARGET_CLASS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/directives/tree-drop.directive.ts\n            \n            \n                directive\n            \n            \n                TreeDropDirective\n            \n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                    src/ngx-tree/directives/tree-drop.directive.ts\n            \n            \n                variable\n            \n            \n                DRAG_DISABLED_CLASS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/directives/tree-drop.directive.ts\n            \n            \n                variable\n            \n            \n                DRAG_OVER_CLASS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/actions.ts\n            \n            \n                variable\n            \n            \n                defaultActionMapping\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/actions.ts\n            \n            \n                variable\n            \n            \n                TREE_ACTIONS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/events.ts\n            \n            \n                interface\n            \n            \n                TreeEvent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-model.ts\n            \n            \n                class\n            \n            \n                TreeModel\n            \n            \n                29 %\n                (15/51)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-model.ts\n            \n            \n                interface\n            \n            \n                ScrollIntoViewTarget\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-model.ts\n            \n            \n                function\n            \n            \n                canMoveNode\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-node.ts\n            \n            \n                class\n            \n            \n                TreeNode\n            \n            \n                42 %\n                (21/49)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-node.ts\n            \n            \n                function\n            \n            \n                uuid\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-node.ts\n            \n            \n                variable\n            \n            \n                _uuid\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-options.ts\n            \n            \n                interface\n            \n            \n                ActionHandler\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-options.ts\n            \n            \n                interface\n            \n            \n                ActionMapping\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-options.ts\n            \n            \n                interface\n            \n            \n                DropTarget\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-options.ts\n            \n            \n                interface\n            \n            \n                RawTreeUIOptions\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-options.ts\n            \n            \n                interface\n            \n            \n                TreeDataOptions\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-options.ts\n            \n            \n                interface\n            \n            \n                TreeUIOptions\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-options.ts\n            \n            \n                function\n            \n            \n                createTreeDataOptions\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-options.ts\n            \n            \n                function\n            \n            \n                createTreeUIOptions\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-options.ts\n            \n            \n                variable\n            \n            \n                defaultDataOptions\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/models/tree-options.ts\n            \n            \n                variable\n            \n            \n                defaultUIOptions\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/services/tree-dragging-target.service.ts\n            \n            \n                injectable\n            \n            \n                TreeDraggingTargetService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/ngx-tree/services/tree-virtual-scroll.service.ts\n            \n            \n                injectable\n            \n            \n                TreeVirtualScroll\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                    src/ngx-tree/services/tree-virtual-scroll.service.ts\n            \n            \n                variable\n            \n            \n                id\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/services/tree-virtual-scroll.service.ts\n            \n            \n                variable\n            \n            \n                VIRTUAL_SCROLL_NODE_HEIGHT_QUOTA\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/services/tree-virtual-scroll.service.ts\n            \n            \n                variable\n            \n            \n                Y_OFFSET_NODE_SIZE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/ngx-tree/util.ts\n            \n            \n                function\n            \n            \n                binarySearch\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
